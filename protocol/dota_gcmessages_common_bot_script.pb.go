// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dota_gcmessages_common_bot_script.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CMsgBotWorldState_UnitType int32

const (
	CMsgBotWorldState_INVALID      CMsgBotWorldState_UnitType = 0
	CMsgBotWorldState_HERO         CMsgBotWorldState_UnitType = 1
	CMsgBotWorldState_CREEP_HERO   CMsgBotWorldState_UnitType = 2
	CMsgBotWorldState_LANE_CREEP   CMsgBotWorldState_UnitType = 3
	CMsgBotWorldState_JUNGLE_CREEP CMsgBotWorldState_UnitType = 4
	CMsgBotWorldState_ROSHAN       CMsgBotWorldState_UnitType = 5
	CMsgBotWorldState_TOWER        CMsgBotWorldState_UnitType = 6
	CMsgBotWorldState_BARRACKS     CMsgBotWorldState_UnitType = 7
	CMsgBotWorldState_SHRINE       CMsgBotWorldState_UnitType = 8
	CMsgBotWorldState_FORT         CMsgBotWorldState_UnitType = 9
	CMsgBotWorldState_BUILDING     CMsgBotWorldState_UnitType = 10
	CMsgBotWorldState_COURIER      CMsgBotWorldState_UnitType = 11
	CMsgBotWorldState_WARD         CMsgBotWorldState_UnitType = 12
)

var CMsgBotWorldState_UnitType_name = map[int32]string{
	0:  "INVALID",
	1:  "HERO",
	2:  "CREEP_HERO",
	3:  "LANE_CREEP",
	4:  "JUNGLE_CREEP",
	5:  "ROSHAN",
	6:  "TOWER",
	7:  "BARRACKS",
	8:  "SHRINE",
	9:  "FORT",
	10: "BUILDING",
	11: "COURIER",
	12: "WARD",
}

var CMsgBotWorldState_UnitType_value = map[string]int32{
	"INVALID":      0,
	"HERO":         1,
	"CREEP_HERO":   2,
	"LANE_CREEP":   3,
	"JUNGLE_CREEP": 4,
	"ROSHAN":       5,
	"TOWER":        6,
	"BARRACKS":     7,
	"SHRINE":       8,
	"FORT":         9,
	"BUILDING":     10,
	"COURIER":      11,
	"WARD":         12,
}

func (x CMsgBotWorldState_UnitType) Enum() *CMsgBotWorldState_UnitType {
	p := new(CMsgBotWorldState_UnitType)
	*p = x
	return p
}

func (x CMsgBotWorldState_UnitType) String() string {
	return proto.EnumName(CMsgBotWorldState_UnitType_name, int32(x))
}

func (x *CMsgBotWorldState_UnitType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgBotWorldState_UnitType_value, data, "CMsgBotWorldState_UnitType")
	if err != nil {
		return err
	}
	*x = CMsgBotWorldState_UnitType(value)
	return nil
}

func (CMsgBotWorldState_UnitType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 0}
}

type CMsgBotWorldState_CourierState int32

const (
	CMsgBotWorldState_COURIER_STATE_INIT              CMsgBotWorldState_CourierState = -1
	CMsgBotWorldState_COURIER_STATE_IDLE              CMsgBotWorldState_CourierState = 0
	CMsgBotWorldState_COURIER_STATE_AT_BASE           CMsgBotWorldState_CourierState = 1
	CMsgBotWorldState_COURIER_STATE_MOVING            CMsgBotWorldState_CourierState = 2
	CMsgBotWorldState_COURIER_STATE_DELIVERING_ITEMS  CMsgBotWorldState_CourierState = 3
	CMsgBotWorldState_COURIER_STATE_RETURNING_TO_BASE CMsgBotWorldState_CourierState = 4
	CMsgBotWorldState_COURIER_STATE_DEAD              CMsgBotWorldState_CourierState = 5
)

var CMsgBotWorldState_CourierState_name = map[int32]string{
	-1: "COURIER_STATE_INIT",
	0:  "COURIER_STATE_IDLE",
	1:  "COURIER_STATE_AT_BASE",
	2:  "COURIER_STATE_MOVING",
	3:  "COURIER_STATE_DELIVERING_ITEMS",
	4:  "COURIER_STATE_RETURNING_TO_BASE",
	5:  "COURIER_STATE_DEAD",
}

var CMsgBotWorldState_CourierState_value = map[string]int32{
	"COURIER_STATE_INIT":              -1,
	"COURIER_STATE_IDLE":              0,
	"COURIER_STATE_AT_BASE":           1,
	"COURIER_STATE_MOVING":            2,
	"COURIER_STATE_DELIVERING_ITEMS":  3,
	"COURIER_STATE_RETURNING_TO_BASE": 4,
	"COURIER_STATE_DEAD":              5,
}

func (x CMsgBotWorldState_CourierState) Enum() *CMsgBotWorldState_CourierState {
	p := new(CMsgBotWorldState_CourierState)
	*p = x
	return p
}

func (x CMsgBotWorldState_CourierState) String() string {
	return proto.EnumName(CMsgBotWorldState_CourierState_name, int32(x))
}

func (x *CMsgBotWorldState_CourierState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgBotWorldState_CourierState_value, data, "CMsgBotWorldState_CourierState")
	if err != nil {
		return err
	}
	*x = CMsgBotWorldState_CourierState(value)
	return nil
}

func (CMsgBotWorldState_CourierState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 1}
}

type CMsgBotWorldState struct {
	TeamId               *uint32                                 `protobuf:"varint,1,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	GameTime             *float32                                `protobuf:"fixed32,2,opt,name=game_time,json=gameTime" json:"game_time,omitempty"`
	DotaTime             *float32                                `protobuf:"fixed32,3,opt,name=dota_time,json=dotaTime" json:"dota_time,omitempty"`
	GameState            *uint32                                 `protobuf:"varint,4,opt,name=game_state,json=gameState" json:"game_state,omitempty"`
	HeroPickState        *uint32                                 `protobuf:"varint,5,opt,name=hero_pick_state,json=heroPickState" json:"hero_pick_state,omitempty"`
	TimeOfDay            *float32                                `protobuf:"fixed32,6,opt,name=time_of_day,json=timeOfDay" json:"time_of_day,omitempty"`
	GlyphCooldown        *float32                                `protobuf:"fixed32,7,opt,name=glyph_cooldown,json=glyphCooldown" json:"glyph_cooldown,omitempty"`
	GlyphCooldownEnemy   *float32                                `protobuf:"fixed32,8,opt,name=glyph_cooldown_enemy,json=glyphCooldownEnemy" json:"glyph_cooldown_enemy,omitempty"`
	Players              []*CMsgBotWorldState_Player             `protobuf:"bytes,10,rep,name=players" json:"players,omitempty"`
	Units                []*CMsgBotWorldState_Unit               `protobuf:"bytes,11,rep,name=units" json:"units,omitempty"`
	DroppedItems         []*CMsgBotWorldState_DroppedItem        `protobuf:"bytes,12,rep,name=dropped_items,json=droppedItems" json:"dropped_items,omitempty"`
	DroppedItemsDeltas   []int32                                 `protobuf:"varint,112,rep,name=dropped_items_deltas,json=droppedItemsDeltas" json:"dropped_items_deltas,omitempty"`
	RuneInfos            []*CMsgBotWorldState_RuneInfo           `protobuf:"bytes,13,rep,name=rune_infos,json=runeInfos" json:"rune_infos,omitempty"`
	RuneInfosDeltas      []int32                                 `protobuf:"varint,113,rep,name=rune_infos_deltas,json=runeInfosDeltas" json:"rune_infos_deltas,omitempty"`
	IncomingTeleports    []*CMsgBotWorldState_TeleportInfo       `protobuf:"bytes,14,rep,name=incoming_teleports,json=incomingTeleports" json:"incoming_teleports,omitempty"`
	LinearProjectiles    []*CMsgBotWorldState_LinearProjectile   `protobuf:"bytes,15,rep,name=linear_projectiles,json=linearProjectiles" json:"linear_projectiles,omitempty"`
	AvoidanceZones       []*CMsgBotWorldState_AvoidanceZone      `protobuf:"bytes,16,rep,name=avoidance_zones,json=avoidanceZones" json:"avoidance_zones,omitempty"`
	Couriers             []*CMsgBotWorldState_Courier            `protobuf:"bytes,17,rep,name=couriers" json:"couriers,omitempty"`
	AbilityEvents        []*CMsgBotWorldState_EventAbility       `protobuf:"bytes,20,rep,name=ability_events,json=abilityEvents" json:"ability_events,omitempty"`
	DamageEvents         []*CMsgBotWorldState_EventDamage        `protobuf:"bytes,21,rep,name=damage_events,json=damageEvents" json:"damage_events,omitempty"`
	CourierKilledEvents  []*CMsgBotWorldState_EventCourierKilled `protobuf:"bytes,22,rep,name=courier_killed_events,json=courierKilledEvents" json:"courier_killed_events,omitempty"`
	RoshanKilledEvents   []*CMsgBotWorldState_EventRoshanKilled  `protobuf:"bytes,23,rep,name=roshan_killed_events,json=roshanKilledEvents" json:"roshan_killed_events,omitempty"`
	TreeEvents           []*CMsgBotWorldState_EventTree          `protobuf:"bytes,24,rep,name=tree_events,json=treeEvents" json:"tree_events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *CMsgBotWorldState) Reset()         { *m = CMsgBotWorldState{} }
func (m *CMsgBotWorldState) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState) ProtoMessage()    {}
func (*CMsgBotWorldState) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0}
}

func (m *CMsgBotWorldState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState.Unmarshal(m, b)
}
func (m *CMsgBotWorldState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState.Merge(m, src)
}
func (m *CMsgBotWorldState) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState.Size(m)
}
func (m *CMsgBotWorldState) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState proto.InternalMessageInfo

func (m *CMsgBotWorldState) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgBotWorldState) GetGameTime() float32 {
	if m != nil && m.GameTime != nil {
		return *m.GameTime
	}
	return 0
}

func (m *CMsgBotWorldState) GetDotaTime() float32 {
	if m != nil && m.DotaTime != nil {
		return *m.DotaTime
	}
	return 0
}

func (m *CMsgBotWorldState) GetGameState() uint32 {
	if m != nil && m.GameState != nil {
		return *m.GameState
	}
	return 0
}

func (m *CMsgBotWorldState) GetHeroPickState() uint32 {
	if m != nil && m.HeroPickState != nil {
		return *m.HeroPickState
	}
	return 0
}

func (m *CMsgBotWorldState) GetTimeOfDay() float32 {
	if m != nil && m.TimeOfDay != nil {
		return *m.TimeOfDay
	}
	return 0
}

func (m *CMsgBotWorldState) GetGlyphCooldown() float32 {
	if m != nil && m.GlyphCooldown != nil {
		return *m.GlyphCooldown
	}
	return 0
}

func (m *CMsgBotWorldState) GetGlyphCooldownEnemy() float32 {
	if m != nil && m.GlyphCooldownEnemy != nil {
		return *m.GlyphCooldownEnemy
	}
	return 0
}

func (m *CMsgBotWorldState) GetPlayers() []*CMsgBotWorldState_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgBotWorldState) GetUnits() []*CMsgBotWorldState_Unit {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *CMsgBotWorldState) GetDroppedItems() []*CMsgBotWorldState_DroppedItem {
	if m != nil {
		return m.DroppedItems
	}
	return nil
}

func (m *CMsgBotWorldState) GetDroppedItemsDeltas() []int32 {
	if m != nil {
		return m.DroppedItemsDeltas
	}
	return nil
}

func (m *CMsgBotWorldState) GetRuneInfos() []*CMsgBotWorldState_RuneInfo {
	if m != nil {
		return m.RuneInfos
	}
	return nil
}

func (m *CMsgBotWorldState) GetRuneInfosDeltas() []int32 {
	if m != nil {
		return m.RuneInfosDeltas
	}
	return nil
}

func (m *CMsgBotWorldState) GetIncomingTeleports() []*CMsgBotWorldState_TeleportInfo {
	if m != nil {
		return m.IncomingTeleports
	}
	return nil
}

func (m *CMsgBotWorldState) GetLinearProjectiles() []*CMsgBotWorldState_LinearProjectile {
	if m != nil {
		return m.LinearProjectiles
	}
	return nil
}

func (m *CMsgBotWorldState) GetAvoidanceZones() []*CMsgBotWorldState_AvoidanceZone {
	if m != nil {
		return m.AvoidanceZones
	}
	return nil
}

func (m *CMsgBotWorldState) GetCouriers() []*CMsgBotWorldState_Courier {
	if m != nil {
		return m.Couriers
	}
	return nil
}

func (m *CMsgBotWorldState) GetAbilityEvents() []*CMsgBotWorldState_EventAbility {
	if m != nil {
		return m.AbilityEvents
	}
	return nil
}

func (m *CMsgBotWorldState) GetDamageEvents() []*CMsgBotWorldState_EventDamage {
	if m != nil {
		return m.DamageEvents
	}
	return nil
}

func (m *CMsgBotWorldState) GetCourierKilledEvents() []*CMsgBotWorldState_EventCourierKilled {
	if m != nil {
		return m.CourierKilledEvents
	}
	return nil
}

func (m *CMsgBotWorldState) GetRoshanKilledEvents() []*CMsgBotWorldState_EventRoshanKilled {
	if m != nil {
		return m.RoshanKilledEvents
	}
	return nil
}

func (m *CMsgBotWorldState) GetTreeEvents() []*CMsgBotWorldState_EventTree {
	if m != nil {
		return m.TreeEvents
	}
	return nil
}

type CMsgBotWorldState_Vector struct {
	X                    *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z                    *float32 `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBotWorldState_Vector) Reset()         { *m = CMsgBotWorldState_Vector{} }
func (m *CMsgBotWorldState_Vector) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_Vector) ProtoMessage()    {}
func (*CMsgBotWorldState_Vector) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 0}
}

func (m *CMsgBotWorldState_Vector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_Vector.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_Vector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_Vector.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_Vector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_Vector.Merge(m, src)
}
func (m *CMsgBotWorldState_Vector) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_Vector.Size(m)
}
func (m *CMsgBotWorldState_Vector) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_Vector.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_Vector proto.InternalMessageInfo

func (m *CMsgBotWorldState_Vector) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgBotWorldState_Vector) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CMsgBotWorldState_Vector) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

type CMsgBotWorldState_Player struct {
	PlayerId             *int32                    `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	HeroId               *uint32                   `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	IsAlive              *bool                     `protobuf:"varint,3,opt,name=is_alive,json=isAlive" json:"is_alive,omitempty"`
	RespawnTime          *float32                  `protobuf:"fixed32,4,opt,name=respawn_time,json=respawnTime" json:"respawn_time,omitempty"`
	Kills                *uint32                   `protobuf:"varint,5,opt,name=kills" json:"kills,omitempty"`
	Deaths               *uint32                   `protobuf:"varint,6,opt,name=deaths" json:"deaths,omitempty"`
	Assists              *uint32                   `protobuf:"varint,7,opt,name=assists" json:"assists,omitempty"`
	TeamId               *uint32                   `protobuf:"varint,8,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	PrimaryUnitHandle    *uint32                   `protobuf:"varint,9,opt,name=primary_unit_handle,json=primaryUnitHandle,def=4294967295" json:"primary_unit_handle,omitempty"`
	Mmr                  *int32                    `protobuf:"varint,10,opt,name=mmr" json:"mmr,omitempty"`
	Location             *CMsgBotWorldState_Vector `protobuf:"bytes,11,opt,name=location" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CMsgBotWorldState_Player) Reset()         { *m = CMsgBotWorldState_Player{} }
func (m *CMsgBotWorldState_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_Player) ProtoMessage()    {}
func (*CMsgBotWorldState_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 1}
}

func (m *CMsgBotWorldState_Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_Player.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_Player.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_Player.Merge(m, src)
}
func (m *CMsgBotWorldState_Player) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_Player.Size(m)
}
func (m *CMsgBotWorldState_Player) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_Player.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_Player proto.InternalMessageInfo

const Default_CMsgBotWorldState_Player_PrimaryUnitHandle uint32 = 4294967295

func (m *CMsgBotWorldState_Player) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CMsgBotWorldState_Player) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgBotWorldState_Player) GetIsAlive() bool {
	if m != nil && m.IsAlive != nil {
		return *m.IsAlive
	}
	return false
}

func (m *CMsgBotWorldState_Player) GetRespawnTime() float32 {
	if m != nil && m.RespawnTime != nil {
		return *m.RespawnTime
	}
	return 0
}

func (m *CMsgBotWorldState_Player) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgBotWorldState_Player) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgBotWorldState_Player) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgBotWorldState_Player) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgBotWorldState_Player) GetPrimaryUnitHandle() uint32 {
	if m != nil && m.PrimaryUnitHandle != nil {
		return *m.PrimaryUnitHandle
	}
	return Default_CMsgBotWorldState_Player_PrimaryUnitHandle
}

func (m *CMsgBotWorldState_Player) GetMmr() int32 {
	if m != nil && m.Mmr != nil {
		return *m.Mmr
	}
	return 0
}

func (m *CMsgBotWorldState_Player) GetLocation() *CMsgBotWorldState_Vector {
	if m != nil {
		return m.Location
	}
	return nil
}

type CMsgBotWorldState_Ability struct {
	Handle               *uint32  `protobuf:"varint,1,opt,name=handle" json:"handle,omitempty"`
	AbilityId            *int32   `protobuf:"varint,2,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	Slot                 *uint32  `protobuf:"varint,3,opt,name=slot" json:"slot,omitempty"`
	CasterHandle         *uint32  `protobuf:"varint,5,opt,name=caster_handle,json=casterHandle,def=4294967295" json:"caster_handle,omitempty"`
	Level                *uint32  `protobuf:"varint,6,opt,name=level" json:"level,omitempty"`
	CastRange            *uint32  `protobuf:"varint,10,opt,name=cast_range,json=castRange" json:"cast_range,omitempty"`
	ChannelTime          *float32 `protobuf:"fixed32,11,opt,name=channel_time,json=channelTime" json:"channel_time,omitempty"`
	CooldownRemaining    *float32 `protobuf:"fixed32,12,opt,name=cooldown_remaining,json=cooldownRemaining,def=0" json:"cooldown_remaining,omitempty"`
	IsActivated          *bool    `protobuf:"varint,20,opt,name=is_activated,json=isActivated" json:"is_activated,omitempty"`
	IsToggled            *bool    `protobuf:"varint,21,opt,name=is_toggled,json=isToggled" json:"is_toggled,omitempty"`
	IsInAbilityPhase     *bool    `protobuf:"varint,22,opt,name=is_in_ability_phase,json=isInAbilityPhase" json:"is_in_ability_phase,omitempty"`
	IsChanneling         *bool    `protobuf:"varint,23,opt,name=is_channeling,json=isChanneling" json:"is_channeling,omitempty"`
	IsStolen             *bool    `protobuf:"varint,24,opt,name=is_stolen,json=isStolen" json:"is_stolen,omitempty"`
	IsFullyCastable      *bool    `protobuf:"varint,25,opt,name=is_fully_castable,json=isFullyCastable" json:"is_fully_castable,omitempty"`
	Charges              *uint32  `protobuf:"varint,30,opt,name=charges" json:"charges,omitempty"`
	SecondaryCharges     *uint32  `protobuf:"varint,31,opt,name=secondary_charges,json=secondaryCharges" json:"secondary_charges,omitempty"`
	IsCombinedLocked     *bool    `protobuf:"varint,40,opt,name=is_combined_locked,json=isCombinedLocked" json:"is_combined_locked,omitempty"`
	PowerTreadsStat      *int32   `protobuf:"varint,50,opt,name=power_treads_stat,json=powerTreadsStat,def=-1" json:"power_treads_stat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBotWorldState_Ability) Reset()         { *m = CMsgBotWorldState_Ability{} }
func (m *CMsgBotWorldState_Ability) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_Ability) ProtoMessage()    {}
func (*CMsgBotWorldState_Ability) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 2}
}

func (m *CMsgBotWorldState_Ability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_Ability.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_Ability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_Ability.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_Ability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_Ability.Merge(m, src)
}
func (m *CMsgBotWorldState_Ability) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_Ability.Size(m)
}
func (m *CMsgBotWorldState_Ability) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_Ability.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_Ability proto.InternalMessageInfo

const Default_CMsgBotWorldState_Ability_AbilityId int32 = -1
const Default_CMsgBotWorldState_Ability_CasterHandle uint32 = 4294967295
const Default_CMsgBotWorldState_Ability_CooldownRemaining float32 = 0
const Default_CMsgBotWorldState_Ability_PowerTreadsStat int32 = -1

func (m *CMsgBotWorldState_Ability) GetHandle() uint32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

func (m *CMsgBotWorldState_Ability) GetAbilityId() int32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return Default_CMsgBotWorldState_Ability_AbilityId
}

func (m *CMsgBotWorldState_Ability) GetSlot() uint32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *CMsgBotWorldState_Ability) GetCasterHandle() uint32 {
	if m != nil && m.CasterHandle != nil {
		return *m.CasterHandle
	}
	return Default_CMsgBotWorldState_Ability_CasterHandle
}

func (m *CMsgBotWorldState_Ability) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgBotWorldState_Ability) GetCastRange() uint32 {
	if m != nil && m.CastRange != nil {
		return *m.CastRange
	}
	return 0
}

func (m *CMsgBotWorldState_Ability) GetChannelTime() float32 {
	if m != nil && m.ChannelTime != nil {
		return *m.ChannelTime
	}
	return 0
}

func (m *CMsgBotWorldState_Ability) GetCooldownRemaining() float32 {
	if m != nil && m.CooldownRemaining != nil {
		return *m.CooldownRemaining
	}
	return Default_CMsgBotWorldState_Ability_CooldownRemaining
}

func (m *CMsgBotWorldState_Ability) GetIsActivated() bool {
	if m != nil && m.IsActivated != nil {
		return *m.IsActivated
	}
	return false
}

func (m *CMsgBotWorldState_Ability) GetIsToggled() bool {
	if m != nil && m.IsToggled != nil {
		return *m.IsToggled
	}
	return false
}

func (m *CMsgBotWorldState_Ability) GetIsInAbilityPhase() bool {
	if m != nil && m.IsInAbilityPhase != nil {
		return *m.IsInAbilityPhase
	}
	return false
}

func (m *CMsgBotWorldState_Ability) GetIsChanneling() bool {
	if m != nil && m.IsChanneling != nil {
		return *m.IsChanneling
	}
	return false
}

func (m *CMsgBotWorldState_Ability) GetIsStolen() bool {
	if m != nil && m.IsStolen != nil {
		return *m.IsStolen
	}
	return false
}

func (m *CMsgBotWorldState_Ability) GetIsFullyCastable() bool {
	if m != nil && m.IsFullyCastable != nil {
		return *m.IsFullyCastable
	}
	return false
}

func (m *CMsgBotWorldState_Ability) GetCharges() uint32 {
	if m != nil && m.Charges != nil {
		return *m.Charges
	}
	return 0
}

func (m *CMsgBotWorldState_Ability) GetSecondaryCharges() uint32 {
	if m != nil && m.SecondaryCharges != nil {
		return *m.SecondaryCharges
	}
	return 0
}

func (m *CMsgBotWorldState_Ability) GetIsCombinedLocked() bool {
	if m != nil && m.IsCombinedLocked != nil {
		return *m.IsCombinedLocked
	}
	return false
}

func (m *CMsgBotWorldState_Ability) GetPowerTreadsStat() int32 {
	if m != nil && m.PowerTreadsStat != nil {
		return *m.PowerTreadsStat
	}
	return Default_CMsgBotWorldState_Ability_PowerTreadsStat
}

type CMsgBotWorldState_DroppedItem struct {
	ItemId               *int32                    `protobuf:"varint,1,opt,name=item_id,json=itemId,def=-1" json:"item_id,omitempty"`
	Location             *CMsgBotWorldState_Vector `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CMsgBotWorldState_DroppedItem) Reset()         { *m = CMsgBotWorldState_DroppedItem{} }
func (m *CMsgBotWorldState_DroppedItem) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_DroppedItem) ProtoMessage()    {}
func (*CMsgBotWorldState_DroppedItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 3}
}

func (m *CMsgBotWorldState_DroppedItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_DroppedItem.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_DroppedItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_DroppedItem.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_DroppedItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_DroppedItem.Merge(m, src)
}
func (m *CMsgBotWorldState_DroppedItem) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_DroppedItem.Size(m)
}
func (m *CMsgBotWorldState_DroppedItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_DroppedItem.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_DroppedItem proto.InternalMessageInfo

const Default_CMsgBotWorldState_DroppedItem_ItemId int32 = -1

func (m *CMsgBotWorldState_DroppedItem) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return Default_CMsgBotWorldState_DroppedItem_ItemId
}

func (m *CMsgBotWorldState_DroppedItem) GetLocation() *CMsgBotWorldState_Vector {
	if m != nil {
		return m.Location
	}
	return nil
}

type CMsgBotWorldState_RuneInfo struct {
	Type                 *int32                    `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Location             *CMsgBotWorldState_Vector `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	Status               *uint32                   `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	TimeSinceSeen        *float32                  `protobuf:"fixed32,4,opt,name=time_since_seen,json=timeSinceSeen" json:"time_since_seen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CMsgBotWorldState_RuneInfo) Reset()         { *m = CMsgBotWorldState_RuneInfo{} }
func (m *CMsgBotWorldState_RuneInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_RuneInfo) ProtoMessage()    {}
func (*CMsgBotWorldState_RuneInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 4}
}

func (m *CMsgBotWorldState_RuneInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_RuneInfo.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_RuneInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_RuneInfo.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_RuneInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_RuneInfo.Merge(m, src)
}
func (m *CMsgBotWorldState_RuneInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_RuneInfo.Size(m)
}
func (m *CMsgBotWorldState_RuneInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_RuneInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_RuneInfo proto.InternalMessageInfo

func (m *CMsgBotWorldState_RuneInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMsgBotWorldState_RuneInfo) GetLocation() *CMsgBotWorldState_Vector {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CMsgBotWorldState_RuneInfo) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *CMsgBotWorldState_RuneInfo) GetTimeSinceSeen() float32 {
	if m != nil && m.TimeSinceSeen != nil {
		return *m.TimeSinceSeen
	}
	return 0
}

type CMsgBotWorldState_TeleportInfo struct {
	PlayerId             *int32                    `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Location             *CMsgBotWorldState_Vector `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	TimeRemaining        *float32                  `protobuf:"fixed32,3,opt,name=time_remaining,json=timeRemaining" json:"time_remaining,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CMsgBotWorldState_TeleportInfo) Reset()         { *m = CMsgBotWorldState_TeleportInfo{} }
func (m *CMsgBotWorldState_TeleportInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_TeleportInfo) ProtoMessage()    {}
func (*CMsgBotWorldState_TeleportInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 5}
}

func (m *CMsgBotWorldState_TeleportInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_TeleportInfo.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_TeleportInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_TeleportInfo.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_TeleportInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_TeleportInfo.Merge(m, src)
}
func (m *CMsgBotWorldState_TeleportInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_TeleportInfo.Size(m)
}
func (m *CMsgBotWorldState_TeleportInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_TeleportInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_TeleportInfo proto.InternalMessageInfo

func (m *CMsgBotWorldState_TeleportInfo) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CMsgBotWorldState_TeleportInfo) GetLocation() *CMsgBotWorldState_Vector {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CMsgBotWorldState_TeleportInfo) GetTimeRemaining() float32 {
	if m != nil && m.TimeRemaining != nil {
		return *m.TimeRemaining
	}
	return 0
}

type CMsgBotWorldState_Modifier struct {
	Handle                *uint32  `protobuf:"varint,7,opt,name=handle" json:"handle,omitempty"`
	Name                  *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	StackCount            *uint32  `protobuf:"varint,2,opt,name=stack_count,json=stackCount" json:"stack_count,omitempty"`
	AbilityHandle         *uint32  `protobuf:"varint,3,opt,name=ability_handle,json=abilityHandle,def=4294967295" json:"ability_handle,omitempty"`
	AbilityId             *int32   `protobuf:"varint,4,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	RemainingDuration     *float32 `protobuf:"fixed32,5,opt,name=remaining_duration,json=remainingDuration" json:"remaining_duration,omitempty"`
	AuxiliaryUnitsHandles []uint32 `protobuf:"varint,6,rep,name=auxiliary_units_handles,json=auxiliaryUnitsHandles" json:"auxiliary_units_handles,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CMsgBotWorldState_Modifier) Reset()         { *m = CMsgBotWorldState_Modifier{} }
func (m *CMsgBotWorldState_Modifier) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_Modifier) ProtoMessage()    {}
func (*CMsgBotWorldState_Modifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 6}
}

func (m *CMsgBotWorldState_Modifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_Modifier.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_Modifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_Modifier.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_Modifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_Modifier.Merge(m, src)
}
func (m *CMsgBotWorldState_Modifier) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_Modifier.Size(m)
}
func (m *CMsgBotWorldState_Modifier) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_Modifier.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_Modifier proto.InternalMessageInfo

const Default_CMsgBotWorldState_Modifier_AbilityHandle uint32 = 4294967295
const Default_CMsgBotWorldState_Modifier_AbilityId int32 = -1

func (m *CMsgBotWorldState_Modifier) GetHandle() uint32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

func (m *CMsgBotWorldState_Modifier) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgBotWorldState_Modifier) GetStackCount() uint32 {
	if m != nil && m.StackCount != nil {
		return *m.StackCount
	}
	return 0
}

func (m *CMsgBotWorldState_Modifier) GetAbilityHandle() uint32 {
	if m != nil && m.AbilityHandle != nil {
		return *m.AbilityHandle
	}
	return Default_CMsgBotWorldState_Modifier_AbilityHandle
}

func (m *CMsgBotWorldState_Modifier) GetAbilityId() int32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return Default_CMsgBotWorldState_Modifier_AbilityId
}

func (m *CMsgBotWorldState_Modifier) GetRemainingDuration() float32 {
	if m != nil && m.RemainingDuration != nil {
		return *m.RemainingDuration
	}
	return 0
}

func (m *CMsgBotWorldState_Modifier) GetAuxiliaryUnitsHandles() []uint32 {
	if m != nil {
		return m.AuxiliaryUnitsHandles
	}
	return nil
}

type CMsgBotWorldState_LinearProjectile struct {
	Handle               *uint32                     `protobuf:"varint,1,opt,name=handle" json:"handle,omitempty"`
	CasterHandle         *uint32                     `protobuf:"varint,2,opt,name=caster_handle,json=casterHandle,def=4294967295" json:"caster_handle,omitempty"`
	CasterUnitType       *CMsgBotWorldState_UnitType `protobuf:"varint,9,opt,name=caster_unit_type,json=casterUnitType,enum=protocol.CMsgBotWorldState_UnitType,def=0" json:"caster_unit_type,omitempty"`
	CasterPlayerId       *int32                      `protobuf:"varint,3,opt,name=caster_player_id,json=casterPlayerId" json:"caster_player_id,omitempty"`
	AbilityHandle        *uint32                     `protobuf:"varint,4,opt,name=ability_handle,json=abilityHandle,def=4294967295" json:"ability_handle,omitempty"`
	AbilityId            *int32                      `protobuf:"varint,5,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	Location             *CMsgBotWorldState_Vector   `protobuf:"bytes,6,opt,name=location" json:"location,omitempty"`
	Velocity             *CMsgBotWorldState_Vector   `protobuf:"bytes,7,opt,name=velocity" json:"velocity,omitempty"`
	Radius               *uint32                     `protobuf:"varint,8,opt,name=radius" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CMsgBotWorldState_LinearProjectile) Reset()         { *m = CMsgBotWorldState_LinearProjectile{} }
func (m *CMsgBotWorldState_LinearProjectile) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_LinearProjectile) ProtoMessage()    {}
func (*CMsgBotWorldState_LinearProjectile) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 7}
}

func (m *CMsgBotWorldState_LinearProjectile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_LinearProjectile.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_LinearProjectile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_LinearProjectile.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_LinearProjectile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_LinearProjectile.Merge(m, src)
}
func (m *CMsgBotWorldState_LinearProjectile) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_LinearProjectile.Size(m)
}
func (m *CMsgBotWorldState_LinearProjectile) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_LinearProjectile.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_LinearProjectile proto.InternalMessageInfo

const Default_CMsgBotWorldState_LinearProjectile_CasterHandle uint32 = 4294967295
const Default_CMsgBotWorldState_LinearProjectile_CasterUnitType CMsgBotWorldState_UnitType = CMsgBotWorldState_INVALID
const Default_CMsgBotWorldState_LinearProjectile_AbilityHandle uint32 = 4294967295
const Default_CMsgBotWorldState_LinearProjectile_AbilityId int32 = -1

func (m *CMsgBotWorldState_LinearProjectile) GetHandle() uint32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

func (m *CMsgBotWorldState_LinearProjectile) GetCasterHandle() uint32 {
	if m != nil && m.CasterHandle != nil {
		return *m.CasterHandle
	}
	return Default_CMsgBotWorldState_LinearProjectile_CasterHandle
}

func (m *CMsgBotWorldState_LinearProjectile) GetCasterUnitType() CMsgBotWorldState_UnitType {
	if m != nil && m.CasterUnitType != nil {
		return *m.CasterUnitType
	}
	return Default_CMsgBotWorldState_LinearProjectile_CasterUnitType
}

func (m *CMsgBotWorldState_LinearProjectile) GetCasterPlayerId() int32 {
	if m != nil && m.CasterPlayerId != nil {
		return *m.CasterPlayerId
	}
	return 0
}

func (m *CMsgBotWorldState_LinearProjectile) GetAbilityHandle() uint32 {
	if m != nil && m.AbilityHandle != nil {
		return *m.AbilityHandle
	}
	return Default_CMsgBotWorldState_LinearProjectile_AbilityHandle
}

func (m *CMsgBotWorldState_LinearProjectile) GetAbilityId() int32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return Default_CMsgBotWorldState_LinearProjectile_AbilityId
}

func (m *CMsgBotWorldState_LinearProjectile) GetLocation() *CMsgBotWorldState_Vector {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CMsgBotWorldState_LinearProjectile) GetVelocity() *CMsgBotWorldState_Vector {
	if m != nil {
		return m.Velocity
	}
	return nil
}

func (m *CMsgBotWorldState_LinearProjectile) GetRadius() uint32 {
	if m != nil && m.Radius != nil {
		return *m.Radius
	}
	return 0
}

type CMsgBotWorldState_TrackingProjectile struct {
	Handle               *uint32                     `protobuf:"varint,10,opt,name=handle" json:"handle,omitempty"`
	CasterHandle         *uint32                     `protobuf:"varint,1,opt,name=caster_handle,json=casterHandle,def=4294967295" json:"caster_handle,omitempty"`
	CasterUnitType       *CMsgBotWorldState_UnitType `protobuf:"varint,9,opt,name=caster_unit_type,json=casterUnitType,enum=protocol.CMsgBotWorldState_UnitType,def=0" json:"caster_unit_type,omitempty"`
	CasterPlayerId       *int32                      `protobuf:"varint,2,opt,name=caster_player_id,json=casterPlayerId" json:"caster_player_id,omitempty"`
	AbilityHandle        *uint32                     `protobuf:"varint,3,opt,name=ability_handle,json=abilityHandle,def=4294967295" json:"ability_handle,omitempty"`
	AbilityId            *int32                      `protobuf:"varint,4,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	Location             *CMsgBotWorldState_Vector   `protobuf:"bytes,5,opt,name=location" json:"location,omitempty"`
	Velocity             *uint32                     `protobuf:"varint,6,opt,name=velocity" json:"velocity,omitempty"`
	IsDodgeable          *bool                       `protobuf:"varint,7,opt,name=is_dodgeable,json=isDodgeable" json:"is_dodgeable,omitempty"`
	IsAttack             *bool                       `protobuf:"varint,8,opt,name=is_attack,json=isAttack" json:"is_attack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CMsgBotWorldState_TrackingProjectile) Reset()         { *m = CMsgBotWorldState_TrackingProjectile{} }
func (m *CMsgBotWorldState_TrackingProjectile) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_TrackingProjectile) ProtoMessage()    {}
func (*CMsgBotWorldState_TrackingProjectile) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 8}
}

func (m *CMsgBotWorldState_TrackingProjectile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_TrackingProjectile.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_TrackingProjectile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_TrackingProjectile.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_TrackingProjectile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_TrackingProjectile.Merge(m, src)
}
func (m *CMsgBotWorldState_TrackingProjectile) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_TrackingProjectile.Size(m)
}
func (m *CMsgBotWorldState_TrackingProjectile) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_TrackingProjectile.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_TrackingProjectile proto.InternalMessageInfo

const Default_CMsgBotWorldState_TrackingProjectile_CasterHandle uint32 = 4294967295
const Default_CMsgBotWorldState_TrackingProjectile_CasterUnitType CMsgBotWorldState_UnitType = CMsgBotWorldState_INVALID
const Default_CMsgBotWorldState_TrackingProjectile_AbilityHandle uint32 = 4294967295
const Default_CMsgBotWorldState_TrackingProjectile_AbilityId int32 = -1

func (m *CMsgBotWorldState_TrackingProjectile) GetHandle() uint32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

func (m *CMsgBotWorldState_TrackingProjectile) GetCasterHandle() uint32 {
	if m != nil && m.CasterHandle != nil {
		return *m.CasterHandle
	}
	return Default_CMsgBotWorldState_TrackingProjectile_CasterHandle
}

func (m *CMsgBotWorldState_TrackingProjectile) GetCasterUnitType() CMsgBotWorldState_UnitType {
	if m != nil && m.CasterUnitType != nil {
		return *m.CasterUnitType
	}
	return Default_CMsgBotWorldState_TrackingProjectile_CasterUnitType
}

func (m *CMsgBotWorldState_TrackingProjectile) GetCasterPlayerId() int32 {
	if m != nil && m.CasterPlayerId != nil {
		return *m.CasterPlayerId
	}
	return 0
}

func (m *CMsgBotWorldState_TrackingProjectile) GetAbilityHandle() uint32 {
	if m != nil && m.AbilityHandle != nil {
		return *m.AbilityHandle
	}
	return Default_CMsgBotWorldState_TrackingProjectile_AbilityHandle
}

func (m *CMsgBotWorldState_TrackingProjectile) GetAbilityId() int32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return Default_CMsgBotWorldState_TrackingProjectile_AbilityId
}

func (m *CMsgBotWorldState_TrackingProjectile) GetLocation() *CMsgBotWorldState_Vector {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CMsgBotWorldState_TrackingProjectile) GetVelocity() uint32 {
	if m != nil && m.Velocity != nil {
		return *m.Velocity
	}
	return 0
}

func (m *CMsgBotWorldState_TrackingProjectile) GetIsDodgeable() bool {
	if m != nil && m.IsDodgeable != nil {
		return *m.IsDodgeable
	}
	return false
}

func (m *CMsgBotWorldState_TrackingProjectile) GetIsAttack() bool {
	if m != nil && m.IsAttack != nil {
		return *m.IsAttack
	}
	return false
}

type CMsgBotWorldState_AvoidanceZone struct {
	Location             *CMsgBotWorldState_Vector   `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	CasterHandle         *uint32                     `protobuf:"varint,2,opt,name=caster_handle,json=casterHandle,def=4294967295" json:"caster_handle,omitempty"`
	CasterUnitType       *CMsgBotWorldState_UnitType `protobuf:"varint,7,opt,name=caster_unit_type,json=casterUnitType,enum=protocol.CMsgBotWorldState_UnitType,def=0" json:"caster_unit_type,omitempty"`
	CasterPlayerId       *int32                      `protobuf:"varint,3,opt,name=caster_player_id,json=casterPlayerId" json:"caster_player_id,omitempty"`
	AbilityHandle        *uint32                     `protobuf:"varint,4,opt,name=ability_handle,json=abilityHandle,def=4294967295" json:"ability_handle,omitempty"`
	AbilityId            *int32                      `protobuf:"varint,5,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	Radius               *uint32                     `protobuf:"varint,6,opt,name=radius" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CMsgBotWorldState_AvoidanceZone) Reset()         { *m = CMsgBotWorldState_AvoidanceZone{} }
func (m *CMsgBotWorldState_AvoidanceZone) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_AvoidanceZone) ProtoMessage()    {}
func (*CMsgBotWorldState_AvoidanceZone) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 9}
}

func (m *CMsgBotWorldState_AvoidanceZone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_AvoidanceZone.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_AvoidanceZone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_AvoidanceZone.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_AvoidanceZone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_AvoidanceZone.Merge(m, src)
}
func (m *CMsgBotWorldState_AvoidanceZone) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_AvoidanceZone.Size(m)
}
func (m *CMsgBotWorldState_AvoidanceZone) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_AvoidanceZone.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_AvoidanceZone proto.InternalMessageInfo

const Default_CMsgBotWorldState_AvoidanceZone_CasterHandle uint32 = 4294967295
const Default_CMsgBotWorldState_AvoidanceZone_CasterUnitType CMsgBotWorldState_UnitType = CMsgBotWorldState_INVALID
const Default_CMsgBotWorldState_AvoidanceZone_AbilityHandle uint32 = 4294967295
const Default_CMsgBotWorldState_AvoidanceZone_AbilityId int32 = -1

func (m *CMsgBotWorldState_AvoidanceZone) GetLocation() *CMsgBotWorldState_Vector {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CMsgBotWorldState_AvoidanceZone) GetCasterHandle() uint32 {
	if m != nil && m.CasterHandle != nil {
		return *m.CasterHandle
	}
	return Default_CMsgBotWorldState_AvoidanceZone_CasterHandle
}

func (m *CMsgBotWorldState_AvoidanceZone) GetCasterUnitType() CMsgBotWorldState_UnitType {
	if m != nil && m.CasterUnitType != nil {
		return *m.CasterUnitType
	}
	return Default_CMsgBotWorldState_AvoidanceZone_CasterUnitType
}

func (m *CMsgBotWorldState_AvoidanceZone) GetCasterPlayerId() int32 {
	if m != nil && m.CasterPlayerId != nil {
		return *m.CasterPlayerId
	}
	return 0
}

func (m *CMsgBotWorldState_AvoidanceZone) GetAbilityHandle() uint32 {
	if m != nil && m.AbilityHandle != nil {
		return *m.AbilityHandle
	}
	return Default_CMsgBotWorldState_AvoidanceZone_AbilityHandle
}

func (m *CMsgBotWorldState_AvoidanceZone) GetAbilityId() int32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return Default_CMsgBotWorldState_AvoidanceZone_AbilityId
}

func (m *CMsgBotWorldState_AvoidanceZone) GetRadius() uint32 {
	if m != nil && m.Radius != nil {
		return *m.Radius
	}
	return 0
}

type CMsgBotWorldState_Courier struct {
	Handle               *uint32                         `protobuf:"varint,1,opt,name=handle" json:"handle,omitempty"`
	State                *CMsgBotWorldState_CourierState `protobuf:"varint,2,opt,name=state,enum=protocol.CMsgBotWorldState_CourierState,def=-1" json:"state,omitempty"`
	PlayerId             *int32                          `protobuf:"varint,3,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CMsgBotWorldState_Courier) Reset()         { *m = CMsgBotWorldState_Courier{} }
func (m *CMsgBotWorldState_Courier) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_Courier) ProtoMessage()    {}
func (*CMsgBotWorldState_Courier) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 10}
}

func (m *CMsgBotWorldState_Courier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_Courier.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_Courier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_Courier.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_Courier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_Courier.Merge(m, src)
}
func (m *CMsgBotWorldState_Courier) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_Courier.Size(m)
}
func (m *CMsgBotWorldState_Courier) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_Courier.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_Courier proto.InternalMessageInfo

const Default_CMsgBotWorldState_Courier_State CMsgBotWorldState_CourierState = CMsgBotWorldState_COURIER_STATE_INIT

func (m *CMsgBotWorldState_Courier) GetHandle() uint32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

func (m *CMsgBotWorldState_Courier) GetState() CMsgBotWorldState_CourierState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CMsgBotWorldState_Courier_State
}

func (m *CMsgBotWorldState_Courier) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type CMsgBotWorldState_EventAbility struct {
	AbilityId            *int32                    `protobuf:"varint,1,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	PlayerId             *int32                    `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	UnitHandle           *uint32                   `protobuf:"varint,3,opt,name=unit_handle,json=unitHandle,def=4294967295" json:"unit_handle,omitempty"`
	Location             *CMsgBotWorldState_Vector `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	IsChannelStart       *bool                     `protobuf:"varint,5,opt,name=is_channel_start,json=isChannelStart" json:"is_channel_start,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CMsgBotWorldState_EventAbility) Reset()         { *m = CMsgBotWorldState_EventAbility{} }
func (m *CMsgBotWorldState_EventAbility) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_EventAbility) ProtoMessage()    {}
func (*CMsgBotWorldState_EventAbility) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 11}
}

func (m *CMsgBotWorldState_EventAbility) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_EventAbility.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_EventAbility) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_EventAbility.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_EventAbility) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_EventAbility.Merge(m, src)
}
func (m *CMsgBotWorldState_EventAbility) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_EventAbility.Size(m)
}
func (m *CMsgBotWorldState_EventAbility) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_EventAbility.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_EventAbility proto.InternalMessageInfo

const Default_CMsgBotWorldState_EventAbility_AbilityId int32 = -1
const Default_CMsgBotWorldState_EventAbility_UnitHandle uint32 = 4294967295

func (m *CMsgBotWorldState_EventAbility) GetAbilityId() int32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return Default_CMsgBotWorldState_EventAbility_AbilityId
}

func (m *CMsgBotWorldState_EventAbility) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CMsgBotWorldState_EventAbility) GetUnitHandle() uint32 {
	if m != nil && m.UnitHandle != nil {
		return *m.UnitHandle
	}
	return Default_CMsgBotWorldState_EventAbility_UnitHandle
}

func (m *CMsgBotWorldState_EventAbility) GetLocation() *CMsgBotWorldState_Vector {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CMsgBotWorldState_EventAbility) GetIsChannelStart() bool {
	if m != nil && m.IsChannelStart != nil {
		return *m.IsChannelStart
	}
	return false
}

type CMsgBotWorldState_EventDamage struct {
	Damage               *uint32  `protobuf:"varint,1,opt,name=damage" json:"damage,omitempty"`
	VictimPlayerId       *int32   `protobuf:"varint,2,opt,name=victim_player_id,json=victimPlayerId" json:"victim_player_id,omitempty"`
	VictimUnitHandle     *uint32  `protobuf:"varint,3,opt,name=victim_unit_handle,json=victimUnitHandle,def=4294967295" json:"victim_unit_handle,omitempty"`
	AttackerPlayerId     *int32   `protobuf:"varint,4,opt,name=attacker_player_id,json=attackerPlayerId" json:"attacker_player_id,omitempty"`
	AttackerUnitHandle   *uint32  `protobuf:"varint,5,opt,name=attacker_unit_handle,json=attackerUnitHandle,def=4294967295" json:"attacker_unit_handle,omitempty"`
	AbilityId            *int32   `protobuf:"varint,6,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBotWorldState_EventDamage) Reset()         { *m = CMsgBotWorldState_EventDamage{} }
func (m *CMsgBotWorldState_EventDamage) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_EventDamage) ProtoMessage()    {}
func (*CMsgBotWorldState_EventDamage) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 12}
}

func (m *CMsgBotWorldState_EventDamage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_EventDamage.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_EventDamage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_EventDamage.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_EventDamage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_EventDamage.Merge(m, src)
}
func (m *CMsgBotWorldState_EventDamage) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_EventDamage.Size(m)
}
func (m *CMsgBotWorldState_EventDamage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_EventDamage.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_EventDamage proto.InternalMessageInfo

const Default_CMsgBotWorldState_EventDamage_VictimUnitHandle uint32 = 4294967295
const Default_CMsgBotWorldState_EventDamage_AttackerUnitHandle uint32 = 4294967295
const Default_CMsgBotWorldState_EventDamage_AbilityId int32 = -1

func (m *CMsgBotWorldState_EventDamage) GetDamage() uint32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

func (m *CMsgBotWorldState_EventDamage) GetVictimPlayerId() int32 {
	if m != nil && m.VictimPlayerId != nil {
		return *m.VictimPlayerId
	}
	return 0
}

func (m *CMsgBotWorldState_EventDamage) GetVictimUnitHandle() uint32 {
	if m != nil && m.VictimUnitHandle != nil {
		return *m.VictimUnitHandle
	}
	return Default_CMsgBotWorldState_EventDamage_VictimUnitHandle
}

func (m *CMsgBotWorldState_EventDamage) GetAttackerPlayerId() int32 {
	if m != nil && m.AttackerPlayerId != nil {
		return *m.AttackerPlayerId
	}
	return 0
}

func (m *CMsgBotWorldState_EventDamage) GetAttackerUnitHandle() uint32 {
	if m != nil && m.AttackerUnitHandle != nil {
		return *m.AttackerUnitHandle
	}
	return Default_CMsgBotWorldState_EventDamage_AttackerUnitHandle
}

func (m *CMsgBotWorldState_EventDamage) GetAbilityId() int32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return Default_CMsgBotWorldState_EventDamage_AbilityId
}

type CMsgBotWorldState_EventCourierKilled struct {
	TeamId               *uint32  `protobuf:"varint,1,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	CourierUnitHandle    *uint32  `protobuf:"varint,2,opt,name=courier_unit_handle,json=courierUnitHandle,def=4294967295" json:"courier_unit_handle,omitempty"`
	KillerPlayerId       *int32   `protobuf:"varint,3,opt,name=killer_player_id,json=killerPlayerId" json:"killer_player_id,omitempty"`
	KillerUnitHandle     *uint32  `protobuf:"varint,4,opt,name=killer_unit_handle,json=killerUnitHandle,def=4294967295" json:"killer_unit_handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBotWorldState_EventCourierKilled) Reset()         { *m = CMsgBotWorldState_EventCourierKilled{} }
func (m *CMsgBotWorldState_EventCourierKilled) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_EventCourierKilled) ProtoMessage()    {}
func (*CMsgBotWorldState_EventCourierKilled) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 13}
}

func (m *CMsgBotWorldState_EventCourierKilled) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_EventCourierKilled.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_EventCourierKilled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_EventCourierKilled.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_EventCourierKilled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_EventCourierKilled.Merge(m, src)
}
func (m *CMsgBotWorldState_EventCourierKilled) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_EventCourierKilled.Size(m)
}
func (m *CMsgBotWorldState_EventCourierKilled) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_EventCourierKilled.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_EventCourierKilled proto.InternalMessageInfo

const Default_CMsgBotWorldState_EventCourierKilled_CourierUnitHandle uint32 = 4294967295
const Default_CMsgBotWorldState_EventCourierKilled_KillerUnitHandle uint32 = 4294967295

func (m *CMsgBotWorldState_EventCourierKilled) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgBotWorldState_EventCourierKilled) GetCourierUnitHandle() uint32 {
	if m != nil && m.CourierUnitHandle != nil {
		return *m.CourierUnitHandle
	}
	return Default_CMsgBotWorldState_EventCourierKilled_CourierUnitHandle
}

func (m *CMsgBotWorldState_EventCourierKilled) GetKillerPlayerId() int32 {
	if m != nil && m.KillerPlayerId != nil {
		return *m.KillerPlayerId
	}
	return 0
}

func (m *CMsgBotWorldState_EventCourierKilled) GetKillerUnitHandle() uint32 {
	if m != nil && m.KillerUnitHandle != nil {
		return *m.KillerUnitHandle
	}
	return Default_CMsgBotWorldState_EventCourierKilled_KillerUnitHandle
}

type CMsgBotWorldState_EventRoshanKilled struct {
	KillerPlayerId       *int32   `protobuf:"varint,1,opt,name=killer_player_id,json=killerPlayerId" json:"killer_player_id,omitempty"`
	KillerUnitHandle     *uint32  `protobuf:"varint,2,opt,name=killer_unit_handle,json=killerUnitHandle,def=4294967295" json:"killer_unit_handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBotWorldState_EventRoshanKilled) Reset()         { *m = CMsgBotWorldState_EventRoshanKilled{} }
func (m *CMsgBotWorldState_EventRoshanKilled) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_EventRoshanKilled) ProtoMessage()    {}
func (*CMsgBotWorldState_EventRoshanKilled) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 14}
}

func (m *CMsgBotWorldState_EventRoshanKilled) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_EventRoshanKilled.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_EventRoshanKilled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_EventRoshanKilled.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_EventRoshanKilled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_EventRoshanKilled.Merge(m, src)
}
func (m *CMsgBotWorldState_EventRoshanKilled) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_EventRoshanKilled.Size(m)
}
func (m *CMsgBotWorldState_EventRoshanKilled) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_EventRoshanKilled.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_EventRoshanKilled proto.InternalMessageInfo

const Default_CMsgBotWorldState_EventRoshanKilled_KillerUnitHandle uint32 = 4294967295

func (m *CMsgBotWorldState_EventRoshanKilled) GetKillerPlayerId() int32 {
	if m != nil && m.KillerPlayerId != nil {
		return *m.KillerPlayerId
	}
	return 0
}

func (m *CMsgBotWorldState_EventRoshanKilled) GetKillerUnitHandle() uint32 {
	if m != nil && m.KillerUnitHandle != nil {
		return *m.KillerUnitHandle
	}
	return Default_CMsgBotWorldState_EventRoshanKilled_KillerUnitHandle
}

type CMsgBotWorldState_EventTree struct {
	TreeId               *uint32                   `protobuf:"varint,1,opt,name=tree_id,json=treeId" json:"tree_id,omitempty"`
	Destroyed            *bool                     `protobuf:"varint,2,opt,name=destroyed" json:"destroyed,omitempty"`
	Respawned            *bool                     `protobuf:"varint,3,opt,name=respawned" json:"respawned,omitempty"`
	Location             *CMsgBotWorldState_Vector `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	Delayed              *bool                     `protobuf:"varint,5,opt,name=delayed" json:"delayed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CMsgBotWorldState_EventTree) Reset()         { *m = CMsgBotWorldState_EventTree{} }
func (m *CMsgBotWorldState_EventTree) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_EventTree) ProtoMessage()    {}
func (*CMsgBotWorldState_EventTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 15}
}

func (m *CMsgBotWorldState_EventTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_EventTree.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_EventTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_EventTree.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_EventTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_EventTree.Merge(m, src)
}
func (m *CMsgBotWorldState_EventTree) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_EventTree.Size(m)
}
func (m *CMsgBotWorldState_EventTree) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_EventTree.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_EventTree proto.InternalMessageInfo

func (m *CMsgBotWorldState_EventTree) GetTreeId() uint32 {
	if m != nil && m.TreeId != nil {
		return *m.TreeId
	}
	return 0
}

func (m *CMsgBotWorldState_EventTree) GetDestroyed() bool {
	if m != nil && m.Destroyed != nil {
		return *m.Destroyed
	}
	return false
}

func (m *CMsgBotWorldState_EventTree) GetRespawned() bool {
	if m != nil && m.Respawned != nil {
		return *m.Respawned
	}
	return false
}

func (m *CMsgBotWorldState_EventTree) GetLocation() *CMsgBotWorldState_Vector {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CMsgBotWorldState_EventTree) GetDelayed() bool {
	if m != nil && m.Delayed != nil {
		return *m.Delayed
	}
	return false
}

type CMsgBotWorldState_Unit struct {
	Handle                      *uint32                                 `protobuf:"varint,1,opt,name=handle" json:"handle,omitempty"`
	UnitType                    *CMsgBotWorldState_UnitType             `protobuf:"varint,2,opt,name=unit_type,json=unitType,enum=protocol.CMsgBotWorldState_UnitType,def=0" json:"unit_type,omitempty"`
	Name                        *string                                 `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	TeamId                      *uint32                                 `protobuf:"varint,4,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Level                       *uint32                                 `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
	Location                    *CMsgBotWorldState_Vector               `protobuf:"bytes,6,opt,name=location" json:"location,omitempty"`
	IsAlive                     *bool                                   `protobuf:"varint,7,opt,name=is_alive,json=isAlive" json:"is_alive,omitempty"`
	PlayerId                    *int32                                  `protobuf:"varint,8,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	BoundingRadius              *int32                                  `protobuf:"varint,10,opt,name=bounding_radius,json=boundingRadius" json:"bounding_radius,omitempty"`
	Facing                      *int32                                  `protobuf:"varint,11,opt,name=facing" json:"facing,omitempty"`
	GroundHeight                *uint32                                 `protobuf:"varint,12,opt,name=ground_height,json=groundHeight" json:"ground_height,omitempty"`
	VisionRangeDaytime          *uint32                                 `protobuf:"varint,15,opt,name=vision_range_daytime,json=visionRangeDaytime" json:"vision_range_daytime,omitempty"`
	VisionRangeNighttime        *uint32                                 `protobuf:"varint,16,opt,name=vision_range_nighttime,json=visionRangeNighttime" json:"vision_range_nighttime,omitempty"`
	Health                      *int32                                  `protobuf:"varint,20,opt,name=health" json:"health,omitempty"`
	HealthMax                   *int32                                  `protobuf:"varint,21,opt,name=health_max,json=healthMax" json:"health_max,omitempty"`
	HealthRegen                 *float32                                `protobuf:"fixed32,22,opt,name=health_regen,json=healthRegen" json:"health_regen,omitempty"`
	Mana                        *int32                                  `protobuf:"varint,25,opt,name=mana" json:"mana,omitempty"`
	ManaMax                     *int32                                  `protobuf:"varint,26,opt,name=mana_max,json=manaMax" json:"mana_max,omitempty"`
	ManaRegen                   *float32                                `protobuf:"fixed32,27,opt,name=mana_regen,json=manaRegen" json:"mana_regen,omitempty"`
	BaseMovementSpeed           *int32                                  `protobuf:"varint,30,opt,name=base_movement_speed,json=baseMovementSpeed" json:"base_movement_speed,omitempty"`
	CurrentMovementSpeed        *int32                                  `protobuf:"varint,31,opt,name=current_movement_speed,json=currentMovementSpeed" json:"current_movement_speed,omitempty"`
	AnimActivity                *int32                                  `protobuf:"varint,35,opt,name=anim_activity,json=animActivity" json:"anim_activity,omitempty"`
	AnimCycle                   *float32                                `protobuf:"fixed32,36,opt,name=anim_cycle,json=animCycle" json:"anim_cycle,omitempty"`
	BaseDamage                  *int32                                  `protobuf:"varint,40,opt,name=base_damage,json=baseDamage" json:"base_damage,omitempty"`
	BaseDamageVariance          *int32                                  `protobuf:"varint,41,opt,name=base_damage_variance,json=baseDamageVariance" json:"base_damage_variance,omitempty"`
	BonusDamage                 *int32                                  `protobuf:"varint,42,opt,name=bonus_damage,json=bonusDamage" json:"bonus_damage,omitempty"`
	AttackDamage                *int32                                  `protobuf:"varint,43,opt,name=attack_damage,json=attackDamage" json:"attack_damage,omitempty"`
	AttackRange                 *int32                                  `protobuf:"varint,44,opt,name=attack_range,json=attackRange" json:"attack_range,omitempty"`
	AttackSpeed                 *float32                                `protobuf:"fixed32,45,opt,name=attack_speed,json=attackSpeed" json:"attack_speed,omitempty"`
	AttackAnimPoint             *float32                                `protobuf:"fixed32,46,opt,name=attack_anim_point,json=attackAnimPoint" json:"attack_anim_point,omitempty"`
	AttackAcquisitionRange      *int32                                  `protobuf:"varint,47,opt,name=attack_acquisition_range,json=attackAcquisitionRange" json:"attack_acquisition_range,omitempty"`
	AttackProjectileSpeed       *int32                                  `protobuf:"varint,48,opt,name=attack_projectile_speed,json=attackProjectileSpeed" json:"attack_projectile_speed,omitempty"`
	AttackTargetHandle          *uint32                                 `protobuf:"varint,49,opt,name=attack_target_handle,json=attackTargetHandle,def=4294967295" json:"attack_target_handle,omitempty"`
	AttackTargetName            *string                                 `protobuf:"bytes,52,opt,name=attack_target_name,json=attackTargetName" json:"attack_target_name,omitempty"`
	AttacksPerSecond            *int32                                  `protobuf:"varint,50,opt,name=attacks_per_second,json=attacksPerSecond,def=-1" json:"attacks_per_second,omitempty"`
	LastAttackTime              *float32                                `protobuf:"fixed32,51,opt,name=last_attack_time,json=lastAttackTime,def=-1" json:"last_attack_time,omitempty"`
	BountyXp                    *uint32                                 `protobuf:"varint,60,opt,name=bounty_xp,json=bountyXp" json:"bounty_xp,omitempty"`
	BountyGoldMin               *uint32                                 `protobuf:"varint,61,opt,name=bounty_gold_min,json=bountyGoldMin" json:"bounty_gold_min,omitempty"`
	BountyGoldMax               *uint32                                 `protobuf:"varint,62,opt,name=bounty_gold_max,json=bountyGoldMax" json:"bounty_gold_max,omitempty"`
	IsChanneling                *bool                                   `protobuf:"varint,65,opt,name=is_channeling,json=isChanneling" json:"is_channeling,omitempty"`
	ActiveAbilityHandle         *uint32                                 `protobuf:"varint,66,opt,name=active_ability_handle,json=activeAbilityHandle,def=4294967295" json:"active_ability_handle,omitempty"`
	IsAttackImmune              *bool                                   `protobuf:"varint,70,opt,name=is_attack_immune,json=isAttackImmune" json:"is_attack_immune,omitempty"`
	IsBlind                     *bool                                   `protobuf:"varint,71,opt,name=is_blind,json=isBlind" json:"is_blind,omitempty"`
	IsBlockDisabled             *bool                                   `protobuf:"varint,72,opt,name=is_block_disabled,json=isBlockDisabled" json:"is_block_disabled,omitempty"`
	IsDisarmed                  *bool                                   `protobuf:"varint,73,opt,name=is_disarmed,json=isDisarmed" json:"is_disarmed,omitempty"`
	IsDominated                 *bool                                   `protobuf:"varint,74,opt,name=is_dominated,json=isDominated" json:"is_dominated,omitempty"`
	IsEvadeDisabled             *bool                                   `protobuf:"varint,75,opt,name=is_evade_disabled,json=isEvadeDisabled" json:"is_evade_disabled,omitempty"`
	IsHexed                     *bool                                   `protobuf:"varint,76,opt,name=is_hexed,json=isHexed" json:"is_hexed,omitempty"`
	IsInvisible                 *bool                                   `protobuf:"varint,77,opt,name=is_invisible,json=isInvisible" json:"is_invisible,omitempty"`
	IsInvulnerable              *bool                                   `protobuf:"varint,78,opt,name=is_invulnerable,json=isInvulnerable" json:"is_invulnerable,omitempty"`
	IsMagicImmune               *bool                                   `protobuf:"varint,79,opt,name=is_magic_immune,json=isMagicImmune" json:"is_magic_immune,omitempty"`
	IsMuted                     *bool                                   `protobuf:"varint,80,opt,name=is_muted,json=isMuted" json:"is_muted,omitempty"`
	IsNightmared                *bool                                   `protobuf:"varint,82,opt,name=is_nightmared,json=isNightmared" json:"is_nightmared,omitempty"`
	IsRooted                    *bool                                   `protobuf:"varint,83,opt,name=is_rooted,json=isRooted" json:"is_rooted,omitempty"`
	IsSilenced                  *bool                                   `protobuf:"varint,84,opt,name=is_silenced,json=isSilenced" json:"is_silenced,omitempty"`
	IsSpeciallyDeniable         *bool                                   `protobuf:"varint,85,opt,name=is_specially_deniable,json=isSpeciallyDeniable" json:"is_specially_deniable,omitempty"`
	IsStunned                   *bool                                   `protobuf:"varint,86,opt,name=is_stunned,json=isStunned" json:"is_stunned,omitempty"`
	IsUnableToMiss              *bool                                   `protobuf:"varint,87,opt,name=is_unable_to_miss,json=isUnableToMiss" json:"is_unable_to_miss,omitempty"`
	HasScepter                  *bool                                   `protobuf:"varint,88,opt,name=has_scepter,json=hasScepter" json:"has_scepter,omitempty"`
	IsSpeciallyUndeniable       *bool                                   `protobuf:"varint,94,opt,name=is_specially_undeniable,json=isSpeciallyUndeniable" json:"is_specially_undeniable,omitempty"`
	Abilities                   []*CMsgBotWorldState_Ability            `protobuf:"bytes,90,rep,name=abilities" json:"abilities,omitempty"`
	Items                       []*CMsgBotWorldState_Ability            `protobuf:"bytes,91,rep,name=items" json:"items,omitempty"`
	Modifiers                   []*CMsgBotWorldState_Modifier           `protobuf:"bytes,92,rep,name=modifiers" json:"modifiers,omitempty"`
	IncomingTrackingProjectiles []*CMsgBotWorldState_TrackingProjectile `protobuf:"bytes,93,rep,name=incoming_tracking_projectiles,json=incomingTrackingProjectiles" json:"incoming_tracking_projectiles,omitempty"`
	ActionType                  *uint32                                 `protobuf:"varint,100,opt,name=action_type,json=actionType" json:"action_type,omitempty"`
	AbilityTargetHandle         *uint32                                 `protobuf:"varint,101,opt,name=ability_target_handle,json=abilityTargetHandle,def=4294967295" json:"ability_target_handle,omitempty"`
	AbilityTargetName           *string                                 `protobuf:"bytes,103,opt,name=ability_target_name,json=abilityTargetName" json:"ability_target_name,omitempty"`
	IsUsingAbility              *bool                                   `protobuf:"varint,102,opt,name=is_using_ability,json=isUsingAbility" json:"is_using_ability,omitempty"`
	PrimaryAttribute            *uint32                                 `protobuf:"varint,110,opt,name=primary_attribute,json=primaryAttribute" json:"primary_attribute,omitempty"`
	IsIllusion                  *bool                                   `protobuf:"varint,111,opt,name=is_illusion,json=isIllusion" json:"is_illusion,omitempty"`
	RespawnTime                 *float32                                `protobuf:"fixed32,112,opt,name=respawn_time,json=respawnTime" json:"respawn_time,omitempty"`
	BuybackCost                 *uint32                                 `protobuf:"varint,113,opt,name=buyback_cost,json=buybackCost" json:"buyback_cost,omitempty"`
	BuybackCooldown             *float32                                `protobuf:"fixed32,114,opt,name=buyback_cooldown,json=buybackCooldown" json:"buyback_cooldown,omitempty"`
	SpellAmplification          *float32                                `protobuf:"fixed32,115,opt,name=spell_amplification,json=spellAmplification" json:"spell_amplification,omitempty"`
	Armor                       *float32                                `protobuf:"fixed32,116,opt,name=armor" json:"armor,omitempty"`
	MagicResist                 *float32                                `protobuf:"fixed32,117,opt,name=magic_resist,json=magicResist" json:"magic_resist,omitempty"`
	Evasion                     *float32                                `protobuf:"fixed32,118,opt,name=evasion" json:"evasion,omitempty"`
	XpNeededToLevel             *uint32                                 `protobuf:"varint,120,opt,name=xp_needed_to_level,json=xpNeededToLevel" json:"xp_needed_to_level,omitempty"`
	AbilityPoints               *uint32                                 `protobuf:"varint,121,opt,name=ability_points,json=abilityPoints" json:"ability_points,omitempty"`
	ReliableGold                *int32                                  `protobuf:"varint,122,opt,name=reliable_gold,json=reliableGold,def=-1" json:"reliable_gold,omitempty"`
	UnreliableGold              *int32                                  `protobuf:"varint,123,opt,name=unreliable_gold,json=unreliableGold,def=-1" json:"unreliable_gold,omitempty"`
	LastHits                    *uint32                                 `protobuf:"varint,124,opt,name=last_hits,json=lastHits" json:"last_hits,omitempty"`
	Denies                      *uint32                                 `protobuf:"varint,125,opt,name=denies" json:"denies,omitempty"`
	NetWorth                    *uint32                                 `protobuf:"varint,126,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	Strength                    *uint32                                 `protobuf:"varint,127,opt,name=strength" json:"strength,omitempty"`
	Agility                     *uint32                                 `protobuf:"varint,128,opt,name=agility" json:"agility,omitempty"`
	Intelligence                *uint32                                 `protobuf:"varint,129,opt,name=intelligence" json:"intelligence,omitempty"`
	RemainingLifespan           *float32                                `protobuf:"fixed32,130,opt,name=remaining_lifespan,json=remainingLifespan" json:"remaining_lifespan,omitempty"`
	FlyingCourier               *bool                                   `protobuf:"varint,140,opt,name=flying_courier,json=flyingCourier" json:"flying_courier,omitempty"`
	ShrineCooldown              *float32                                `protobuf:"fixed32,150,opt,name=shrine_cooldown,json=shrineCooldown" json:"shrine_cooldown,omitempty"`
	IsShrineHealing             *bool                                   `protobuf:"varint,151,opt,name=is_shrine_healing,json=isShrineHealing" json:"is_shrine_healing,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                                `json:"-"`
	XXX_unrecognized            []byte                                  `json:"-"`
	XXX_sizecache               int32                                   `json:"-"`
}

func (m *CMsgBotWorldState_Unit) Reset()         { *m = CMsgBotWorldState_Unit{} }
func (m *CMsgBotWorldState_Unit) String() string { return proto.CompactTextString(m) }
func (*CMsgBotWorldState_Unit) ProtoMessage()    {}
func (*CMsgBotWorldState_Unit) Descriptor() ([]byte, []int) {
	return fileDescriptor_930d4fac7267bb8b, []int{0, 16}
}

func (m *CMsgBotWorldState_Unit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBotWorldState_Unit.Unmarshal(m, b)
}
func (m *CMsgBotWorldState_Unit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBotWorldState_Unit.Marshal(b, m, deterministic)
}
func (m *CMsgBotWorldState_Unit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBotWorldState_Unit.Merge(m, src)
}
func (m *CMsgBotWorldState_Unit) XXX_Size() int {
	return xxx_messageInfo_CMsgBotWorldState_Unit.Size(m)
}
func (m *CMsgBotWorldState_Unit) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBotWorldState_Unit.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBotWorldState_Unit proto.InternalMessageInfo

const Default_CMsgBotWorldState_Unit_UnitType CMsgBotWorldState_UnitType = CMsgBotWorldState_INVALID
const Default_CMsgBotWorldState_Unit_AttackTargetHandle uint32 = 4294967295
const Default_CMsgBotWorldState_Unit_AttacksPerSecond int32 = -1
const Default_CMsgBotWorldState_Unit_LastAttackTime float32 = -1
const Default_CMsgBotWorldState_Unit_ActiveAbilityHandle uint32 = 4294967295
const Default_CMsgBotWorldState_Unit_AbilityTargetHandle uint32 = 4294967295
const Default_CMsgBotWorldState_Unit_ReliableGold int32 = -1
const Default_CMsgBotWorldState_Unit_UnreliableGold int32 = -1

func (m *CMsgBotWorldState_Unit) GetHandle() uint32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetUnitType() CMsgBotWorldState_UnitType {
	if m != nil && m.UnitType != nil {
		return *m.UnitType
	}
	return Default_CMsgBotWorldState_Unit_UnitType
}

func (m *CMsgBotWorldState_Unit) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgBotWorldState_Unit) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetLocation() *CMsgBotWorldState_Vector {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CMsgBotWorldState_Unit) GetIsAlive() bool {
	if m != nil && m.IsAlive != nil {
		return *m.IsAlive
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetBoundingRadius() int32 {
	if m != nil && m.BoundingRadius != nil {
		return *m.BoundingRadius
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetFacing() int32 {
	if m != nil && m.Facing != nil {
		return *m.Facing
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetGroundHeight() uint32 {
	if m != nil && m.GroundHeight != nil {
		return *m.GroundHeight
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetVisionRangeDaytime() uint32 {
	if m != nil && m.VisionRangeDaytime != nil {
		return *m.VisionRangeDaytime
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetVisionRangeNighttime() uint32 {
	if m != nil && m.VisionRangeNighttime != nil {
		return *m.VisionRangeNighttime
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetHealth() int32 {
	if m != nil && m.Health != nil {
		return *m.Health
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetHealthMax() int32 {
	if m != nil && m.HealthMax != nil {
		return *m.HealthMax
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetHealthRegen() float32 {
	if m != nil && m.HealthRegen != nil {
		return *m.HealthRegen
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetMana() int32 {
	if m != nil && m.Mana != nil {
		return *m.Mana
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetManaMax() int32 {
	if m != nil && m.ManaMax != nil {
		return *m.ManaMax
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetManaRegen() float32 {
	if m != nil && m.ManaRegen != nil {
		return *m.ManaRegen
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetBaseMovementSpeed() int32 {
	if m != nil && m.BaseMovementSpeed != nil {
		return *m.BaseMovementSpeed
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetCurrentMovementSpeed() int32 {
	if m != nil && m.CurrentMovementSpeed != nil {
		return *m.CurrentMovementSpeed
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAnimActivity() int32 {
	if m != nil && m.AnimActivity != nil {
		return *m.AnimActivity
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAnimCycle() float32 {
	if m != nil && m.AnimCycle != nil {
		return *m.AnimCycle
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetBaseDamage() int32 {
	if m != nil && m.BaseDamage != nil {
		return *m.BaseDamage
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetBaseDamageVariance() int32 {
	if m != nil && m.BaseDamageVariance != nil {
		return *m.BaseDamageVariance
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetBonusDamage() int32 {
	if m != nil && m.BonusDamage != nil {
		return *m.BonusDamage
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAttackDamage() int32 {
	if m != nil && m.AttackDamage != nil {
		return *m.AttackDamage
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAttackRange() int32 {
	if m != nil && m.AttackRange != nil {
		return *m.AttackRange
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAttackSpeed() float32 {
	if m != nil && m.AttackSpeed != nil {
		return *m.AttackSpeed
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAttackAnimPoint() float32 {
	if m != nil && m.AttackAnimPoint != nil {
		return *m.AttackAnimPoint
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAttackAcquisitionRange() int32 {
	if m != nil && m.AttackAcquisitionRange != nil {
		return *m.AttackAcquisitionRange
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAttackProjectileSpeed() int32 {
	if m != nil && m.AttackProjectileSpeed != nil {
		return *m.AttackProjectileSpeed
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAttackTargetHandle() uint32 {
	if m != nil && m.AttackTargetHandle != nil {
		return *m.AttackTargetHandle
	}
	return Default_CMsgBotWorldState_Unit_AttackTargetHandle
}

func (m *CMsgBotWorldState_Unit) GetAttackTargetName() string {
	if m != nil && m.AttackTargetName != nil {
		return *m.AttackTargetName
	}
	return ""
}

func (m *CMsgBotWorldState_Unit) GetAttacksPerSecond() int32 {
	if m != nil && m.AttacksPerSecond != nil {
		return *m.AttacksPerSecond
	}
	return Default_CMsgBotWorldState_Unit_AttacksPerSecond
}

func (m *CMsgBotWorldState_Unit) GetLastAttackTime() float32 {
	if m != nil && m.LastAttackTime != nil {
		return *m.LastAttackTime
	}
	return Default_CMsgBotWorldState_Unit_LastAttackTime
}

func (m *CMsgBotWorldState_Unit) GetBountyXp() uint32 {
	if m != nil && m.BountyXp != nil {
		return *m.BountyXp
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetBountyGoldMin() uint32 {
	if m != nil && m.BountyGoldMin != nil {
		return *m.BountyGoldMin
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetBountyGoldMax() uint32 {
	if m != nil && m.BountyGoldMax != nil {
		return *m.BountyGoldMax
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetIsChanneling() bool {
	if m != nil && m.IsChanneling != nil {
		return *m.IsChanneling
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetActiveAbilityHandle() uint32 {
	if m != nil && m.ActiveAbilityHandle != nil {
		return *m.ActiveAbilityHandle
	}
	return Default_CMsgBotWorldState_Unit_ActiveAbilityHandle
}

func (m *CMsgBotWorldState_Unit) GetIsAttackImmune() bool {
	if m != nil && m.IsAttackImmune != nil {
		return *m.IsAttackImmune
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsBlind() bool {
	if m != nil && m.IsBlind != nil {
		return *m.IsBlind
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsBlockDisabled() bool {
	if m != nil && m.IsBlockDisabled != nil {
		return *m.IsBlockDisabled
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsDisarmed() bool {
	if m != nil && m.IsDisarmed != nil {
		return *m.IsDisarmed
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsDominated() bool {
	if m != nil && m.IsDominated != nil {
		return *m.IsDominated
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsEvadeDisabled() bool {
	if m != nil && m.IsEvadeDisabled != nil {
		return *m.IsEvadeDisabled
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsHexed() bool {
	if m != nil && m.IsHexed != nil {
		return *m.IsHexed
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsInvisible() bool {
	if m != nil && m.IsInvisible != nil {
		return *m.IsInvisible
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsInvulnerable() bool {
	if m != nil && m.IsInvulnerable != nil {
		return *m.IsInvulnerable
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsMagicImmune() bool {
	if m != nil && m.IsMagicImmune != nil {
		return *m.IsMagicImmune
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsMuted() bool {
	if m != nil && m.IsMuted != nil {
		return *m.IsMuted
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsNightmared() bool {
	if m != nil && m.IsNightmared != nil {
		return *m.IsNightmared
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsRooted() bool {
	if m != nil && m.IsRooted != nil {
		return *m.IsRooted
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsSilenced() bool {
	if m != nil && m.IsSilenced != nil {
		return *m.IsSilenced
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsSpeciallyDeniable() bool {
	if m != nil && m.IsSpeciallyDeniable != nil {
		return *m.IsSpeciallyDeniable
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsStunned() bool {
	if m != nil && m.IsStunned != nil {
		return *m.IsStunned
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsUnableToMiss() bool {
	if m != nil && m.IsUnableToMiss != nil {
		return *m.IsUnableToMiss
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetHasScepter() bool {
	if m != nil && m.HasScepter != nil {
		return *m.HasScepter
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetIsSpeciallyUndeniable() bool {
	if m != nil && m.IsSpeciallyUndeniable != nil {
		return *m.IsSpeciallyUndeniable
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetAbilities() []*CMsgBotWorldState_Ability {
	if m != nil {
		return m.Abilities
	}
	return nil
}

func (m *CMsgBotWorldState_Unit) GetItems() []*CMsgBotWorldState_Ability {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CMsgBotWorldState_Unit) GetModifiers() []*CMsgBotWorldState_Modifier {
	if m != nil {
		return m.Modifiers
	}
	return nil
}

func (m *CMsgBotWorldState_Unit) GetIncomingTrackingProjectiles() []*CMsgBotWorldState_TrackingProjectile {
	if m != nil {
		return m.IncomingTrackingProjectiles
	}
	return nil
}

func (m *CMsgBotWorldState_Unit) GetActionType() uint32 {
	if m != nil && m.ActionType != nil {
		return *m.ActionType
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAbilityTargetHandle() uint32 {
	if m != nil && m.AbilityTargetHandle != nil {
		return *m.AbilityTargetHandle
	}
	return Default_CMsgBotWorldState_Unit_AbilityTargetHandle
}

func (m *CMsgBotWorldState_Unit) GetAbilityTargetName() string {
	if m != nil && m.AbilityTargetName != nil {
		return *m.AbilityTargetName
	}
	return ""
}

func (m *CMsgBotWorldState_Unit) GetIsUsingAbility() bool {
	if m != nil && m.IsUsingAbility != nil {
		return *m.IsUsingAbility
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetPrimaryAttribute() uint32 {
	if m != nil && m.PrimaryAttribute != nil {
		return *m.PrimaryAttribute
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetIsIllusion() bool {
	if m != nil && m.IsIllusion != nil {
		return *m.IsIllusion
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetRespawnTime() float32 {
	if m != nil && m.RespawnTime != nil {
		return *m.RespawnTime
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetBuybackCost() uint32 {
	if m != nil && m.BuybackCost != nil {
		return *m.BuybackCost
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetBuybackCooldown() float32 {
	if m != nil && m.BuybackCooldown != nil {
		return *m.BuybackCooldown
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetSpellAmplification() float32 {
	if m != nil && m.SpellAmplification != nil {
		return *m.SpellAmplification
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetArmor() float32 {
	if m != nil && m.Armor != nil {
		return *m.Armor
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetMagicResist() float32 {
	if m != nil && m.MagicResist != nil {
		return *m.MagicResist
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetEvasion() float32 {
	if m != nil && m.Evasion != nil {
		return *m.Evasion
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetXpNeededToLevel() uint32 {
	if m != nil && m.XpNeededToLevel != nil {
		return *m.XpNeededToLevel
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAbilityPoints() uint32 {
	if m != nil && m.AbilityPoints != nil {
		return *m.AbilityPoints
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetReliableGold() int32 {
	if m != nil && m.ReliableGold != nil {
		return *m.ReliableGold
	}
	return Default_CMsgBotWorldState_Unit_ReliableGold
}

func (m *CMsgBotWorldState_Unit) GetUnreliableGold() int32 {
	if m != nil && m.UnreliableGold != nil {
		return *m.UnreliableGold
	}
	return Default_CMsgBotWorldState_Unit_UnreliableGold
}

func (m *CMsgBotWorldState_Unit) GetLastHits() uint32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetDenies() uint32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetNetWorth() uint32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetStrength() uint32 {
	if m != nil && m.Strength != nil {
		return *m.Strength
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetAgility() uint32 {
	if m != nil && m.Agility != nil {
		return *m.Agility
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetIntelligence() uint32 {
	if m != nil && m.Intelligence != nil {
		return *m.Intelligence
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetRemainingLifespan() float32 {
	if m != nil && m.RemainingLifespan != nil {
		return *m.RemainingLifespan
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetFlyingCourier() bool {
	if m != nil && m.FlyingCourier != nil {
		return *m.FlyingCourier
	}
	return false
}

func (m *CMsgBotWorldState_Unit) GetShrineCooldown() float32 {
	if m != nil && m.ShrineCooldown != nil {
		return *m.ShrineCooldown
	}
	return 0
}

func (m *CMsgBotWorldState_Unit) GetIsShrineHealing() bool {
	if m != nil && m.IsShrineHealing != nil {
		return *m.IsShrineHealing
	}
	return false
}

func init() {
	proto.RegisterEnum("protocol.CMsgBotWorldState_UnitType", CMsgBotWorldState_UnitType_name, CMsgBotWorldState_UnitType_value)
	proto.RegisterEnum("protocol.CMsgBotWorldState_CourierState", CMsgBotWorldState_CourierState_name, CMsgBotWorldState_CourierState_value)
	proto.RegisterType((*CMsgBotWorldState)(nil), "protocol.CMsgBotWorldState")
	proto.RegisterType((*CMsgBotWorldState_Vector)(nil), "protocol.CMsgBotWorldState.Vector")
	proto.RegisterType((*CMsgBotWorldState_Player)(nil), "protocol.CMsgBotWorldState.Player")
	proto.RegisterType((*CMsgBotWorldState_Ability)(nil), "protocol.CMsgBotWorldState.Ability")
	proto.RegisterType((*CMsgBotWorldState_DroppedItem)(nil), "protocol.CMsgBotWorldState.DroppedItem")
	proto.RegisterType((*CMsgBotWorldState_RuneInfo)(nil), "protocol.CMsgBotWorldState.RuneInfo")
	proto.RegisterType((*CMsgBotWorldState_TeleportInfo)(nil), "protocol.CMsgBotWorldState.TeleportInfo")
	proto.RegisterType((*CMsgBotWorldState_Modifier)(nil), "protocol.CMsgBotWorldState.Modifier")
	proto.RegisterType((*CMsgBotWorldState_LinearProjectile)(nil), "protocol.CMsgBotWorldState.LinearProjectile")
	proto.RegisterType((*CMsgBotWorldState_TrackingProjectile)(nil), "protocol.CMsgBotWorldState.TrackingProjectile")
	proto.RegisterType((*CMsgBotWorldState_AvoidanceZone)(nil), "protocol.CMsgBotWorldState.AvoidanceZone")
	proto.RegisterType((*CMsgBotWorldState_Courier)(nil), "protocol.CMsgBotWorldState.Courier")
	proto.RegisterType((*CMsgBotWorldState_EventAbility)(nil), "protocol.CMsgBotWorldState.EventAbility")
	proto.RegisterType((*CMsgBotWorldState_EventDamage)(nil), "protocol.CMsgBotWorldState.EventDamage")
	proto.RegisterType((*CMsgBotWorldState_EventCourierKilled)(nil), "protocol.CMsgBotWorldState.EventCourierKilled")
	proto.RegisterType((*CMsgBotWorldState_EventRoshanKilled)(nil), "protocol.CMsgBotWorldState.EventRoshanKilled")
	proto.RegisterType((*CMsgBotWorldState_EventTree)(nil), "protocol.CMsgBotWorldState.EventTree")
	proto.RegisterType((*CMsgBotWorldState_Unit)(nil), "protocol.CMsgBotWorldState.Unit")
}

func init() {
	proto.RegisterFile("dota_gcmessages_common_bot_script.proto", fileDescriptor_930d4fac7267bb8b)
}

var fileDescriptor_930d4fac7267bb8b = []byte{
	// 3640 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x7a, 0x4b, 0x73, 0x1b, 0xc7,
	0x76, 0xff, 0x05, 0x49, 0x90, 0xe0, 0x01, 0x40, 0x82, 0x2d, 0x52, 0x1e, 0x53, 0x57, 0x96, 0x2c,
	0xf9, 0x41, 0x5b, 0x12, 0x25, 0xeb, 0xef, 0xff, 0xcd, 0xb5, 0xca, 0x71, 0x0a, 0x24, 0x61, 0x11,
	0x36, 0x5f, 0x35, 0x80, 0xa4, 0x5b, 0xce, 0x63, 0x6a, 0x38, 0xd3, 0x04, 0xfa, 0x6a, 0xa6, 0x07,
	0x9e, 0x1e, 0x50, 0x84, 0xf3, 0xba, 0xc9, 0x3a, 0x8b, 0x54, 0x16, 0xc9, 0xad, 0x54, 0x25, 0x5f,
	0x22, 0xbb, 0xac, 0xb2, 0xcc, 0x26, 0x55, 0xa9, 0xac, 0xb2, 0xc9, 0xee, 0xe6, 0x03, 0xe4, 0x13,
	0x24, 0x75, 0x4e, 0x77, 0x0f, 0x06, 0x04, 0x2f, 0x29, 0xcb, 0x77, 0x91, 0x8a, 0x36, 0x42, 0xff,
	0xce, 0xa3, 0xcf, 0xf4, 0xe3, 0xbc, 0x9a, 0xf0, 0x61, 0x98, 0x64, 0xbe, 0xd7, 0x0b, 0x62, 0xae,
	0x94, 0xdf, 0xe3, 0xca, 0x0b, 0x92, 0x38, 0x4e, 0xa4, 0x77, 0x9c, 0x64, 0x9e, 0x0a, 0x52, 0x31,
	0xc8, 0x36, 0x07, 0x69, 0x92, 0x25, 0xac, 0x42, 0xff, 0x05, 0x49, 0xb4, 0xbe, 0x76, 0xea, 0x47,
	0xa7, 0x9c, 0x9f, 0x65, 0x5c, 0x2a, 0x91, 0x48, 0xa5, 0x19, 0xee, 0xfc, 0xe5, 0x3e, 0xac, 0x6c,
	0xef, 0xab, 0xde, 0x56, 0x92, 0xbd, 0x48, 0xd2, 0x28, 0xec, 0x64, 0x7e, 0xc6, 0xd9, 0x5b, 0xb0,
	0x90, 0x71, 0x3f, 0xf6, 0x44, 0xe8, 0x94, 0x6e, 0x97, 0x36, 0xea, 0xee, 0x3c, 0x0e, 0xdb, 0x21,
	0xbb, 0x01, 0x8b, 0x3d, 0x3f, 0xe6, 0x5e, 0x26, 0x62, 0xee, 0xcc, 0xdc, 0x2e, 0x6d, 0xcc, 0xb8,
	0x15, 0x04, 0xba, 0x22, 0xe6, 0x48, 0x24, 0xbb, 0x88, 0x38, 0xab, 0x89, 0x08, 0x10, 0xf1, 0x26,
	0x00, 0x49, 0x2a, 0x9c, 0xc0, 0x99, 0x23, 0xad, 0xa4, 0x4b, 0xcf, 0xf8, 0x01, 0x2c, 0xf7, 0x79,
	0x9a, 0x78, 0x03, 0x11, 0xbc, 0x34, 0x3c, 0x65, 0xe2, 0xa9, 0x23, 0x7c, 0x24, 0x82, 0x97, 0x9a,
	0xef, 0x1d, 0xa8, 0xa2, 0x7a, 0x2f, 0x39, 0xf1, 0x42, 0x7f, 0xe4, 0xcc, 0xd3, 0x2c, 0x8b, 0x08,
	0x1d, 0x9e, 0xec, 0xf8, 0x23, 0xf6, 0x3e, 0x2c, 0xf5, 0xa2, 0xd1, 0xa0, 0xef, 0x05, 0x49, 0x12,
	0x85, 0xc9, 0x2b, 0xe9, 0x2c, 0x10, 0x4b, 0x9d, 0xd0, 0x6d, 0x03, 0xb2, 0x47, 0xb0, 0x3a, 0xc9,
	0xe6, 0x71, 0xc9, 0xe3, 0x91, 0x53, 0x21, 0x66, 0x36, 0xc1, 0xdc, 0x42, 0x0a, 0xdb, 0x82, 0x85,
	0x41, 0xe4, 0x8f, 0x78, 0xaa, 0x1c, 0xb8, 0x3d, 0xbb, 0x51, 0x7d, 0x7c, 0x67, 0xd3, 0xae, 0xed,
	0xe6, 0xd4, 0x02, 0x6e, 0x1e, 0x11, 0xeb, 0xd6, 0xdc, 0x3f, 0xfd, 0xea, 0x66, 0xc9, 0xb5, 0x82,
	0xec, 0x73, 0x28, 0x0f, 0xa5, 0xc8, 0x94, 0x53, 0x25, 0x0d, 0xb7, 0x2f, 0xd3, 0xf0, 0x4c, 0x8a,
	0xcc, 0xc8, 0x6b, 0x21, 0xe6, 0x42, 0x3d, 0x4c, 0x93, 0xc1, 0x80, 0x87, 0x9e, 0xc8, 0x78, 0xac,
	0x9c, 0x1a, 0x69, 0xf9, 0xf0, 0x32, 0x2d, 0x3b, 0x5a, 0xa0, 0x9d, 0xf1, 0x78, 0x6b, 0xee, 0x5f,
	0x7f, 0x75, 0x73, 0xe0, 0xd6, 0xc2, 0x31, 0xa4, 0x70, 0x1d, 0x26, 0x74, 0x7a, 0x21, 0x8f, 0x32,
	0x5f, 0x39, 0x83, 0xdb, 0xb3, 0x1b, 0x65, 0x97, 0x15, 0x79, 0x77, 0x88, 0xc2, 0xda, 0x00, 0xe9,
	0x50, 0x72, 0x4f, 0xc8, 0x93, 0x44, 0x39, 0x75, 0x32, 0xe1, 0xbd, 0xcb, 0x4c, 0x70, 0x87, 0x92,
	0xb7, 0xe5, 0x49, 0x42, 0xf3, 0x7f, 0xeb, 0x2e, 0xa6, 0x66, 0xac, 0xd8, 0xc7, 0xb0, 0x32, 0x56,
	0x65, 0x67, 0xfe, 0x96, 0x66, 0x5e, 0xce, 0xb9, 0xcc, 0xb4, 0x2f, 0x80, 0x09, 0x19, 0x24, 0xb1,
	0x90, 0x3d, 0x2f, 0xe3, 0x11, 0x1f, 0x24, 0x69, 0xa6, 0x9c, 0x25, 0x9a, 0x7e, 0xe3, 0xb2, 0xe9,
	0xbb, 0x86, 0x19, 0x95, 0xb9, 0x2b, 0x56, 0x87, 0x45, 0x15, 0xf3, 0x81, 0x45, 0x42, 0x72, 0x3f,
	0xf5, 0x06, 0x69, 0xf2, 0x73, 0x1e, 0x64, 0x22, 0xe2, 0xca, 0x59, 0x26, 0xc5, 0xf7, 0x2f, 0x53,
	0xbc, 0x47, 0x52, 0x47, 0xb9, 0x90, 0xd9, 0xac, 0x95, 0xe8, 0x1c, 0x8e, 0x1b, 0xb7, 0xec, 0x9f,
	0x26, 0x22, 0xf4, 0x65, 0xc0, 0xbd, 0xef, 0x12, 0xc9, 0x95, 0xd3, 0x20, 0xfd, 0x1f, 0x5d, 0xa6,
	0xbf, 0x69, 0x45, 0xbe, 0x49, 0x24, 0x77, 0x97, 0xfc, 0xe2, 0x50, 0xb1, 0x16, 0x54, 0x82, 0x64,
	0x98, 0x0a, 0x3c, 0x8f, 0x2b, 0xa4, 0xec, 0xee, 0x65, 0xca, 0xb6, 0x35, 0xaf, 0xb1, 0x31, 0x17,
	0x65, 0x87, 0xb0, 0xe4, 0x1f, 0x8b, 0x48, 0x64, 0x23, 0x8f, 0x9f, 0x72, 0x99, 0x29, 0x67, 0xf5,
	0xea, 0x25, 0x6d, 0x21, 0x67, 0x53, 0x8b, 0xb9, 0x75, 0x23, 0x4f, 0xa0, 0x62, 0x7b, 0x50, 0x0f,
	0xfd, 0xd8, 0xef, 0x71, 0xab, 0x6f, 0xed, 0xea, 0x43, 0x4a, 0xa2, 0x3b, 0x24, 0xe5, 0xd6, 0xb4,
	0xb4, 0xd1, 0x76, 0x0c, 0x6b, 0xc6, 0x54, 0xef, 0xa5, 0x88, 0x22, 0x1e, 0x5a, 0xad, 0xd7, 0x49,
	0xeb, 0xe6, 0x95, 0x5a, 0xcd, 0x77, 0x7f, 0x4d, 0xc2, 0xee, 0xb5, 0xa0, 0x38, 0x34, 0x73, 0x78,
	0xb0, 0x9a, 0x26, 0xaa, 0xef, 0xcb, 0x73, 0x53, 0xbc, 0x45, 0x53, 0x3c, 0xb8, 0x72, 0x0a, 0x97,
	0x84, 0xcd, 0x0c, 0x2c, 0x2d, 0x8c, 0xcc, 0x04, 0x5f, 0x42, 0x35, 0x4b, 0x79, 0xbe, 0x20, 0x0e,
	0xe9, 0x7d, 0xff, 0x4a, 0xbd, 0xdd, 0x94, 0x73, 0x17, 0x50, 0x52, 0xeb, 0x59, 0x7f, 0x0c, 0xf3,
	0xcf, 0x79, 0x90, 0x25, 0x29, 0xab, 0x41, 0xe9, 0x8c, 0x1c, 0xf3, 0x8c, 0x5b, 0x3a, 0xc3, 0xd1,
	0xc8, 0xf8, 0xe2, 0xd2, 0x08, 0x47, 0xdf, 0x19, 0xe7, 0x5b, 0xfa, 0x6e, 0xfd, 0xbf, 0x66, 0x60,
	0x5e, 0xfb, 0x22, 0xf6, 0x2e, 0x2c, 0x6a, 0x3f, 0x64, 0xbd, 0x7a, 0x79, 0x6b, 0xee, 0x9f, 0xe9,
	0x34, 0x68, 0xb8, 0x1d, 0xa2, 0xdb, 0x27, 0x27, 0x2c, 0x42, 0xd2, 0x57, 0x77, 0xe7, 0x71, 0xd8,
	0x0e, 0xd9, 0xdb, 0x50, 0x11, 0xca, 0xf3, 0x23, 0x71, 0xaa, 0x1d, 0x7b, 0xc5, 0x5d, 0x10, 0xaa,
	0x89, 0x43, 0xf6, 0x2e, 0xd4, 0x52, 0xae, 0x06, 0xfe, 0x2b, 0xa9, 0xfd, 0xfe, 0x1c, 0x4d, 0x5d,
	0x35, 0x18, 0xb9, 0xfe, 0x55, 0x28, 0xe3, 0xd2, 0x2a, 0xe3, 0xd1, 0xf5, 0x80, 0x5d, 0x87, 0xf9,
	0x90, 0xfb, 0x59, 0x5f, 0x91, 0x13, 0xaf, 0xbb, 0x66, 0xc4, 0x1c, 0x58, 0xf0, 0x95, 0x12, 0x2a,
	0x53, 0xe4, 0xba, 0xeb, 0xae, 0x1d, 0x16, 0xa3, 0x52, 0x65, 0x22, 0x2a, 0x3d, 0x81, 0x6b, 0x83,
	0x54, 0xc4, 0x7e, 0x3a, 0xf2, 0xd0, 0x55, 0x7a, 0x7d, 0x5f, 0x86, 0x11, 0x77, 0x16, 0x91, 0xe9,
	0x09, 0x7c, 0xfa, 0xf8, 0xb3, 0x4f, 0x3f, 0xfb, 0xc9, 0x6f, 0x3d, 0xfe, 0xec, 0xff, 0xbb, 0x2b,
	0x86, 0x0d, 0x9d, 0xeb, 0x2e, 0x31, 0xb1, 0x06, 0xcc, 0xc6, 0x71, 0xea, 0x00, 0x2e, 0x88, 0x8b,
	0x3f, 0xd9, 0x17, 0x50, 0x89, 0x92, 0xc0, 0xcf, 0x44, 0x22, 0x9d, 0xea, 0xed, 0xd2, 0x55, 0xae,
	0x5e, 0xef, 0x89, 0x9b, 0xcb, 0xac, 0xff, 0x5d, 0x19, 0x16, 0xcc, 0xed, 0x60, 0x3f, 0x86, 0x79,
	0x63, 0x0c, 0xc5, 0x51, 0xb3, 0xe2, 0x06, 0x63, 0xef, 0x02, 0xd8, 0xdb, 0x67, 0x96, 0xbc, 0xfc,
	0x64, 0xe6, 0xc1, 0x27, 0xee, 0xa2, 0x41, 0xdb, 0x21, 0x63, 0x30, 0xa7, 0xa2, 0x24, 0xa3, 0x55,
	0xaf, 0xbb, 0xf4, 0x9b, 0x3d, 0x84, 0x7a, 0xe0, 0xab, 0x8c, 0xa7, 0xf6, 0x43, 0xcb, 0x53, 0x1f,
	0x5a, 0xd3, 0x0c, 0xe6, 0x1b, 0x57, 0xa1, 0x1c, 0xf1, 0x53, 0x1e, 0x99, 0x95, 0xd6, 0x03, 0x8c,
	0xc8, 0xc8, 0xe5, 0xa5, 0xbe, 0xec, 0x71, 0x5a, 0x80, 0xba, 0xbb, 0x88, 0x88, 0x8b, 0x00, 0x6e,
	0x6c, 0xd0, 0xf7, 0xa5, 0xe4, 0x91, 0xde, 0xd8, 0xaa, 0xde, 0x58, 0x83, 0xd1, 0xc6, 0x3e, 0x02,
	0x96, 0xc7, 0xcf, 0x94, 0xc7, 0xbe, 0x90, 0x42, 0xf6, 0x9c, 0x1a, 0x32, 0x3e, 0x29, 0x3d, 0x72,
	0x57, 0x2c, 0xd1, 0xb5, 0x34, 0x54, 0x8a, 0x07, 0x29, 0xc8, 0xc4, 0xa9, 0x9f, 0xf1, 0xd0, 0x59,
	0xa5, 0xc3, 0x54, 0x15, 0xaa, 0x69, 0x21, 0x34, 0x4b, 0x28, 0x2f, 0x4b, 0x7a, 0xbd, 0x88, 0x87,
	0xce, 0x1a, 0x31, 0x2c, 0x0a, 0xd5, 0xd5, 0x00, 0x7b, 0x00, 0xd7, 0x84, 0xf2, 0x84, 0xf4, 0xec,
	0xca, 0x0d, 0xfa, 0xbe, 0xe2, 0xce, 0x75, 0xe2, 0x6b, 0x08, 0xd5, 0x96, 0x66, 0xed, 0x8f, 0x10,
	0x67, 0x77, 0xa1, 0x2e, 0x94, 0x67, 0x8c, 0x46, 0xeb, 0xde, 0x22, 0xc6, 0x9a, 0x50, 0xdb, 0x39,
	0x86, 0x89, 0x8b, 0x50, 0x9e, 0xca, 0x92, 0x88, 0x4b, 0xc7, 0x21, 0x86, 0x8a, 0x50, 0x1d, 0x1a,
	0x63, 0x94, 0x12, 0xca, 0x3b, 0x19, 0x46, 0xd1, 0xc8, 0xc3, 0xd5, 0xf1, 0x8f, 0x23, 0xee, 0xbc,
	0x4d, 0x4c, 0xcb, 0x42, 0x7d, 0x89, 0xf8, 0xb6, 0x81, 0xf1, 0xec, 0x06, 0x7d, 0x3f, 0xed, 0x71,
	0xe5, 0xbc, 0xa3, 0xcf, 0xae, 0x19, 0xb2, 0x7b, 0xb0, 0xa2, 0x78, 0x90, 0xc8, 0x10, 0x0f, 0xa9,
	0xe5, 0xb9, 0x45, 0x3c, 0x8d, 0x9c, 0xb0, 0x6d, 0x98, 0xef, 0x03, 0x13, 0x94, 0xd3, 0x1d, 0x0b,
	0xc9, 0x43, 0x2f, 0x4a, 0x82, 0x97, 0x3c, 0x74, 0x36, 0xec, 0x27, 0x6e, 0x1b, 0xc2, 0x1e, 0xe1,
	0x6c, 0x13, 0x56, 0x06, 0xc9, 0x2b, 0x9e, 0x7a, 0x59, 0xca, 0xfd, 0x50, 0x51, 0xf6, 0xe4, 0x3c,
	0xce, 0x0f, 0xd3, 0x32, 0x11, 0xbb, 0x44, 0xc3, 0x13, 0xbb, 0xfe, 0x73, 0xa8, 0x16, 0xd2, 0x02,
	0x76, 0x03, 0x16, 0x30, 0xf4, 0xe7, 0x5e, 0x81, 0x84, 0xe6, 0x11, 0x6a, 0x87, 0x13, 0x77, 0x61,
	0xe6, 0x0d, 0xee, 0xc2, 0xdf, 0x97, 0xa0, 0x62, 0x13, 0x00, 0x3c, 0xcb, 0xd9, 0x68, 0xa0, 0xaf,
	0x42, 0xd9, 0xa5, 0xdf, 0x3f, 0x74, 0x02, 0xf4, 0x22, 0xf8, 0xbd, 0x43, 0x65, 0x6e, 0x88, 0x19,
	0x61, 0x3e, 0x49, 0x79, 0xa2, 0x12, 0x18, 0x74, 0x15, 0xe7, 0xd2, 0x78, 0xa6, 0x3a, 0xc2, 0x1d,
	0x44, 0x3b, 0x9c, 0xcb, 0xf5, 0xbf, 0x2a, 0x41, 0xad, 0x98, 0x22, 0xe0, 0x59, 0x38, 0xe7, 0x26,
	0x0b, 0x0e, 0xf2, 0x87, 0x5a, 0xfb, 0x3e, 0x2c, 0x91, 0x55, 0xe3, 0xcb, 0x32, 0x3b, 0x36, 0x2a,
	0xbf, 0x25, 0xeb, 0x7f, 0x3b, 0x03, 0x95, 0xfd, 0x24, 0x14, 0x27, 0x82, 0xa7, 0x05, 0x17, 0xb2,
	0x70, 0x81, 0x0b, 0x61, 0x30, 0x27, 0xfd, 0x58, 0xaf, 0xe9, 0xa2, 0x4b, 0xbf, 0xd9, 0x2d, 0xa8,
	0xaa, 0xcc, 0x0f, 0x5e, 0x7a, 0x41, 0x32, 0x94, 0x99, 0x71, 0xe5, 0x40, 0xd0, 0x36, 0x22, 0xec,
	0x93, 0x71, 0xd4, 0x37, 0xaa, 0x67, 0xa7, 0x3c, 0x88, 0x8d, 0xeb, 0xbb, 0x17, 0xb9, 0xaa, 0xb9,
	0x8b, 0x5c, 0xd5, 0x03, 0x60, 0xf9, 0x77, 0x79, 0xe1, 0x30, 0xd5, 0xcb, 0x54, 0xa6, 0x0f, 0x5c,
	0xc9, 0x29, 0x3b, 0x86, 0xc0, 0x7e, 0x02, 0x6f, 0xf9, 0xc3, 0x33, 0x11, 0x09, 0xeb, 0xb6, 0x95,
	0x31, 0x06, 0x03, 0xc2, 0xec, 0x46, 0xdd, 0x5d, 0xcb, 0xc9, 0xe8, 0xae, 0x95, 0x36, 0x44, 0xad,
	0xff, 0xdb, 0x2c, 0x34, 0xce, 0xe7, 0x5e, 0x57, 0xf8, 0xd9, 0x29, 0x87, 0x39, 0x73, 0x85, 0xc3,
	0x7c, 0x01, 0x0d, 0x23, 0x40, 0xf1, 0x84, 0x4e, 0x2d, 0x46, 0x93, 0xa5, 0xcb, 0x53, 0x5d, 0xb4,
	0xb3, 0x3b, 0x1a, 0xf0, 0x27, 0x0b, 0xed, 0x83, 0xe7, 0xcd, 0xbd, 0xf6, 0x8e, 0xbb, 0xa4, 0xd5,
	0x58, 0x02, 0xdb, 0xc8, 0x15, 0x8f, 0x0f, 0xd9, 0x2c, 0x1d, 0x32, 0xc3, 0x79, 0x64, 0x8f, 0xda,
	0xf4, 0x1e, 0xcd, 0x7d, 0xbf, 0x3d, 0x2a, 0x5f, 0xb4, 0x47, 0xc5, 0x03, 0x3c, 0xff, 0x06, 0x07,
	0xf8, 0x0b, 0xa8, 0x9c, 0xf2, 0x28, 0x09, 0x44, 0x36, 0xa2, 0xe3, 0xf8, 0x9a, 0xf2, 0x56, 0x06,
	0xaf, 0x6b, 0xea, 0x87, 0x62, 0xa8, 0x6c, 0x04, 0xd7, 0xa3, 0xf5, 0x7f, 0x9f, 0x05, 0xd6, 0x4d,
	0xfd, 0xe0, 0xa5, 0x90, 0xbd, 0x0b, 0xb7, 0x15, 0x5e, 0x67, 0x5b, 0x4b, 0xff, 0x9b, 0xb6, 0x75,
	0xe6, 0x35, 0xb7, 0xf5, 0x37, 0x71, 0xf5, 0x8a, 0xdb, 0x5a, 0x7e, 0x83, 0x6d, 0x5d, 0x2f, 0x6c,
	0xab, 0xce, 0x11, 0xc6, 0x5b, 0xa6, 0x43, 0x76, 0x98, 0x84, 0x3d, 0x4e, 0xa1, 0x6f, 0xc1, 0x86,
	0xec, 0x1d, 0x0b, 0x99, 0xf8, 0xe9, 0x67, 0xe8, 0x61, 0x68, 0x63, 0x29, 0x7e, 0x36, 0x69, 0x8c,
	0x29, 0x68, 0x7d, 0xa2, 0x96, 0x99, 0xb0, 0xb6, 0xf4, 0x06, 0xd6, 0xfe, 0x46, 0xae, 0xf3, 0xc2,
	0xff, 0x85, 0xeb, 0x3c, 0xbe, 0x4e, 0xf3, 0x13, 0xd7, 0xe9, 0x97, 0x25, 0x58, 0x30, 0xa5, 0xcf,
	0x15, 0xae, 0xd1, 0x85, 0xb2, 0xee, 0xb6, 0xcc, 0xd0, 0x7a, 0x6c, 0xbc, 0x46, 0x11, 0x49, 0x83,
	0x27, 0x6c, 0xfb, 0xf0, 0x99, 0xdb, 0x6e, 0xb9, 0x5e, 0xa7, 0xdb, 0xec, 0xb6, 0xbc, 0xf6, 0x41,
	0xbb, 0xeb, 0x6a, 0x55, 0x93, 0x21, 0x74, 0x76, 0x32, 0x84, 0xae, 0xff, 0x67, 0x09, 0x6a, 0xc5,
	0x02, 0xf2, 0xdc, 0x67, 0x96, 0x2e, 0xfa, 0xcc, 0x09, 0x85, 0x33, 0xe7, 0x62, 0xf2, 0x3d, 0xa8,
	0x16, 0x93, 0xfe, 0xe9, 0xeb, 0x04, 0xc3, 0x71, 0xb6, 0x5f, 0x3c, 0x7a, 0x73, 0x6f, 0x70, 0xf4,
	0x36, 0xa0, 0x31, 0x4e, 0x27, 0x31, 0xd3, 0x4a, 0x33, 0xda, 0x99, 0x8a, 0xbb, 0x94, 0x67, 0x94,
	0x1d, 0x44, 0xd7, 0x7f, 0x39, 0x03, 0xd5, 0x42, 0x61, 0x4b, 0xe5, 0x0e, 0xfd, 0xb2, 0x1d, 0x35,
	0x3d, 0x42, 0x8d, 0xa7, 0x22, 0xc8, 0x44, 0x3c, 0xed, 0x3a, 0x34, 0x9e, 0x1f, 0xa1, 0x9f, 0x02,
	0x33, 0x9c, 0x97, 0x7f, 0xaf, 0xd1, 0x57, 0xa8, 0x71, 0xee, 0x03, 0xd3, 0x97, 0x73, 0xe2, 0xa0,
	0x92, 0x27, 0x71, 0x1b, 0x96, 0x92, 0xcf, 0xf3, 0x39, 0xac, 0xe6, 0xdc, 0xc5, 0x99, 0xa6, 0xab,
	0x8c, 0x5c, 0x6b, 0x61, 0xae, 0xc9, 0xed, 0x9c, 0xbf, 0x60, 0x3b, 0xd7, 0xff, 0xa5, 0x04, 0x6c,
	0xba, 0x3a, 0xff, 0xf5, 0x4d, 0xc7, 0x27, 0x60, 0x0b, 0xf7, 0x09, 0x7b, 0xa6, 0x6f, 0xfd, 0x8a,
	0x61, 0x2b, 0x98, 0xb3, 0x01, 0x0d, 0x2a, 0xeb, 0x2f, 0xb8, 0xa1, 0x1a, 0x2f, 0x2e, 0xaf, 0xe1,
	0x2c, 0x4e, 0x32, 0x7d, 0x4b, 0x8d, 0xbe, 0xf1, 0x1c, 0xeb, 0xaf, 0x60, 0x65, 0xaa, 0x13, 0x70,
	0xe1, 0xc4, 0xa5, 0xef, 0x31, 0xf1, 0xcc, 0x6b, 0x4c, 0xfc, 0x8f, 0x25, 0x58, 0xcc, 0x7b, 0x05,
	0xb4, 0x7e, 0x29, 0xe7, 0xc5, 0xf5, 0x4b, 0x39, 0x6f, 0x87, 0xec, 0xc7, 0xb0, 0x18, 0x72, 0x95,
	0xa5, 0xc9, 0x88, 0xeb, 0xb3, 0x55, 0x71, 0xc7, 0x00, 0x52, 0x4d, 0xb1, 0xce, 0x43, 0x53, 0xdc,
	0x8f, 0x81, 0x1f, 0x7c, 0x61, 0x1c, 0x58, 0x08, 0x39, 0x7e, 0x69, 0x68, 0xee, 0x89, 0x1d, 0xae,
	0xff, 0xe2, 0x26, 0xcc, 0xe1, 0xb7, 0x5c, 0xe1, 0xa0, 0xbe, 0x82, 0xc5, 0xb1, 0xd3, 0x9e, 0x79,
	0x13, 0xa7, 0x5d, 0x19, 0x5a, 0x77, 0x6d, 0x93, 0xe5, 0xd9, 0x42, 0xb2, 0x5c, 0x38, 0x75, 0x73,
	0x13, 0xa7, 0x2e, 0x2f, 0x9a, 0xcb, 0xc5, 0xa2, 0xf9, 0x87, 0x26, 0x50, 0xc5, 0x4e, 0xca, 0xc2,
	0x64, 0x27, 0x65, 0xc2, 0xcb, 0x55, 0xce, 0x79, 0xb9, 0x0f, 0x61, 0xf9, 0x38, 0x19, 0xca, 0x10,
	0x73, 0x6b, 0xe3, 0xf2, 0x75, 0xcb, 0x62, 0xc9, 0xc2, 0x2e, 0xa1, 0xe8, 0x67, 0x4e, 0xfc, 0x00,
	0x4b, 0x8b, 0x2a, 0xd1, 0xcd, 0x08, 0x0b, 0xe1, 0x5e, 0x8a, 0xac, 0x5e, 0x9f, 0x8b, 0x5e, 0x3f,
	0xa3, 0x32, 0xbd, 0xee, 0xd6, 0x34, 0xb8, 0x4b, 0x18, 0x7b, 0x04, 0xab, 0xa7, 0x42, 0x89, 0x44,
	0xea, 0xa6, 0x80, 0x17, 0xfa, 0x23, 0xaa, 0xfd, 0x97, 0x89, 0x97, 0x69, 0x1a, 0xb5, 0x07, 0x76,
	0x34, 0x85, 0x7d, 0x0a, 0xd7, 0x27, 0x24, 0x24, 0xea, 0x21, 0x99, 0x06, 0xc9, 0xac, 0x16, 0x64,
	0x0e, 0x2c, 0x0d, 0x8d, 0xec, 0x73, 0x3f, 0xca, 0xfa, 0xd4, 0x00, 0x28, 0xbb, 0x66, 0x84, 0xb5,
	0xbf, 0xfe, 0xe5, 0xc5, 0xfe, 0x19, 0xd5, 0xfe, 0x65, 0x77, 0x51, 0x23, 0xfb, 0xfe, 0x19, 0xa6,
	0x22, 0x86, 0x9c, 0xf2, 0x1e, 0x97, 0x54, 0xf4, 0xcf, 0xb8, 0x55, 0x8d, 0xb9, 0x08, 0xe1, 0x16,
	0xc7, 0xbe, 0xf4, 0xa9, 0x40, 0x2f, 0xbb, 0xf4, 0x1b, 0xd7, 0x1c, 0xff, 0x27, 0x9d, 0xeb, 0x84,
	0x2f, 0xe0, 0x18, 0x35, 0xde, 0x04, 0x20, 0x92, 0xd6, 0x77, 0x43, 0xbf, 0x26, 0x20, 0xa2, 0xb5,
	0x6d, 0xc2, 0xb5, 0x63, 0x5f, 0x71, 0x2f, 0x4e, 0x4e, 0x79, 0xcc, 0x65, 0xe6, 0xa9, 0x01, 0xe7,
	0x21, 0xd5, 0xf6, 0x65, 0x77, 0x05, 0x49, 0xfb, 0x86, 0xd2, 0x41, 0x02, 0xae, 0x46, 0x30, 0x4c,
	0x53, 0xe4, 0x3c, 0x27, 0x72, 0x8b, 0x44, 0x56, 0x0d, 0x75, 0x52, 0xea, 0x2e, 0xd4, 0x7d, 0x29,
	0x62, 0xdd, 0x16, 0xc1, 0x14, 0xec, 0x2e, 0x31, 0xd7, 0x10, 0x6c, 0x1a, 0x0c, 0x2d, 0x25, 0xa6,
	0x60, 0x14, 0x44, 0xdc, 0x79, 0x4f, 0x5b, 0x8a, 0xc8, 0x36, 0x02, 0x58, 0xf3, 0x91, 0xa5, 0x26,
	0xc6, 0x6c, 0x90, 0x06, 0x40, 0xc8, 0xc4, 0x9f, 0x47, 0xb0, 0x5a, 0x60, 0xf0, 0x4e, 0xfd, 0x54,
	0x60, 0x42, 0xe6, 0x7c, 0x44, 0x9c, 0x6c, 0xcc, 0xf9, 0xdc, 0x50, 0x70, 0xb5, 0x8f, 0x13, 0x39,
	0x54, 0x56, 0xe7, 0xc7, 0xc4, 0x59, 0x25, 0xcc, 0x28, 0x45, 0xcb, 0x29, 0x04, 0x58, 0x9e, 0x7b,
	0xc6, 0x72, 0x02, 0x0d, 0xd3, 0xbb, 0x60, 0xc6, 0xa6, 0xd3, 0x74, 0x5f, 0xeb, 0xd1, 0x58, 0xde,
	0x6b, 0x32, 0x2c, 0x7a, 0xb5, 0x1e, 0xe8, 0x8d, 0xd5, 0x98, 0x5e, 0xa4, 0x8f, 0x61, 0xc5, 0xb0,
	0xd0, 0x32, 0x0c, 0x12, 0x21, 0x33, 0x67, 0x93, 0xf8, 0x96, 0x35, 0xa1, 0x29, 0x45, 0x7c, 0x84,
	0x30, 0xfb, 0x29, 0x38, 0x96, 0x37, 0xf8, 0x76, 0x28, 0x94, 0xc8, 0xf2, 0x03, 0xea, 0x3c, 0xa4,
	0xd9, 0xaf, 0x1b, 0x91, 0x31, 0x59, 0x1b, 0x82, 0x45, 0xa9, 0x96, 0x1c, 0xbf, 0x06, 0x18, 0x9b,
	0x1e, 0x91, 0xe0, 0x9a, 0x26, 0x8f, 0x6b, 0x14, 0x6d, 0x5d, 0x1e, 0x33, 0xbd, 0xcc, 0x4f, 0x7b,
	0x3c, 0xf7, 0xe2, 0x9f, 0xfc, 0xba, 0x98, 0xd9, 0x25, 0xb6, 0xf3, 0xf1, 0xd9, 0x4a, 0x93, 0x97,
	0xfa, 0x94, 0xbc, 0x54, 0xa3, 0xc8, 0x7f, 0xe0, 0xeb, 0xae, 0x9b, 0xc6, 0x94, 0x37, 0xe0, 0xa9,
	0xa7, 0xbb, 0x47, 0x85, 0x86, 0x8f, 0x91, 0x50, 0x47, 0x3c, 0xed, 0x10, 0x8d, 0xdd, 0x87, 0x46,
	0xe4, 0xab, 0xcc, 0xb3, 0x93, 0xe0, 0xf5, 0xfc, 0x7f, 0xd4, 0xa5, 0x43, 0xfe, 0x25, 0xa4, 0xe9,
	0x64, 0xdd, 0x3e, 0xe3, 0xa1, 0x4f, 0xc9, 0x46, 0xde, 0xd9, 0xc0, 0xf9, 0x5c, 0x57, 0x03, 0x1a,
	0xf8, 0xd9, 0x80, 0x7d, 0xa0, 0xfd, 0x50, 0x36, 0xf2, 0x7a, 0x49, 0x14, 0x7a, 0xb1, 0x90, 0xce,
	0x6f, 0xeb, 0x77, 0x3a, 0x0d, 0x3f, 0x4d, 0xa2, 0x70, 0x5f, 0xc8, 0x29, 0x3e, 0xff, 0xcc, 0xf9,
	0x62, 0x8a, 0xcf, 0x3f, 0x9b, 0xee, 0xcf, 0x35, 0x2f, 0xe8, 0xcf, 0x7d, 0x01, 0x6b, 0x74, 0x37,
	0xb8, 0x77, 0x2e, 0x87, 0xde, 0x9a, 0x5a, 0xde, 0x6b, 0x9a, 0xb1, 0x39, 0x91, 0x49, 0xeb, 0xac,
	0xcd, 0x7c, 0xbd, 0x88, 0xe3, 0xa1, 0xe4, 0xce, 0x97, 0x36, 0x6b, 0xd3, 0x5f, 0xde, 0x26, 0xd4,
	0xb8, 0xe7, 0xe3, 0x48, 0xc8, 0xd0, 0x79, 0x6a, 0xdd, 0xf3, 0x16, 0x0e, 0x4d, 0x1f, 0xf0, 0x38,
	0x4a, 0xf0, 0xb4, 0x0b, 0x85, 0x85, 0x4f, 0xe8, 0xec, 0xda, 0x3e, 0xe0, 0x16, 0xe2, 0x3b, 0x06,
	0xc6, 0xdb, 0x88, 0x35, 0x93, 0x50, 0x7e, 0x1a, 0xf3, 0xd0, 0x69, 0x13, 0x17, 0x08, 0xb5, 0x63,
	0x90, 0xbc, 0xa8, 0x8a, 0x85, 0xa4, 0x3e, 0xe8, 0x57, 0xe3, 0xa2, 0xca, 0x40, 0x66, 0x3e, 0x7e,
	0xea, 0x87, 0x7c, 0x3c, 0xdf, 0xd7, 0x76, 0xbe, 0x16, 0xe2, 0xf9, 0x7c, 0xda, 0xec, 0x3e, 0x3f,
	0xe3, 0xa1, 0xb3, 0x67, 0xcd, 0xde, 0xc5, 0xa1, 0x99, 0x49, 0x48, 0xf4, 0xc3, 0x58, 0xbe, 0xed,
	0xdb, 0x99, 0xda, 0x16, 0xc2, 0xd8, 0xa2, 0x59, 0x86, 0x91, 0xe4, 0x29, 0x15, 0x79, 0x07, 0x76,
	0x75, 0xda, 0x05, 0x14, 0x37, 0x55, 0x28, 0x2f, 0xf6, 0x7b, 0x22, 0xb0, 0xcb, 0x78, 0x48, 0x8c,
	0x75, 0xa1, 0xf6, 0x11, 0x9d, 0x58, 0xc5, 0x78, 0x88, 0x5f, 0x76, 0x64, 0xcd, 0xd9, 0xc7, 0xa1,
	0xd9, 0x6f, 0x8a, 0x12, 0xb1, 0x9f, 0xf2, 0xd0, 0x71, 0xed, 0x7e, 0x1f, 0xe4, 0x98, 0xa9, 0x27,
	0xd3, 0x24, 0x41, 0x05, 0x1d, 0x5b, 0x4f, 0xba, 0x34, 0x36, 0x6b, 0xab, 0x44, 0xc4, 0x65, 0xc0,
	0x43, 0xa7, 0x6b, 0xd7, 0xb6, 0x63, 0x10, 0xf6, 0x18, 0xd6, 0x90, 0x61, 0xc0, 0x03, 0xe1, 0x47,
	0xd1, 0xc8, 0x0b, 0xb9, 0x14, 0xf4, 0x51, 0xcf, 0x88, 0xf5, 0x9a, 0x50, 0x1d, 0x4b, 0xdb, 0x31,
	0x24, 0xd3, 0x74, 0x56, 0xd9, 0x50, 0x62, 0x16, 0xf4, 0xdc, 0x36, 0x9d, 0x3b, 0x1a, 0x60, 0x1f,
	0xd1, 0x5e, 0x0c, 0x25, 0xf2, 0x7a, 0x59, 0xe2, 0xc5, 0x42, 0x29, 0xe7, 0x85, 0x5d, 0xa3, 0x67,
	0x84, 0x77, 0x93, 0x7d, 0xa1, 0x14, 0x9a, 0xd7, 0xf7, 0x95, 0xa7, 0x02, 0x3e, 0xc8, 0x78, 0xea,
	0xfc, 0x4c, 0x9b, 0xd7, 0xf7, 0x55, 0x47, 0x23, 0xe8, 0x62, 0x26, 0xcc, 0x1b, 0xca, 0xdc, 0xc0,
	0x3f, 0x20, 0xe6, 0xb5, 0x82, 0x81, 0xcf, 0x72, 0x22, 0x7b, 0x0a, 0x26, 0x85, 0x16, 0x5c, 0x39,
	0xdf, 0x5c, 0xfd, 0xe4, 0x67, 0xae, 0x80, 0x79, 0xf2, 0x1b, 0xcb, 0xb2, 0xdf, 0x81, 0xb2, 0x7e,
	0x3f, 0xfe, 0xdd, 0xef, 0xab, 0x44, 0xcb, 0xb1, 0x5d, 0x58, 0x8c, 0x4d, 0x77, 0x52, 0x39, 0xbf,
	0x77, 0xf5, 0x0b, 0xb0, 0x6d, 0x65, 0x5a, 0x53, 0x72, 0x61, 0x76, 0x06, 0x37, 0xc7, 0xaf, 0xba,
	0xa6, 0xfd, 0x33, 0xf1, 0x0e, 0xfb, 0xfb, 0x57, 0xbf, 0xf3, 0x4d, 0xb7, 0x8d, 0xcc, 0x3c, 0x37,
	0xf2, 0xc7, 0xde, 0x29, 0x0e, 0xda, 0x26, 0xf4, 0x14, 0x89, 0xd4, 0x89, 0x65, 0xa8, 0x7b, 0xa4,
	0x1a, 0xea, 0xea, 0xc6, 0xf4, 0x9a, 0x75, 0x36, 0x93, 0x2e, 0x9d, 0x5f, 0xe0, 0x73, 0x34, 0xe3,
	0x84, 0x4f, 0xdf, 0x84, 0x6b, 0xe7, 0xe4, 0xc9, 0xa9, 0xf7, 0xc8, 0xa9, 0xaf, 0x4c, 0x48, 0x90,
	0x57, 0xd7, 0x3e, 0x6a, 0xa8, 0x70, 0x05, 0x0c, 0xd5, 0x39, 0xc9, 0x4f, 0x18, 0xc2, 0xb6, 0x60,
	0xbe, 0x07, 0xf6, 0x19, 0x0b, 0x5d, 0x5a, 0x2a, 0x8e, 0x87, 0x19, 0x77, 0xa4, 0x7e, 0x4a, 0x30,
	0x84, 0xa6, 0xc5, 0xcd, 0x6d, 0x11, 0x51, 0x34, 0xc4, 0x34, 0xcc, 0x49, 0xec, 0x6d, 0x69, 0x1b,
	0x64, 0xea, 0xfd, 0x6e, 0x30, 0xfd, 0x7e, 0x87, 0x89, 0xc0, 0x70, 0x74, 0xac, 0x3b, 0xca, 0x2a,
	0x73, 0xbe, 0xa5, 0xb9, 0xaa, 0x06, 0xdb, 0x4e, 0x54, 0xc6, 0x3e, 0x82, 0xc6, 0x98, 0xc5, 0xfc,
	0xe1, 0x45, 0xaa, 0x83, 0x73, 0xce, 0x66, 0xfe, 0xf4, 0xe2, 0x21, 0x5c, 0x53, 0x03, 0x1e, 0x45,
	0x9e, 0x1f, 0x0f, 0x22, 0x71, 0x22, 0x4c, 0x32, 0xad, 0xf4, 0x5f, 0x5e, 0x10, 0xa9, 0x59, 0xa4,
	0x60, 0x22, 0xee, 0xa7, 0x71, 0x92, 0x3a, 0x19, 0xb1, 0xe8, 0x01, 0x1a, 0xa5, 0x1d, 0x51, 0xca,
	0x95, 0x50, 0x99, 0x33, 0xd4, 0x76, 0x13, 0xe6, 0x12, 0x84, 0xb5, 0x07, 0x3f, 0xf5, 0xe9, 0xbb,
	0x4f, 0x89, 0x6a, 0x87, 0xec, 0x1e, 0xb0, 0xb3, 0x81, 0x27, 0x39, 0x0f, 0x79, 0x88, 0xf7, 0x59,
	0x27, 0xfa, 0x67, 0xf4, 0x5d, 0xcb, 0x67, 0x83, 0x03, 0x22, 0x74, 0x93, 0x3d, 0x4a, 0xf9, 0xdf,
	0x1f, 0xb7, 0x6e, 0x28, 0xeb, 0x50, 0xce, 0x48, 0x47, 0x32, 0x83, 0x52, 0xce, 0xa1, 0xd8, 0x87,
	0x50, 0x4f, 0x79, 0x44, 0x77, 0x95, 0x62, 0x9e, 0xf3, 0x5d, 0x1e, 0x91, 0x6b, 0x96, 0x80, 0x51,
	0x8f, 0xdd, 0x83, 0xe5, 0xa1, 0x9c, 0x64, 0xfd, 0xc3, 0x9c, 0x75, 0x69, 0x4c, 0x22, 0xe6, 0x1b,
	0xb0, 0x48, 0xa1, 0xbb, 0x2f, 0x32, 0xe5, 0xfc, 0x91, 0x0e, 0xc6, 0x08, 0xec, 0x8a, 0xcc, 0x3c,
	0xa1, 0x4a, 0xf4, 0x07, 0x7f, 0x6c, 0x9f, 0x50, 0x71, 0x84, 0x42, 0x92, 0x67, 0xde, 0xab, 0x24,
	0xcd, 0xfa, 0xce, 0x9f, 0x68, 0x21, 0xc9, 0xf1, 0xd2, 0x64, 0x7d, 0xb6, 0x0e, 0x15, 0x95, 0xa5,
	0x5c, 0xf6, 0xb2, 0xbe, 0xf3, 0xa7, 0x9a, 0x66, 0xc7, 0xec, 0x6d, 0x58, 0xf0, 0x7b, 0xfa, 0xec,
	0xfd, 0xa2, 0x64, 0x1e, 0x5f, 0xf5, 0x98, 0xdd, 0x85, 0x9a, 0x90, 0x19, 0x8f, 0x22, 0xd1, 0x43,
	0x37, 0xeb, 0xfc, 0x99, 0xa6, 0x4f, 0x80, 0x6c, 0xb3, 0xf8, 0x04, 0x10, 0x89, 0x13, 0x3c, 0x44,
	0xd2, 0xf9, 0xf3, 0xd2, 0xb9, 0x37, 0x80, 0x3d, 0x43, 0x61, 0x1f, 0xc0, 0xd2, 0x49, 0x34, 0x42,
	0x66, 0x53, 0xb9, 0x3b, 0x7f, 0x51, 0xd2, 0x01, 0x45, 0xc3, 0xb6, 0x87, 0xb5, 0x01, 0xcb, 0xaa,
	0x9f, 0x0a, 0xc9, 0xc7, 0xa7, 0xeb, 0xaf, 0xb5, 0xd2, 0x25, 0x8d, 0xe7, 0xa7, 0xeb, 0x1e, 0x79,
	0x6a, 0xc3, 0x8c, 0x85, 0x01, 0xe6, 0x14, 0x7f, 0x53, 0xb2, 0x61, 0xb3, 0x43, 0x84, 0x5d, 0x8d,
	0xdf, 0xf9, 0x87, 0x12, 0x54, 0xf2, 0x5e, 0x5e, 0x15, 0x6c, 0xc5, 0xd8, 0xf8, 0x11, 0xab, 0xc0,
	0xdc, 0x6e, 0xcb, 0x3d, 0x6c, 0x94, 0xd8, 0x12, 0xc0, 0xb6, 0xdb, 0x6a, 0x1d, 0x79, 0x34, 0x9e,
	0xc1, 0xf1, 0x5e, 0xf3, 0xa0, 0xe5, 0x11, 0xd8, 0x98, 0x65, 0x0d, 0xa8, 0x7d, 0xf5, 0xec, 0xe0,
	0xe9, 0x9e, 0x45, 0xe6, 0x18, 0xc0, 0xbc, 0x7b, 0xd8, 0xd9, 0x6d, 0x1e, 0x34, 0xca, 0x6c, 0x11,
	0xca, 0xdd, 0xc3, 0x17, 0x2d, 0xb7, 0x31, 0xcf, 0x6a, 0x50, 0xd9, 0x6a, 0xba, 0x6e, 0x73, 0xfb,
	0xeb, 0x4e, 0x63, 0x01, 0x99, 0x3a, 0xbb, 0x6e, 0xfb, 0xa0, 0xd5, 0xa8, 0xe0, 0x64, 0x5f, 0x1e,
	0xba, 0xdd, 0xc6, 0x22, 0xf1, 0x3c, 0x6b, 0xef, 0xed, 0xb4, 0x0f, 0x9e, 0x36, 0x00, 0x2d, 0x32,
	0x4d, 0xb6, 0x46, 0x15, 0x99, 0x5e, 0x34, 0xdd, 0x9d, 0x46, 0xed, 0xce, 0x7f, 0x94, 0xa0, 0x56,
	0x6c, 0xc5, 0xb1, 0x5b, 0x70, 0x41, 0x33, 0xae, 0xf1, 0xdf, 0xf6, 0x5f, 0x89, 0x5d, 0x9f, 0x62,
	0xd8, 0xd9, 0x6b, 0x35, 0x7e, 0xc4, 0xde, 0x86, 0xb5, 0x49, 0xbc, 0xd9, 0xf5, 0xb6, 0x9a, 0x9d,
	0x56, 0xa3, 0xc4, 0x1c, 0x58, 0x9d, 0x24, 0xed, 0x1f, 0x3e, 0x47, 0xab, 0x66, 0xd8, 0x1d, 0x78,
	0x67, 0x92, 0xb2, 0xd3, 0xda, 0x6b, 0x3f, 0x6f, 0xb9, 0xed, 0x83, 0xa7, 0x5e, 0xbb, 0xdb, 0xda,
	0xef, 0x34, 0x66, 0xd9, 0x5d, 0xb8, 0x35, 0xc9, 0xe3, 0xb6, 0xba, 0xcf, 0xdc, 0x03, 0x64, 0xe9,
	0x1e, 0xea, 0x29, 0xe6, 0xa6, 0xad, 0xda, 0x69, 0x35, 0x77, 0x1a, 0xe5, 0xad, 0x0f, 0xbe, 0x79,
	0xaf, 0x27, 0xb2, 0xfe, 0xf0, 0x78, 0x33, 0x48, 0xe2, 0x87, 0x03, 0x3f, 0xc5, 0xcd, 0x7a, 0xd8,
	0x4b, 0x1e, 0x84, 0x49, 0xe6, 0x3f, 0x7e, 0x68, 0x43, 0xc1, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x6d, 0xdb, 0x71, 0xab, 0x05, 0x27, 0x00, 0x00,
}
