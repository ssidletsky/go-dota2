// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dota_gcmessages_common.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ESpecialPingValue int32

const (
	ESpecialPingValue_k_ESpecialPingValue_NoData ESpecialPingValue = 16382
	ESpecialPingValue_k_ESpecialPingValue_Failed ESpecialPingValue = 16383
)

var ESpecialPingValue_name = map[int32]string{
	16382: "k_ESpecialPingValue_NoData",
	16383: "k_ESpecialPingValue_Failed",
}

var ESpecialPingValue_value = map[string]int32{
	"k_ESpecialPingValue_NoData": 16382,
	"k_ESpecialPingValue_Failed": 16383,
}

func (x ESpecialPingValue) Enum() *ESpecialPingValue {
	p := new(ESpecialPingValue)
	*p = x
	return p
}

func (x ESpecialPingValue) String() string {
	return proto.EnumName(ESpecialPingValue_name, int32(x))
}

func (x *ESpecialPingValue) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESpecialPingValue_value, data, "ESpecialPingValue")
	if err != nil {
		return err
	}
	*x = ESpecialPingValue(value)
	return nil
}

func (ESpecialPingValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{0}
}

type EDOTAGCSessionNeed int32

const (
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_Unknown                    EDOTAGCSessionNeed = 0
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_UserNoSessionNeeded        EDOTAGCSessionNeed = 100
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_UserInOnlineGame           EDOTAGCSessionNeed = 101
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_UserInLocalGame            EDOTAGCSessionNeed = 102
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_UserInUIWasConnected       EDOTAGCSessionNeed = 103
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_UserInUINeverConnected     EDOTAGCSessionNeed = 104
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_UserTutorials              EDOTAGCSessionNeed = 105
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_UserInUIWasConnectedIdle   EDOTAGCSessionNeed = 106
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_UserInUINeverConnectedIdle EDOTAGCSessionNeed = 107
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_GameServerOnline           EDOTAGCSessionNeed = 200
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_GameServerLocal            EDOTAGCSessionNeed = 201
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_GameServerIdle             EDOTAGCSessionNeed = 202
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_GameServerRelay            EDOTAGCSessionNeed = 203
	EDOTAGCSessionNeed_k_EDOTAGCSessionNeed_GameServerLocalUpload      EDOTAGCSessionNeed = 204
)

var EDOTAGCSessionNeed_name = map[int32]string{
	0:   "k_EDOTAGCSessionNeed_Unknown",
	100: "k_EDOTAGCSessionNeed_UserNoSessionNeeded",
	101: "k_EDOTAGCSessionNeed_UserInOnlineGame",
	102: "k_EDOTAGCSessionNeed_UserInLocalGame",
	103: "k_EDOTAGCSessionNeed_UserInUIWasConnected",
	104: "k_EDOTAGCSessionNeed_UserInUINeverConnected",
	105: "k_EDOTAGCSessionNeed_UserTutorials",
	106: "k_EDOTAGCSessionNeed_UserInUIWasConnectedIdle",
	107: "k_EDOTAGCSessionNeed_UserInUINeverConnectedIdle",
	200: "k_EDOTAGCSessionNeed_GameServerOnline",
	201: "k_EDOTAGCSessionNeed_GameServerLocal",
	202: "k_EDOTAGCSessionNeed_GameServerIdle",
	203: "k_EDOTAGCSessionNeed_GameServerRelay",
	204: "k_EDOTAGCSessionNeed_GameServerLocalUpload",
}

var EDOTAGCSessionNeed_value = map[string]int32{
	"k_EDOTAGCSessionNeed_Unknown":                    0,
	"k_EDOTAGCSessionNeed_UserNoSessionNeeded":        100,
	"k_EDOTAGCSessionNeed_UserInOnlineGame":           101,
	"k_EDOTAGCSessionNeed_UserInLocalGame":            102,
	"k_EDOTAGCSessionNeed_UserInUIWasConnected":       103,
	"k_EDOTAGCSessionNeed_UserInUINeverConnected":     104,
	"k_EDOTAGCSessionNeed_UserTutorials":              105,
	"k_EDOTAGCSessionNeed_UserInUIWasConnectedIdle":   106,
	"k_EDOTAGCSessionNeed_UserInUINeverConnectedIdle": 107,
	"k_EDOTAGCSessionNeed_GameServerOnline":           200,
	"k_EDOTAGCSessionNeed_GameServerLocal":            201,
	"k_EDOTAGCSessionNeed_GameServerIdle":             202,
	"k_EDOTAGCSessionNeed_GameServerRelay":            203,
	"k_EDOTAGCSessionNeed_GameServerLocalUpload":      204,
}

func (x EDOTAGCSessionNeed) Enum() *EDOTAGCSessionNeed {
	p := new(EDOTAGCSessionNeed)
	*p = x
	return p
}

func (x EDOTAGCSessionNeed) String() string {
	return proto.EnumName(EDOTAGCSessionNeed_name, int32(x))
}

func (x *EDOTAGCSessionNeed) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDOTAGCSessionNeed_value, data, "EDOTAGCSessionNeed")
	if err != nil {
		return err
	}
	*x = EDOTAGCSessionNeed(value)
	return nil
}

func (EDOTAGCSessionNeed) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{1}
}

type EDOTAMatchPlayerTimeCustomStat int32

const (
	EDOTAMatchPlayerTimeCustomStat_k_EDOTA_MatchPlayerTimeCustomStat_HPRegenUnderT1Towers                              EDOTAMatchPlayerTimeCustomStat = 1
	EDOTAMatchPlayerTimeCustomStat_k_EDOTA_MatchPlayerTimeCustomStat_MagicDamageReducedWithNewFormula_Absolute         EDOTAMatchPlayerTimeCustomStat = 2
	EDOTAMatchPlayerTimeCustomStat_k_EDOTA_MatchPlayerTimeCustomStat_MagicDamageReducedWithNewFormula_PercentOfTotalHP EDOTAMatchPlayerTimeCustomStat = 3
)

var EDOTAMatchPlayerTimeCustomStat_name = map[int32]string{
	1: "k_EDOTA_MatchPlayerTimeCustomStat_HPRegenUnderT1Towers",
	2: "k_EDOTA_MatchPlayerTimeCustomStat_MagicDamageReducedWithNewFormula_Absolute",
	3: "k_EDOTA_MatchPlayerTimeCustomStat_MagicDamageReducedWithNewFormula_PercentOfTotalHP",
}

var EDOTAMatchPlayerTimeCustomStat_value = map[string]int32{
	"k_EDOTA_MatchPlayerTimeCustomStat_HPRegenUnderT1Towers":                              1,
	"k_EDOTA_MatchPlayerTimeCustomStat_MagicDamageReducedWithNewFormula_Absolute":         2,
	"k_EDOTA_MatchPlayerTimeCustomStat_MagicDamageReducedWithNewFormula_PercentOfTotalHP": 3,
}

func (x EDOTAMatchPlayerTimeCustomStat) Enum() *EDOTAMatchPlayerTimeCustomStat {
	p := new(EDOTAMatchPlayerTimeCustomStat)
	*p = x
	return p
}

func (x EDOTAMatchPlayerTimeCustomStat) String() string {
	return proto.EnumName(EDOTAMatchPlayerTimeCustomStat_name, int32(x))
}

func (x *EDOTAMatchPlayerTimeCustomStat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDOTAMatchPlayerTimeCustomStat_value, data, "EDOTAMatchPlayerTimeCustomStat")
	if err != nil {
		return err
	}
	*x = EDOTAMatchPlayerTimeCustomStat(value)
	return nil
}

func (EDOTAMatchPlayerTimeCustomStat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{2}
}

type DOTA_TournamentEvents int32

const (
	DOTA_TournamentEvents_TE_FIRST_BLOOD  DOTA_TournamentEvents = 0
	DOTA_TournamentEvents_TE_GAME_END     DOTA_TournamentEvents = 1
	DOTA_TournamentEvents_TE_MULTI_KILL   DOTA_TournamentEvents = 2
	DOTA_TournamentEvents_TE_HERO_DENY    DOTA_TournamentEvents = 3
	DOTA_TournamentEvents_TE_AEGIS_DENY   DOTA_TournamentEvents = 4
	DOTA_TournamentEvents_TE_AEGIS_STOLEN DOTA_TournamentEvents = 5
	DOTA_TournamentEvents_TE_GODLIKE      DOTA_TournamentEvents = 6
	DOTA_TournamentEvents_TE_COURIER_KILL DOTA_TournamentEvents = 7
	DOTA_TournamentEvents_TE_ECHOSLAM     DOTA_TournamentEvents = 8
	DOTA_TournamentEvents_TE_RAPIER       DOTA_TournamentEvents = 9
	DOTA_TournamentEvents_TE_EARLY_ROSHAN DOTA_TournamentEvents = 10
	DOTA_TournamentEvents_TE_BLACK_HOLE   DOTA_TournamentEvents = 11
)

var DOTA_TournamentEvents_name = map[int32]string{
	0:  "TE_FIRST_BLOOD",
	1:  "TE_GAME_END",
	2:  "TE_MULTI_KILL",
	3:  "TE_HERO_DENY",
	4:  "TE_AEGIS_DENY",
	5:  "TE_AEGIS_STOLEN",
	6:  "TE_GODLIKE",
	7:  "TE_COURIER_KILL",
	8:  "TE_ECHOSLAM",
	9:  "TE_RAPIER",
	10: "TE_EARLY_ROSHAN",
	11: "TE_BLACK_HOLE",
}

var DOTA_TournamentEvents_value = map[string]int32{
	"TE_FIRST_BLOOD":  0,
	"TE_GAME_END":     1,
	"TE_MULTI_KILL":   2,
	"TE_HERO_DENY":    3,
	"TE_AEGIS_DENY":   4,
	"TE_AEGIS_STOLEN": 5,
	"TE_GODLIKE":      6,
	"TE_COURIER_KILL": 7,
	"TE_ECHOSLAM":     8,
	"TE_RAPIER":       9,
	"TE_EARLY_ROSHAN": 10,
	"TE_BLACK_HOLE":   11,
}

func (x DOTA_TournamentEvents) Enum() *DOTA_TournamentEvents {
	p := new(DOTA_TournamentEvents)
	*p = x
	return p
}

func (x DOTA_TournamentEvents) String() string {
	return proto.EnumName(DOTA_TournamentEvents_name, int32(x))
}

func (x *DOTA_TournamentEvents) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_TournamentEvents_value, data, "DOTA_TournamentEvents")
	if err != nil {
		return err
	}
	*x = DOTA_TournamentEvents(value)
	return nil
}

func (DOTA_TournamentEvents) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{3}
}

type EBroadcastTimelineEvent int32

const (
	EBroadcastTimelineEvent_EBroadcastTimelineEvent_MatchStarted     EBroadcastTimelineEvent = 1
	EBroadcastTimelineEvent_EBroadcastTimelineEvent_GameStateChanged EBroadcastTimelineEvent = 2
	EBroadcastTimelineEvent_EBroadcastTimelineEvent_TowerDeath       EBroadcastTimelineEvent = 3
	EBroadcastTimelineEvent_EBroadcastTimelineEvent_BarracksDeath    EBroadcastTimelineEvent = 4
	EBroadcastTimelineEvent_EBroadcastTimelineEvent_AncientDeath     EBroadcastTimelineEvent = 5
	EBroadcastTimelineEvent_EBroadcastTimelineEvent_RoshanDeath      EBroadcastTimelineEvent = 6
	EBroadcastTimelineEvent_EBroadcastTimelineEvent_HeroDeath        EBroadcastTimelineEvent = 7
	EBroadcastTimelineEvent_EBroadcastTimelineEvent_TeamFight        EBroadcastTimelineEvent = 8
	EBroadcastTimelineEvent_EBroadcastTimelineEvent_FirstBlood       EBroadcastTimelineEvent = 9
)

var EBroadcastTimelineEvent_name = map[int32]string{
	1: "EBroadcastTimelineEvent_MatchStarted",
	2: "EBroadcastTimelineEvent_GameStateChanged",
	3: "EBroadcastTimelineEvent_TowerDeath",
	4: "EBroadcastTimelineEvent_BarracksDeath",
	5: "EBroadcastTimelineEvent_AncientDeath",
	6: "EBroadcastTimelineEvent_RoshanDeath",
	7: "EBroadcastTimelineEvent_HeroDeath",
	8: "EBroadcastTimelineEvent_TeamFight",
	9: "EBroadcastTimelineEvent_FirstBlood",
}

var EBroadcastTimelineEvent_value = map[string]int32{
	"EBroadcastTimelineEvent_MatchStarted":     1,
	"EBroadcastTimelineEvent_GameStateChanged": 2,
	"EBroadcastTimelineEvent_TowerDeath":       3,
	"EBroadcastTimelineEvent_BarracksDeath":    4,
	"EBroadcastTimelineEvent_AncientDeath":     5,
	"EBroadcastTimelineEvent_RoshanDeath":      6,
	"EBroadcastTimelineEvent_HeroDeath":        7,
	"EBroadcastTimelineEvent_TeamFight":        8,
	"EBroadcastTimelineEvent_FirstBlood":       9,
}

func (x EBroadcastTimelineEvent) Enum() *EBroadcastTimelineEvent {
	p := new(EBroadcastTimelineEvent)
	*p = x
	return p
}

func (x EBroadcastTimelineEvent) String() string {
	return proto.EnumName(EBroadcastTimelineEvent_name, int32(x))
}

func (x *EBroadcastTimelineEvent) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EBroadcastTimelineEvent_value, data, "EBroadcastTimelineEvent")
	if err != nil {
		return err
	}
	*x = EBroadcastTimelineEvent(value)
	return nil
}

func (EBroadcastTimelineEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{4}
}

type ECustomGameWhitelistState int32

const (
	ECustomGameWhitelistState_CUSTOM_GAME_WHITELIST_STATE_UNKNOWN  ECustomGameWhitelistState = 0
	ECustomGameWhitelistState_CUSTOM_GAME_WHITELIST_STATE_APPROVED ECustomGameWhitelistState = 1
	ECustomGameWhitelistState_CUSTOM_GAME_WHITELIST_STATE_REJECTED ECustomGameWhitelistState = 2
)

var ECustomGameWhitelistState_name = map[int32]string{
	0: "CUSTOM_GAME_WHITELIST_STATE_UNKNOWN",
	1: "CUSTOM_GAME_WHITELIST_STATE_APPROVED",
	2: "CUSTOM_GAME_WHITELIST_STATE_REJECTED",
}

var ECustomGameWhitelistState_value = map[string]int32{
	"CUSTOM_GAME_WHITELIST_STATE_UNKNOWN":  0,
	"CUSTOM_GAME_WHITELIST_STATE_APPROVED": 1,
	"CUSTOM_GAME_WHITELIST_STATE_REJECTED": 2,
}

func (x ECustomGameWhitelistState) Enum() *ECustomGameWhitelistState {
	p := new(ECustomGameWhitelistState)
	*p = x
	return p
}

func (x ECustomGameWhitelistState) String() string {
	return proto.EnumName(ECustomGameWhitelistState_name, int32(x))
}

func (x *ECustomGameWhitelistState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ECustomGameWhitelistState_value, data, "ECustomGameWhitelistState")
	if err != nil {
		return err
	}
	*x = ECustomGameWhitelistState(value)
	return nil
}

func (ECustomGameWhitelistState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{5}
}

type EDOTATriviaQuestionCategory int32

const (
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_AbilityIcon             EDOTATriviaQuestionCategory = 0
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_AbilityCooldown         EDOTATriviaQuestionCategory = 1
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_HeroAttributes          EDOTATriviaQuestionCategory = 2
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_HeroMovementSpeed       EDOTATriviaQuestionCategory = 3
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_TalentTree              EDOTATriviaQuestionCategory = 4
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_HeroStats               EDOTATriviaQuestionCategory = 5
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_ItemPrice               EDOTATriviaQuestionCategory = 6
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_AbilitySound            EDOTATriviaQuestionCategory = 7
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_InvokerSpells           EDOTATriviaQuestionCategory = 8
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_AbilityManaCost         EDOTATriviaQuestionCategory = 9
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_HeroAttackSound         EDOTATriviaQuestionCategory = 10
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_AbilityName             EDOTATriviaQuestionCategory = 11
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_ItemComponents          EDOTATriviaQuestionCategory = 12
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_ItemLore                EDOTATriviaQuestionCategory = 13
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_ItemPassives            EDOTATriviaQuestionCategory = 14
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_STATIC_QUESTIONS_END    EDOTATriviaQuestionCategory = 15
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_DYNAMIC_QUESTIONS_START EDOTATriviaQuestionCategory = 99
	EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_Dynamic_ItemBuild       EDOTATriviaQuestionCategory = 100
)

var EDOTATriviaQuestionCategory_name = map[int32]string{
	0:   "k_EDOTATriviaQuestionCategory_AbilityIcon",
	1:   "k_EDOTATriviaQuestionCategory_AbilityCooldown",
	2:   "k_EDOTATriviaQuestionCategory_HeroAttributes",
	3:   "k_EDOTATriviaQuestionCategory_HeroMovementSpeed",
	4:   "k_EDOTATriviaQuestionCategory_TalentTree",
	5:   "k_EDOTATriviaQuestionCategory_HeroStats",
	6:   "k_EDOTATriviaQuestionCategory_ItemPrice",
	7:   "k_EDOTATriviaQuestionCategory_AbilitySound",
	8:   "k_EDOTATriviaQuestionCategory_InvokerSpells",
	9:   "k_EDOTATriviaQuestionCategory_AbilityManaCost",
	10:  "k_EDOTATriviaQuestionCategory_HeroAttackSound",
	11:  "k_EDOTATriviaQuestionCategory_AbilityName",
	12:  "k_EDOTATriviaQuestionCategory_ItemComponents",
	13:  "k_EDOTATriviaQuestionCategory_ItemLore",
	14:  "k_EDOTATriviaQuestionCategory_ItemPassives",
	15:  "k_EDOTATriviaQuestionCategory_STATIC_QUESTIONS_END",
	99:  "k_EDOTATriviaQuestionCategory_DYNAMIC_QUESTIONS_START",
	100: "k_EDOTATriviaQuestionCategory_Dynamic_ItemBuild",
}

var EDOTATriviaQuestionCategory_value = map[string]int32{
	"k_EDOTATriviaQuestionCategory_AbilityIcon":             0,
	"k_EDOTATriviaQuestionCategory_AbilityCooldown":         1,
	"k_EDOTATriviaQuestionCategory_HeroAttributes":          2,
	"k_EDOTATriviaQuestionCategory_HeroMovementSpeed":       3,
	"k_EDOTATriviaQuestionCategory_TalentTree":              4,
	"k_EDOTATriviaQuestionCategory_HeroStats":               5,
	"k_EDOTATriviaQuestionCategory_ItemPrice":               6,
	"k_EDOTATriviaQuestionCategory_AbilitySound":            7,
	"k_EDOTATriviaQuestionCategory_InvokerSpells":           8,
	"k_EDOTATriviaQuestionCategory_AbilityManaCost":         9,
	"k_EDOTATriviaQuestionCategory_HeroAttackSound":         10,
	"k_EDOTATriviaQuestionCategory_AbilityName":             11,
	"k_EDOTATriviaQuestionCategory_ItemComponents":          12,
	"k_EDOTATriviaQuestionCategory_ItemLore":                13,
	"k_EDOTATriviaQuestionCategory_ItemPassives":            14,
	"k_EDOTATriviaQuestionCategory_STATIC_QUESTIONS_END":    15,
	"k_EDOTATriviaQuestionCategory_DYNAMIC_QUESTIONS_START": 99,
	"k_EDOTATriviaQuestionCategory_Dynamic_ItemBuild":       100,
}

func (x EDOTATriviaQuestionCategory) Enum() *EDOTATriviaQuestionCategory {
	p := new(EDOTATriviaQuestionCategory)
	*p = x
	return p
}

func (x EDOTATriviaQuestionCategory) String() string {
	return proto.EnumName(EDOTATriviaQuestionCategory_name, int32(x))
}

func (x *EDOTATriviaQuestionCategory) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDOTATriviaQuestionCategory_value, data, "EDOTATriviaQuestionCategory")
	if err != nil {
		return err
	}
	*x = EDOTATriviaQuestionCategory(value)
	return nil
}

func (EDOTATriviaQuestionCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{6}
}

type EOverwatchConviction int32

const (
	EOverwatchConviction_k_EOverwatchConviction_None         EOverwatchConviction = 0
	EOverwatchConviction_k_EOverwatchConviction_NotGuilty    EOverwatchConviction = 1
	EOverwatchConviction_k_EOverwatchConviction_GuiltUnclear EOverwatchConviction = 2
	EOverwatchConviction_k_EOverwatchConviction_Guilty       EOverwatchConviction = 3
)

var EOverwatchConviction_name = map[int32]string{
	0: "k_EOverwatchConviction_None",
	1: "k_EOverwatchConviction_NotGuilty",
	2: "k_EOverwatchConviction_GuiltUnclear",
	3: "k_EOverwatchConviction_Guilty",
}

var EOverwatchConviction_value = map[string]int32{
	"k_EOverwatchConviction_None":         0,
	"k_EOverwatchConviction_NotGuilty":    1,
	"k_EOverwatchConviction_GuiltUnclear": 2,
	"k_EOverwatchConviction_Guilty":       3,
}

func (x EOverwatchConviction) Enum() *EOverwatchConviction {
	p := new(EOverwatchConviction)
	*p = x
	return p
}

func (x EOverwatchConviction) String() string {
	return proto.EnumName(EOverwatchConviction_name, int32(x))
}

func (x *EOverwatchConviction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EOverwatchConviction_value, data, "EOverwatchConviction")
	if err != nil {
		return err
	}
	*x = EOverwatchConviction(value)
	return nil
}

func (EOverwatchConviction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{7}
}

type EHeroRelicRarity int32

const (
	EHeroRelicRarity_HERO_RELIC_RARITY_INVALID EHeroRelicRarity = -1
	EHeroRelicRarity_HERO_RELIC_RARITY_COMMON  EHeroRelicRarity = 0
	EHeroRelicRarity_HERO_RELIC_RARITY_RARE    EHeroRelicRarity = 1
)

var EHeroRelicRarity_name = map[int32]string{
	-1: "HERO_RELIC_RARITY_INVALID",
	0:  "HERO_RELIC_RARITY_COMMON",
	1:  "HERO_RELIC_RARITY_RARE",
}

var EHeroRelicRarity_value = map[string]int32{
	"HERO_RELIC_RARITY_INVALID": -1,
	"HERO_RELIC_RARITY_COMMON":  0,
	"HERO_RELIC_RARITY_RARE":    1,
}

func (x EHeroRelicRarity) Enum() *EHeroRelicRarity {
	p := new(EHeroRelicRarity)
	*p = x
	return p
}

func (x EHeroRelicRarity) String() string {
	return proto.EnumName(EHeroRelicRarity_name, int32(x))
}

func (x *EHeroRelicRarity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EHeroRelicRarity_value, data, "EHeroRelicRarity")
	if err != nil {
		return err
	}
	*x = EHeroRelicRarity(value)
	return nil
}

func (EHeroRelicRarity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{8}
}

type EStickerbookAuditAction int32

const (
	EStickerbookAuditAction_STICKERBOOK_AUDIT_CREATE_PAGE      EStickerbookAuditAction = 0
	EStickerbookAuditAction_STICKERBOOK_AUDIT_DELETE_PAGE      EStickerbookAuditAction = 1
	EStickerbookAuditAction_STICKERBOOK_AUDIT_STICK_STICKERS   EStickerbookAuditAction = 2
	EStickerbookAuditAction_STICKERBOOK_AUDIT_REPLACE_STICKERS EStickerbookAuditAction = 3
	EStickerbookAuditAction_STICKERBOOK_AUDIT_HERO_STICKER     EStickerbookAuditAction = 4
)

var EStickerbookAuditAction_name = map[int32]string{
	0: "STICKERBOOK_AUDIT_CREATE_PAGE",
	1: "STICKERBOOK_AUDIT_DELETE_PAGE",
	2: "STICKERBOOK_AUDIT_STICK_STICKERS",
	3: "STICKERBOOK_AUDIT_REPLACE_STICKERS",
	4: "STICKERBOOK_AUDIT_HERO_STICKER",
}

var EStickerbookAuditAction_value = map[string]int32{
	"STICKERBOOK_AUDIT_CREATE_PAGE":      0,
	"STICKERBOOK_AUDIT_DELETE_PAGE":      1,
	"STICKERBOOK_AUDIT_STICK_STICKERS":   2,
	"STICKERBOOK_AUDIT_REPLACE_STICKERS": 3,
	"STICKERBOOK_AUDIT_HERO_STICKER":     4,
}

func (x EStickerbookAuditAction) Enum() *EStickerbookAuditAction {
	p := new(EStickerbookAuditAction)
	*p = x
	return p
}

func (x EStickerbookAuditAction) String() string {
	return proto.EnumName(EStickerbookAuditAction_name, int32(x))
}

func (x *EStickerbookAuditAction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStickerbookAuditAction_value, data, "EStickerbookAuditAction")
	if err != nil {
		return err
	}
	*x = EStickerbookAuditAction(value)
	return nil
}

func (EStickerbookAuditAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{9}
}

type EStickerbookPageType int32

const (
	EStickerbookPageType_STICKER_PAGE_GENERIC EStickerbookPageType = 0
	EStickerbookPageType_STICKER_PAGE_TEAM    EStickerbookPageType = 1
	EStickerbookPageType_STICKER_PAGE_TALENT  EStickerbookPageType = 2
)

var EStickerbookPageType_name = map[int32]string{
	0: "STICKER_PAGE_GENERIC",
	1: "STICKER_PAGE_TEAM",
	2: "STICKER_PAGE_TALENT",
}

var EStickerbookPageType_value = map[string]int32{
	"STICKER_PAGE_GENERIC": 0,
	"STICKER_PAGE_TEAM":    1,
	"STICKER_PAGE_TALENT":  2,
}

func (x EStickerbookPageType) Enum() *EStickerbookPageType {
	p := new(EStickerbookPageType)
	*p = x
	return p
}

func (x EStickerbookPageType) String() string {
	return proto.EnumName(EStickerbookPageType_name, int32(x))
}

func (x *EStickerbookPageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStickerbookPageType_value, data, "EStickerbookPageType")
	if err != nil {
		return err
	}
	*x = EStickerbookPageType(value)
	return nil
}

func (EStickerbookPageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{10}
}

type CMsgDOTAProfileCard_EStatID int32

const (
	CMsgDOTAProfileCard_k_eStat_Wins               CMsgDOTAProfileCard_EStatID = 3
	CMsgDOTAProfileCard_k_eStat_Commends           CMsgDOTAProfileCard_EStatID = 4
	CMsgDOTAProfileCard_k_eStat_GamesPlayed        CMsgDOTAProfileCard_EStatID = 5
	CMsgDOTAProfileCard_k_eStat_FirstMatchDate     CMsgDOTAProfileCard_EStatID = 6
	CMsgDOTAProfileCard_k_eStat_PreviousSeasonRank CMsgDOTAProfileCard_EStatID = 7
	CMsgDOTAProfileCard_k_eStat_GamesMVP           CMsgDOTAProfileCard_EStatID = 8
)

var CMsgDOTAProfileCard_EStatID_name = map[int32]string{
	3: "k_eStat_Wins",
	4: "k_eStat_Commends",
	5: "k_eStat_GamesPlayed",
	6: "k_eStat_FirstMatchDate",
	7: "k_eStat_PreviousSeasonRank",
	8: "k_eStat_GamesMVP",
}

var CMsgDOTAProfileCard_EStatID_value = map[string]int32{
	"k_eStat_Wins":               3,
	"k_eStat_Commends":           4,
	"k_eStat_GamesPlayed":        5,
	"k_eStat_FirstMatchDate":     6,
	"k_eStat_PreviousSeasonRank": 7,
	"k_eStat_GamesMVP":           8,
}

func (x CMsgDOTAProfileCard_EStatID) Enum() *CMsgDOTAProfileCard_EStatID {
	p := new(CMsgDOTAProfileCard_EStatID)
	*p = x
	return p
}

func (x CMsgDOTAProfileCard_EStatID) String() string {
	return proto.EnumName(CMsgDOTAProfileCard_EStatID_name, int32(x))
}

func (x *CMsgDOTAProfileCard_EStatID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAProfileCard_EStatID_value, data, "CMsgDOTAProfileCard_EStatID")
	if err != nil {
		return err
	}
	*x = CMsgDOTAProfileCard_EStatID(value)
	return nil
}

func (CMsgDOTAProfileCard_EStatID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{22, 0}
}

type CMsgGCRerollPlayerChallengeResponse_EResult int32

const (
	CMsgGCRerollPlayerChallengeResponse_eResult_Success     CMsgGCRerollPlayerChallengeResponse_EResult = 0
	CMsgGCRerollPlayerChallengeResponse_eResult_Dropped     CMsgGCRerollPlayerChallengeResponse_EResult = 1
	CMsgGCRerollPlayerChallengeResponse_eResult_NotFound    CMsgGCRerollPlayerChallengeResponse_EResult = 2
	CMsgGCRerollPlayerChallengeResponse_eResult_CantReroll  CMsgGCRerollPlayerChallengeResponse_EResult = 3
	CMsgGCRerollPlayerChallengeResponse_eResult_ServerError CMsgGCRerollPlayerChallengeResponse_EResult = 4
)

var CMsgGCRerollPlayerChallengeResponse_EResult_name = map[int32]string{
	0: "eResult_Success",
	1: "eResult_Dropped",
	2: "eResult_NotFound",
	3: "eResult_CantReroll",
	4: "eResult_ServerError",
}

var CMsgGCRerollPlayerChallengeResponse_EResult_value = map[string]int32{
	"eResult_Success":     0,
	"eResult_Dropped":     1,
	"eResult_NotFound":    2,
	"eResult_CantReroll":  3,
	"eResult_ServerError": 4,
}

func (x CMsgGCRerollPlayerChallengeResponse_EResult) Enum() *CMsgGCRerollPlayerChallengeResponse_EResult {
	p := new(CMsgGCRerollPlayerChallengeResponse_EResult)
	*p = x
	return p
}

func (x CMsgGCRerollPlayerChallengeResponse_EResult) String() string {
	return proto.EnumName(CMsgGCRerollPlayerChallengeResponse_EResult_name, int32(x))
}

func (x *CMsgGCRerollPlayerChallengeResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGCRerollPlayerChallengeResponse_EResult_value, data, "CMsgGCRerollPlayerChallengeResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgGCRerollPlayerChallengeResponse_EResult(value)
	return nil
}

func (CMsgGCRerollPlayerChallengeResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{25, 0}
}

type CMsgDOTARealtimeGameStats_GraphDataEStat int32

const (
	CMsgDOTARealtimeGameStats_GraphData_CreepGoldEarned         CMsgDOTARealtimeGameStats_GraphDataEStat = 0
	CMsgDOTARealtimeGameStats_GraphData_KillGoldEarned          CMsgDOTARealtimeGameStats_GraphDataEStat = 1
	CMsgDOTARealtimeGameStats_GraphData_DeathAndBuybackGoldLost CMsgDOTARealtimeGameStats_GraphDataEStat = 2
	CMsgDOTARealtimeGameStats_GraphData_XPEarned                CMsgDOTARealtimeGameStats_GraphDataEStat = 3
)

var CMsgDOTARealtimeGameStats_GraphDataEStat_name = map[int32]string{
	0: "CreepGoldEarned",
	1: "KillGoldEarned",
	2: "DeathAndBuybackGoldLost",
	3: "XPEarned",
}

var CMsgDOTARealtimeGameStats_GraphDataEStat_value = map[string]int32{
	"CreepGoldEarned":         0,
	"KillGoldEarned":          1,
	"DeathAndBuybackGoldLost": 2,
	"XPEarned":                3,
}

func (x CMsgDOTARealtimeGameStats_GraphDataEStat) Enum() *CMsgDOTARealtimeGameStats_GraphDataEStat {
	p := new(CMsgDOTARealtimeGameStats_GraphDataEStat)
	*p = x
	return p
}

func (x CMsgDOTARealtimeGameStats_GraphDataEStat) String() string {
	return proto.EnumName(CMsgDOTARealtimeGameStats_GraphDataEStat_name, int32(x))
}

func (x *CMsgDOTARealtimeGameStats_GraphDataEStat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTARealtimeGameStats_GraphDataEStat_value, data, "CMsgDOTARealtimeGameStats_GraphDataEStat")
	if err != nil {
		return err
	}
	*x = CMsgDOTARealtimeGameStats_GraphDataEStat(value)
	return nil
}

func (CMsgDOTARealtimeGameStats_GraphDataEStat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 11, 0}
}

type CMsgDOTARealtimeGameStats_GraphDataELocation int32

const (
	CMsgDOTARealtimeGameStats_GraphData_BotLane  CMsgDOTARealtimeGameStats_GraphDataELocation = 0
	CMsgDOTARealtimeGameStats_GraphData_MidLane  CMsgDOTARealtimeGameStats_GraphDataELocation = 1
	CMsgDOTARealtimeGameStats_GraphData_TopLane  CMsgDOTARealtimeGameStats_GraphDataELocation = 2
	CMsgDOTARealtimeGameStats_GraphData_Jungle   CMsgDOTARealtimeGameStats_GraphDataELocation = 3
	CMsgDOTARealtimeGameStats_GraphData_Ancients CMsgDOTARealtimeGameStats_GraphDataELocation = 4
	CMsgDOTARealtimeGameStats_GraphData_Other    CMsgDOTARealtimeGameStats_GraphDataELocation = 5
)

var CMsgDOTARealtimeGameStats_GraphDataELocation_name = map[int32]string{
	0: "BotLane",
	1: "MidLane",
	2: "TopLane",
	3: "Jungle",
	4: "Ancients",
	5: "Other",
}

var CMsgDOTARealtimeGameStats_GraphDataELocation_value = map[string]int32{
	"BotLane":  0,
	"MidLane":  1,
	"TopLane":  2,
	"Jungle":   3,
	"Ancients": 4,
	"Other":    5,
}

func (x CMsgDOTARealtimeGameStats_GraphDataELocation) Enum() *CMsgDOTARealtimeGameStats_GraphDataELocation {
	p := new(CMsgDOTARealtimeGameStats_GraphDataELocation)
	*p = x
	return p
}

func (x CMsgDOTARealtimeGameStats_GraphDataELocation) String() string {
	return proto.EnumName(CMsgDOTARealtimeGameStats_GraphDataELocation_name, int32(x))
}

func (x *CMsgDOTARealtimeGameStats_GraphDataELocation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTARealtimeGameStats_GraphDataELocation_value, data, "CMsgDOTARealtimeGameStats_GraphDataELocation")
	if err != nil {
		return err
	}
	*x = CMsgDOTARealtimeGameStats_GraphDataELocation(value)
	return nil
}

func (CMsgDOTARealtimeGameStats_GraphDataELocation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 11, 1}
}

type CMsgInGamePrediction_ERawValueTypeT int32

const (
	CMsgInGamePrediction_Number CMsgInGamePrediction_ERawValueTypeT = 0
	CMsgInGamePrediction_Time   CMsgInGamePrediction_ERawValueTypeT = 1
)

var CMsgInGamePrediction_ERawValueTypeT_name = map[int32]string{
	0: "Number",
	1: "Time",
}

var CMsgInGamePrediction_ERawValueTypeT_value = map[string]int32{
	"Number": 0,
	"Time":   1,
}

func (x CMsgInGamePrediction_ERawValueTypeT) Enum() *CMsgInGamePrediction_ERawValueTypeT {
	p := new(CMsgInGamePrediction_ERawValueTypeT)
	*p = x
	return p
}

func (x CMsgInGamePrediction_ERawValueTypeT) String() string {
	return proto.EnumName(CMsgInGamePrediction_ERawValueTypeT_name, int32(x))
}

func (x *CMsgInGamePrediction_ERawValueTypeT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgInGamePrediction_ERawValueTypeT_value, data, "CMsgInGamePrediction_ERawValueTypeT")
	if err != nil {
		return err
	}
	*x = CMsgInGamePrediction_ERawValueTypeT(value)
	return nil
}

func (CMsgInGamePrediction_ERawValueTypeT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{33, 0}
}

type CMsgInGamePrediction_EPredictionType int32

const (
	CMsgInGamePrediction_Generic        CMsgInGamePrediction_EPredictionType = 0
	CMsgInGamePrediction_Hero           CMsgInGamePrediction_EPredictionType = 1
	CMsgInGamePrediction_Team           CMsgInGamePrediction_EPredictionType = 2
	CMsgInGamePrediction_Player         CMsgInGamePrediction_EPredictionType = 3
	CMsgInGamePrediction_Special        CMsgInGamePrediction_EPredictionType = 4
	CMsgInGamePrediction_YesNo          CMsgInGamePrediction_EPredictionType = 5
	CMsgInGamePrediction_QualifiersTeam CMsgInGamePrediction_EPredictionType = 6
)

var CMsgInGamePrediction_EPredictionType_name = map[int32]string{
	0: "Generic",
	1: "Hero",
	2: "Team",
	3: "Player",
	4: "Special",
	5: "YesNo",
	6: "QualifiersTeam",
}

var CMsgInGamePrediction_EPredictionType_value = map[string]int32{
	"Generic":        0,
	"Hero":           1,
	"Team":           2,
	"Player":         3,
	"Special":        4,
	"YesNo":          5,
	"QualifiersTeam": 6,
}

func (x CMsgInGamePrediction_EPredictionType) Enum() *CMsgInGamePrediction_EPredictionType {
	p := new(CMsgInGamePrediction_EPredictionType)
	*p = x
	return p
}

func (x CMsgInGamePrediction_EPredictionType) String() string {
	return proto.EnumName(CMsgInGamePrediction_EPredictionType_name, int32(x))
}

func (x *CMsgInGamePrediction_EPredictionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgInGamePrediction_EPredictionType_value, data, "CMsgInGamePrediction_EPredictionType")
	if err != nil {
		return err
	}
	*x = CMsgInGamePrediction_EPredictionType(value)
	return nil
}

func (CMsgInGamePrediction_EPredictionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{33, 1}
}

type CMsgInGamePrediction_EResolutionTypeT int32

const (
	CMsgInGamePrediction_InvalidQuery          CMsgInGamePrediction_EResolutionTypeT = 0
	CMsgInGamePrediction_FirstToPassQuery      CMsgInGamePrediction_EResolutionTypeT = 1
	CMsgInGamePrediction_LastToPassQuery       CMsgInGamePrediction_EResolutionTypeT = 2
	CMsgInGamePrediction_LastRemainingQuery    CMsgInGamePrediction_EResolutionTypeT = 3
	CMsgInGamePrediction_MaxToPassQuery        CMsgInGamePrediction_EResolutionTypeT = 4
	CMsgInGamePrediction_MinToPassQuery        CMsgInGamePrediction_EResolutionTypeT = 5
	CMsgInGamePrediction_SumQuery              CMsgInGamePrediction_EResolutionTypeT = 6
	CMsgInGamePrediction_MaxTeamSumToPassQuery CMsgInGamePrediction_EResolutionTypeT = 7
	CMsgInGamePrediction_MinTeamSumToPassQuery CMsgInGamePrediction_EResolutionTypeT = 8
)

var CMsgInGamePrediction_EResolutionTypeT_name = map[int32]string{
	0: "InvalidQuery",
	1: "FirstToPassQuery",
	2: "LastToPassQuery",
	3: "LastRemainingQuery",
	4: "MaxToPassQuery",
	5: "MinToPassQuery",
	6: "SumQuery",
	7: "MaxTeamSumToPassQuery",
	8: "MinTeamSumToPassQuery",
}

var CMsgInGamePrediction_EResolutionTypeT_value = map[string]int32{
	"InvalidQuery":          0,
	"FirstToPassQuery":      1,
	"LastToPassQuery":       2,
	"LastRemainingQuery":    3,
	"MaxToPassQuery":        4,
	"MinToPassQuery":        5,
	"SumQuery":              6,
	"MaxTeamSumToPassQuery": 7,
	"MinTeamSumToPassQuery": 8,
}

func (x CMsgInGamePrediction_EResolutionTypeT) Enum() *CMsgInGamePrediction_EResolutionTypeT {
	p := new(CMsgInGamePrediction_EResolutionTypeT)
	*p = x
	return p
}

func (x CMsgInGamePrediction_EResolutionTypeT) String() string {
	return proto.EnumName(CMsgInGamePrediction_EResolutionTypeT_name, int32(x))
}

func (x *CMsgInGamePrediction_EResolutionTypeT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgInGamePrediction_EResolutionTypeT_value, data, "CMsgInGamePrediction_EResolutionTypeT")
	if err != nil {
		return err
	}
	*x = CMsgInGamePrediction_EResolutionTypeT(value)
	return nil
}

func (CMsgInGamePrediction_EResolutionTypeT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{33, 2}
}

type CMsgInGamePrediction_ERandomSelectionGroupT int32

const (
	CMsgInGamePrediction_EarlyGame CMsgInGamePrediction_ERandomSelectionGroupT = 0
	CMsgInGamePrediction_MidGame   CMsgInGamePrediction_ERandomSelectionGroupT = 1
	CMsgInGamePrediction_LateGame  CMsgInGamePrediction_ERandomSelectionGroupT = 2
	CMsgInGamePrediction_Count     CMsgInGamePrediction_ERandomSelectionGroupT = 3
)

var CMsgInGamePrediction_ERandomSelectionGroupT_name = map[int32]string{
	0: "EarlyGame",
	1: "MidGame",
	2: "LateGame",
	3: "Count",
}

var CMsgInGamePrediction_ERandomSelectionGroupT_value = map[string]int32{
	"EarlyGame": 0,
	"MidGame":   1,
	"LateGame":  2,
	"Count":     3,
}

func (x CMsgInGamePrediction_ERandomSelectionGroupT) Enum() *CMsgInGamePrediction_ERandomSelectionGroupT {
	p := new(CMsgInGamePrediction_ERandomSelectionGroupT)
	*p = x
	return p
}

func (x CMsgInGamePrediction_ERandomSelectionGroupT) String() string {
	return proto.EnumName(CMsgInGamePrediction_ERandomSelectionGroupT_name, int32(x))
}

func (x *CMsgInGamePrediction_ERandomSelectionGroupT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgInGamePrediction_ERandomSelectionGroupT_value, data, "CMsgInGamePrediction_ERandomSelectionGroupT")
	if err != nil {
		return err
	}
	*x = CMsgInGamePrediction_ERandomSelectionGroupT(value)
	return nil
}

func (CMsgInGamePrediction_ERandomSelectionGroupT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{33, 3}
}

type CMsgDOTASeasonPredictions_Prediction_EPredictionType int32

const (
	CMsgDOTASeasonPredictions_Prediction_Generic        CMsgDOTASeasonPredictions_Prediction_EPredictionType = 0
	CMsgDOTASeasonPredictions_Prediction_Hero           CMsgDOTASeasonPredictions_Prediction_EPredictionType = 1
	CMsgDOTASeasonPredictions_Prediction_Team           CMsgDOTASeasonPredictions_Prediction_EPredictionType = 2
	CMsgDOTASeasonPredictions_Prediction_Player         CMsgDOTASeasonPredictions_Prediction_EPredictionType = 3
	CMsgDOTASeasonPredictions_Prediction_Special        CMsgDOTASeasonPredictions_Prediction_EPredictionType = 4
	CMsgDOTASeasonPredictions_Prediction_YesNo          CMsgDOTASeasonPredictions_Prediction_EPredictionType = 5
	CMsgDOTASeasonPredictions_Prediction_QualifiersTeam CMsgDOTASeasonPredictions_Prediction_EPredictionType = 6
	CMsgDOTASeasonPredictions_Prediction_LastChanceTeam CMsgDOTASeasonPredictions_Prediction_EPredictionType = 7
)

var CMsgDOTASeasonPredictions_Prediction_EPredictionType_name = map[int32]string{
	0: "Generic",
	1: "Hero",
	2: "Team",
	3: "Player",
	4: "Special",
	5: "YesNo",
	6: "QualifiersTeam",
	7: "LastChanceTeam",
}

var CMsgDOTASeasonPredictions_Prediction_EPredictionType_value = map[string]int32{
	"Generic":        0,
	"Hero":           1,
	"Team":           2,
	"Player":         3,
	"Special":        4,
	"YesNo":          5,
	"QualifiersTeam": 6,
	"LastChanceTeam": 7,
}

func (x CMsgDOTASeasonPredictions_Prediction_EPredictionType) Enum() *CMsgDOTASeasonPredictions_Prediction_EPredictionType {
	p := new(CMsgDOTASeasonPredictions_Prediction_EPredictionType)
	*p = x
	return p
}

func (x CMsgDOTASeasonPredictions_Prediction_EPredictionType) String() string {
	return proto.EnumName(CMsgDOTASeasonPredictions_Prediction_EPredictionType_name, int32(x))
}

func (x *CMsgDOTASeasonPredictions_Prediction_EPredictionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTASeasonPredictions_Prediction_EPredictionType_value, data, "CMsgDOTASeasonPredictions_Prediction_EPredictionType")
	if err != nil {
		return err
	}
	*x = CMsgDOTASeasonPredictions_Prediction_EPredictionType(value)
	return nil
}

func (CMsgDOTASeasonPredictions_Prediction_EPredictionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{34, 0, 0}
}

type CMsgDOTASeasonPredictions_Prediction_EAnswerType int32

const (
	CMsgDOTASeasonPredictions_Prediction_SingleInt     CMsgDOTASeasonPredictions_Prediction_EAnswerType = 0
	CMsgDOTASeasonPredictions_Prediction_SingleFloat   CMsgDOTASeasonPredictions_Prediction_EAnswerType = 1
	CMsgDOTASeasonPredictions_Prediction_MultipleInt   CMsgDOTASeasonPredictions_Prediction_EAnswerType = 2
	CMsgDOTASeasonPredictions_Prediction_MultipleFloat CMsgDOTASeasonPredictions_Prediction_EAnswerType = 3
	CMsgDOTASeasonPredictions_Prediction_AnswerTeam    CMsgDOTASeasonPredictions_Prediction_EAnswerType = 4
	CMsgDOTASeasonPredictions_Prediction_SingleTime    CMsgDOTASeasonPredictions_Prediction_EAnswerType = 5
	CMsgDOTASeasonPredictions_Prediction_MultipleTime  CMsgDOTASeasonPredictions_Prediction_EAnswerType = 6
	CMsgDOTASeasonPredictions_Prediction_NoAnswer      CMsgDOTASeasonPredictions_Prediction_EAnswerType = 7
)

var CMsgDOTASeasonPredictions_Prediction_EAnswerType_name = map[int32]string{
	0: "SingleInt",
	1: "SingleFloat",
	2: "MultipleInt",
	3: "MultipleFloat",
	4: "AnswerTeam",
	5: "SingleTime",
	6: "MultipleTime",
	7: "NoAnswer",
}

var CMsgDOTASeasonPredictions_Prediction_EAnswerType_value = map[string]int32{
	"SingleInt":     0,
	"SingleFloat":   1,
	"MultipleInt":   2,
	"MultipleFloat": 3,
	"AnswerTeam":    4,
	"SingleTime":    5,
	"MultipleTime":  6,
	"NoAnswer":      7,
}

func (x CMsgDOTASeasonPredictions_Prediction_EAnswerType) Enum() *CMsgDOTASeasonPredictions_Prediction_EAnswerType {
	p := new(CMsgDOTASeasonPredictions_Prediction_EAnswerType)
	*p = x
	return p
}

func (x CMsgDOTASeasonPredictions_Prediction_EAnswerType) String() string {
	return proto.EnumName(CMsgDOTASeasonPredictions_Prediction_EAnswerType_name, int32(x))
}

func (x *CMsgDOTASeasonPredictions_Prediction_EAnswerType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTASeasonPredictions_Prediction_EAnswerType_value, data, "CMsgDOTASeasonPredictions_Prediction_EAnswerType")
	if err != nil {
		return err
	}
	*x = CMsgDOTASeasonPredictions_Prediction_EAnswerType(value)
	return nil
}

func (CMsgDOTASeasonPredictions_Prediction_EAnswerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{34, 0, 1}
}

type CMsgDOTAMatch_ReplayState int32

const (
	CMsgDOTAMatch_REPLAY_AVAILABLE    CMsgDOTAMatch_ReplayState = 0
	CMsgDOTAMatch_REPLAY_NOT_RECORDED CMsgDOTAMatch_ReplayState = 1
	CMsgDOTAMatch_REPLAY_EXPIRED      CMsgDOTAMatch_ReplayState = 2
)

var CMsgDOTAMatch_ReplayState_name = map[int32]string{
	0: "REPLAY_AVAILABLE",
	1: "REPLAY_NOT_RECORDED",
	2: "REPLAY_EXPIRED",
}

var CMsgDOTAMatch_ReplayState_value = map[string]int32{
	"REPLAY_AVAILABLE":    0,
	"REPLAY_NOT_RECORDED": 1,
	"REPLAY_EXPIRED":      2,
}

func (x CMsgDOTAMatch_ReplayState) Enum() *CMsgDOTAMatch_ReplayState {
	p := new(CMsgDOTAMatch_ReplayState)
	*p = x
	return p
}

func (x CMsgDOTAMatch_ReplayState) String() string {
	return proto.EnumName(CMsgDOTAMatch_ReplayState_name, int32(x))
}

func (x *CMsgDOTAMatch_ReplayState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAMatch_ReplayState_value, data, "CMsgDOTAMatch_ReplayState")
	if err != nil {
		return err
	}
	*x = CMsgDOTAMatch_ReplayState(value)
	return nil
}

func (CMsgDOTAMatch_ReplayState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{37, 0}
}

type CMsgDOTAMatch_Player_HeroDamageType int32

const (
	CMsgDOTAMatch_Player_HERO_DAMAGE_PHYSICAL CMsgDOTAMatch_Player_HeroDamageType = 0
	CMsgDOTAMatch_Player_HERO_DAMAGE_MAGICAL  CMsgDOTAMatch_Player_HeroDamageType = 1
	CMsgDOTAMatch_Player_HERO_DAMAGE_PURE     CMsgDOTAMatch_Player_HeroDamageType = 2
)

var CMsgDOTAMatch_Player_HeroDamageType_name = map[int32]string{
	0: "HERO_DAMAGE_PHYSICAL",
	1: "HERO_DAMAGE_MAGICAL",
	2: "HERO_DAMAGE_PURE",
}

var CMsgDOTAMatch_Player_HeroDamageType_value = map[string]int32{
	"HERO_DAMAGE_PHYSICAL": 0,
	"HERO_DAMAGE_MAGICAL":  1,
	"HERO_DAMAGE_PURE":     2,
}

func (x CMsgDOTAMatch_Player_HeroDamageType) Enum() *CMsgDOTAMatch_Player_HeroDamageType {
	p := new(CMsgDOTAMatch_Player_HeroDamageType)
	*p = x
	return p
}

func (x CMsgDOTAMatch_Player_HeroDamageType) String() string {
	return proto.EnumName(CMsgDOTAMatch_Player_HeroDamageType_name, int32(x))
}

func (x *CMsgDOTAMatch_Player_HeroDamageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAMatch_Player_HeroDamageType_value, data, "CMsgDOTAMatch_Player_HeroDamageType")
	if err != nil {
		return err
	}
	*x = CMsgDOTAMatch_Player_HeroDamageType(value)
	return nil
}

func (CMsgDOTAMatch_Player_HeroDamageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{37, 0, 0}
}

type CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse int32

const (
	CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_k_eInternalError CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse = 0
	CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_k_eSuccess       CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse = 1
	CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_k_eTooBusy       CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse = 2
	CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_k_eDisabled      CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse = 3
)

var CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse_name = map[int32]string{
	0: "k_eInternalError",
	1: "k_eSuccess",
	2: "k_eTooBusy",
	3: "k_eDisabled",
}

var CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse_value = map[string]int32{
	"k_eInternalError": 0,
	"k_eSuccess":       1,
	"k_eTooBusy":       2,
	"k_eDisabled":      3,
}

func (x CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse) Enum() *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse {
	p := new(CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse)
	*p = x
	return p
}

func (x CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse) String() string {
	return proto.EnumName(CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse_name, int32(x))
}

func (x *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse_value, data, "CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse")
	if err != nil {
		return err
	}
	*x = CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse(value)
	return nil
}

func (CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{59, 0}
}

type CSODOTAGameAccountClient struct {
	AccountId                      *uint32                                  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Wins                           *uint32                                  `protobuf:"varint,3,opt,name=wins" json:"wins,omitempty"`
	Losses                         *uint32                                  `protobuf:"varint,4,opt,name=losses" json:"losses,omitempty"`
	Xp                             *uint32                                  `protobuf:"varint,12,opt,name=xp" json:"xp,omitempty"`
	Level                          *uint32                                  `protobuf:"varint,13,opt,name=level" json:"level,omitempty"`
	InitialSkill                   *uint32                                  `protobuf:"varint,14,opt,name=initial_skill,json=initialSkill" json:"initial_skill,omitempty"`
	LeaverCount                    *uint32                                  `protobuf:"varint,15,opt,name=leaver_count,json=leaverCount" json:"leaver_count,omitempty"`
	SecondaryLeaverCount           *uint32                                  `protobuf:"varint,58,opt,name=secondary_leaver_count,json=secondaryLeaverCount" json:"secondary_leaver_count,omitempty"`
	LowPriorityUntilDate           *uint32                                  `protobuf:"varint,18,opt,name=low_priority_until_date,json=lowPriorityUntilDate" json:"low_priority_until_date,omitempty"`
	PreventTextChatUntilDate       *uint32                                  `protobuf:"varint,20,opt,name=prevent_text_chat_until_date,json=preventTextChatUntilDate" json:"prevent_text_chat_until_date,omitempty"`
	PreventVoiceUntilDate          *uint32                                  `protobuf:"varint,21,opt,name=prevent_voice_until_date,json=preventVoiceUntilDate" json:"prevent_voice_until_date,omitempty"`
	PreventPublicTextChatUntilDate *uint32                                  `protobuf:"varint,86,opt,name=prevent_public_text_chat_until_date,json=preventPublicTextChatUntilDate" json:"prevent_public_text_chat_until_date,omitempty"`
	PreventNewPlayerChatUntilDate  *uint32                                  `protobuf:"varint,122,opt,name=prevent_new_player_chat_until_date,json=preventNewPlayerChatUntilDate" json:"prevent_new_player_chat_until_date,omitempty"`
	LastAbandonedGameDate          *uint32                                  `protobuf:"varint,22,opt,name=last_abandoned_game_date,json=lastAbandonedGameDate" json:"last_abandoned_game_date,omitempty"`
	LastSecondaryAbandonedGameDate *uint32                                  `protobuf:"varint,59,opt,name=last_secondary_abandoned_game_date,json=lastSecondaryAbandonedGameDate" json:"last_secondary_abandoned_game_date,omitempty"`
	LeaverPenaltyCount             *uint32                                  `protobuf:"varint,23,opt,name=leaver_penalty_count,json=leaverPenaltyCount" json:"leaver_penalty_count,omitempty"`
	CompletedGameStreak            *uint32                                  `protobuf:"varint,24,opt,name=completed_game_streak,json=completedGameStreak" json:"completed_game_streak,omitempty"`
	AccountDisabledUntilDate       *uint32                                  `protobuf:"varint,38,opt,name=account_disabled_until_date,json=accountDisabledUntilDate" json:"account_disabled_until_date,omitempty"`
	AccountDisabledCount           *uint32                                  `protobuf:"varint,39,opt,name=account_disabled_count,json=accountDisabledCount" json:"account_disabled_count,omitempty"`
	MatchDisabledUntilDate         *uint32                                  `protobuf:"varint,41,opt,name=match_disabled_until_date,json=matchDisabledUntilDate" json:"match_disabled_until_date,omitempty"`
	MatchDisabledCount             *uint32                                  `protobuf:"varint,42,opt,name=match_disabled_count,json=matchDisabledCount" json:"match_disabled_count,omitempty"`
	Shutdownlawterminatetimestamp  *uint32                                  `protobuf:"varint,47,opt,name=shutdownlawterminatetimestamp" json:"shutdownlawterminatetimestamp,omitempty"`
	LowPriorityGamesRemaining      *uint32                                  `protobuf:"varint,48,opt,name=low_priority_games_remaining,json=lowPriorityGamesRemaining" json:"low_priority_games_remaining,omitempty"`
	RecruitmentLevel               *uint32                                  `protobuf:"varint,55,opt,name=recruitment_level,json=recruitmentLevel" json:"recruitment_level,omitempty"`
	HasNewNotifications            *bool                                    `protobuf:"varint,56,opt,name=has_new_notifications,json=hasNewNotifications" json:"has_new_notifications,omitempty"`
	IsLeagueAdmin                  *bool                                    `protobuf:"varint,57,opt,name=is_league_admin,json=isLeagueAdmin" json:"is_league_admin,omitempty"`
	CasualGamesPlayed              *uint32                                  `protobuf:"varint,60,opt,name=casual_games_played,json=casualGamesPlayed" json:"casual_games_played,omitempty"`
	SoloCompetitiveGamesPlayed     *uint32                                  `protobuf:"varint,61,opt,name=solo_competitive_games_played,json=soloCompetitiveGamesPlayed" json:"solo_competitive_games_played,omitempty"`
	PartyCompetitiveGamesPlayed    *uint32                                  `protobuf:"varint,62,opt,name=party_competitive_games_played,json=partyCompetitiveGamesPlayed" json:"party_competitive_games_played,omitempty"`
	Casual_1V1GamesPlayed          *uint32                                  `protobuf:"varint,65,opt,name=casual_1v1_games_played,json=casual1v1GamesPlayed" json:"casual_1v1_games_played,omitempty"`
	CurrAllHeroChallengeId         *uint32                                  `protobuf:"varint,67,opt,name=curr_all_hero_challenge_id,json=currAllHeroChallengeId" json:"curr_all_hero_challenge_id,omitempty"`
	PlayTimePoints                 *uint32                                  `protobuf:"varint,68,opt,name=play_time_points,json=playTimePoints" json:"play_time_points,omitempty"`
	AccountFlags                   *uint32                                  `protobuf:"varint,69,opt,name=account_flags,json=accountFlags" json:"account_flags,omitempty"`
	PlayTimeLevel                  *uint32                                  `protobuf:"varint,70,opt,name=play_time_level,json=playTimeLevel" json:"play_time_level,omitempty"`
	PlayerBehaviorSeqNumLastReport *uint32                                  `protobuf:"varint,71,opt,name=player_behavior_seq_num_last_report,json=playerBehaviorSeqNumLastReport" json:"player_behavior_seq_num_last_report,omitempty"`
	PlayerBehaviorScoreLastReport  *uint32                                  `protobuf:"varint,72,opt,name=player_behavior_score_last_report,json=playerBehaviorScoreLastReport" json:"player_behavior_score_last_report,omitempty"`
	PlayerBehaviorReportOldData    *bool                                    `protobuf:"varint,73,opt,name=player_behavior_report_old_data,json=playerBehaviorReportOldData" json:"player_behavior_report_old_data,omitempty"`
	TourneySkillLevel              *uint32                                  `protobuf:"varint,74,opt,name=tourney_skill_level,json=tourneySkillLevel" json:"tourney_skill_level,omitempty"`
	TourneyRecentParticipationDate *uint32                                  `protobuf:"varint,85,opt,name=tourney_recent_participation_date,json=tourneyRecentParticipationDate" json:"tourney_recent_participation_date,omitempty"`
	AnchoredPhoneNumberId          *uint64                                  `protobuf:"varint,88,opt,name=anchored_phone_number_id,json=anchoredPhoneNumberId" json:"anchored_phone_number_id,omitempty"`
	RankedMatchmakingBanUntilDate  *uint32                                  `protobuf:"varint,89,opt,name=ranked_matchmaking_ban_until_date,json=rankedMatchmakingBanUntilDate" json:"ranked_matchmaking_ban_until_date,omitempty"`
	RecentGameTime_1               *uint32                                  `protobuf:"varint,90,opt,name=recent_game_time_1,json=recentGameTime1" json:"recent_game_time_1,omitempty"`
	RecentGameTime_2               *uint32                                  `protobuf:"varint,91,opt,name=recent_game_time_2,json=recentGameTime2" json:"recent_game_time_2,omitempty"`
	RecentGameTime_3               *uint32                                  `protobuf:"varint,92,opt,name=recent_game_time_3,json=recentGameTime3" json:"recent_game_time_3,omitempty"`
	FavoriteTeamPacked             *uint64                                  `protobuf:"varint,103,opt,name=favorite_team_packed,json=favoriteTeamPacked" json:"favorite_team_packed,omitempty"`
	RecentReportTime               *uint32                                  `protobuf:"varint,104,opt,name=recent_report_time,json=recentReportTime" json:"recent_report_time,omitempty"`
	CustomGameDisabledUntilDate    *uint32                                  `protobuf:"varint,105,opt,name=custom_game_disabled_until_date,json=customGameDisabledUntilDate" json:"custom_game_disabled_until_date,omitempty"`
	RecentWinTime_1                *uint32                                  `protobuf:"varint,106,opt,name=recent_win_time_1,json=recentWinTime1" json:"recent_win_time_1,omitempty"`
	RecentWinTime_2                *uint32                                  `protobuf:"varint,107,opt,name=recent_win_time_2,json=recentWinTime2" json:"recent_win_time_2,omitempty"`
	RecentWinTime_3                *uint32                                  `protobuf:"varint,108,opt,name=recent_win_time_3,json=recentWinTime3" json:"recent_win_time_3,omitempty"`
	CoachRating                    *uint32                                  `protobuf:"varint,109,opt,name=coach_rating,json=coachRating" json:"coach_rating,omitempty"`
	QueuePoints                    *uint32                                  `protobuf:"varint,114,opt,name=queue_points,json=queuePoints" json:"queue_points,omitempty"`
	RoleHandicaps                  []*CSODOTAGameAccountClient_RoleHandicap `protobuf:"bytes,115,rep,name=role_handicaps,json=roleHandicaps" json:"role_handicaps,omitempty"`
	EventModeRecentTime            *uint32                                  `protobuf:"varint,120,opt,name=event_mode_recent_time,json=eventModeRecentTime" json:"event_mode_recent_time,omitempty"`
	MmrRecalibrationTime           *uint32                                  `protobuf:"varint,121,opt,name=mmr_recalibration_time,json=mmrRecalibrationTime" json:"mmr_recalibration_time,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                                 `json:"-"`
	XXX_unrecognized               []byte                                   `json:"-"`
	XXX_sizecache                  int32                                    `json:"-"`
}

func (m *CSODOTAGameAccountClient) Reset()         { *m = CSODOTAGameAccountClient{} }
func (m *CSODOTAGameAccountClient) String() string { return proto.CompactTextString(m) }
func (*CSODOTAGameAccountClient) ProtoMessage()    {}
func (*CSODOTAGameAccountClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{0}
}

func (m *CSODOTAGameAccountClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSODOTAGameAccountClient.Unmarshal(m, b)
}
func (m *CSODOTAGameAccountClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSODOTAGameAccountClient.Marshal(b, m, deterministic)
}
func (m *CSODOTAGameAccountClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSODOTAGameAccountClient.Merge(m, src)
}
func (m *CSODOTAGameAccountClient) XXX_Size() int {
	return xxx_messageInfo_CSODOTAGameAccountClient.Size(m)
}
func (m *CSODOTAGameAccountClient) XXX_DiscardUnknown() {
	xxx_messageInfo_CSODOTAGameAccountClient.DiscardUnknown(m)
}

var xxx_messageInfo_CSODOTAGameAccountClient proto.InternalMessageInfo

func (m *CSODOTAGameAccountClient) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetLosses() uint32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetXp() uint32 {
	if m != nil && m.Xp != nil {
		return *m.Xp
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetInitialSkill() uint32 {
	if m != nil && m.InitialSkill != nil {
		return *m.InitialSkill
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetLeaverCount() uint32 {
	if m != nil && m.LeaverCount != nil {
		return *m.LeaverCount
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetSecondaryLeaverCount() uint32 {
	if m != nil && m.SecondaryLeaverCount != nil {
		return *m.SecondaryLeaverCount
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetLowPriorityUntilDate() uint32 {
	if m != nil && m.LowPriorityUntilDate != nil {
		return *m.LowPriorityUntilDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetPreventTextChatUntilDate() uint32 {
	if m != nil && m.PreventTextChatUntilDate != nil {
		return *m.PreventTextChatUntilDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetPreventVoiceUntilDate() uint32 {
	if m != nil && m.PreventVoiceUntilDate != nil {
		return *m.PreventVoiceUntilDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetPreventPublicTextChatUntilDate() uint32 {
	if m != nil && m.PreventPublicTextChatUntilDate != nil {
		return *m.PreventPublicTextChatUntilDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetPreventNewPlayerChatUntilDate() uint32 {
	if m != nil && m.PreventNewPlayerChatUntilDate != nil {
		return *m.PreventNewPlayerChatUntilDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetLastAbandonedGameDate() uint32 {
	if m != nil && m.LastAbandonedGameDate != nil {
		return *m.LastAbandonedGameDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetLastSecondaryAbandonedGameDate() uint32 {
	if m != nil && m.LastSecondaryAbandonedGameDate != nil {
		return *m.LastSecondaryAbandonedGameDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetLeaverPenaltyCount() uint32 {
	if m != nil && m.LeaverPenaltyCount != nil {
		return *m.LeaverPenaltyCount
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetCompletedGameStreak() uint32 {
	if m != nil && m.CompletedGameStreak != nil {
		return *m.CompletedGameStreak
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetAccountDisabledUntilDate() uint32 {
	if m != nil && m.AccountDisabledUntilDate != nil {
		return *m.AccountDisabledUntilDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetAccountDisabledCount() uint32 {
	if m != nil && m.AccountDisabledCount != nil {
		return *m.AccountDisabledCount
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetMatchDisabledUntilDate() uint32 {
	if m != nil && m.MatchDisabledUntilDate != nil {
		return *m.MatchDisabledUntilDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetMatchDisabledCount() uint32 {
	if m != nil && m.MatchDisabledCount != nil {
		return *m.MatchDisabledCount
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetShutdownlawterminatetimestamp() uint32 {
	if m != nil && m.Shutdownlawterminatetimestamp != nil {
		return *m.Shutdownlawterminatetimestamp
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetLowPriorityGamesRemaining() uint32 {
	if m != nil && m.LowPriorityGamesRemaining != nil {
		return *m.LowPriorityGamesRemaining
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetRecruitmentLevel() uint32 {
	if m != nil && m.RecruitmentLevel != nil {
		return *m.RecruitmentLevel
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetHasNewNotifications() bool {
	if m != nil && m.HasNewNotifications != nil {
		return *m.HasNewNotifications
	}
	return false
}

func (m *CSODOTAGameAccountClient) GetIsLeagueAdmin() bool {
	if m != nil && m.IsLeagueAdmin != nil {
		return *m.IsLeagueAdmin
	}
	return false
}

func (m *CSODOTAGameAccountClient) GetCasualGamesPlayed() uint32 {
	if m != nil && m.CasualGamesPlayed != nil {
		return *m.CasualGamesPlayed
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetSoloCompetitiveGamesPlayed() uint32 {
	if m != nil && m.SoloCompetitiveGamesPlayed != nil {
		return *m.SoloCompetitiveGamesPlayed
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetPartyCompetitiveGamesPlayed() uint32 {
	if m != nil && m.PartyCompetitiveGamesPlayed != nil {
		return *m.PartyCompetitiveGamesPlayed
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetCasual_1V1GamesPlayed() uint32 {
	if m != nil && m.Casual_1V1GamesPlayed != nil {
		return *m.Casual_1V1GamesPlayed
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetCurrAllHeroChallengeId() uint32 {
	if m != nil && m.CurrAllHeroChallengeId != nil {
		return *m.CurrAllHeroChallengeId
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetPlayTimePoints() uint32 {
	if m != nil && m.PlayTimePoints != nil {
		return *m.PlayTimePoints
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetAccountFlags() uint32 {
	if m != nil && m.AccountFlags != nil {
		return *m.AccountFlags
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetPlayTimeLevel() uint32 {
	if m != nil && m.PlayTimeLevel != nil {
		return *m.PlayTimeLevel
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetPlayerBehaviorSeqNumLastReport() uint32 {
	if m != nil && m.PlayerBehaviorSeqNumLastReport != nil {
		return *m.PlayerBehaviorSeqNumLastReport
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetPlayerBehaviorScoreLastReport() uint32 {
	if m != nil && m.PlayerBehaviorScoreLastReport != nil {
		return *m.PlayerBehaviorScoreLastReport
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetPlayerBehaviorReportOldData() bool {
	if m != nil && m.PlayerBehaviorReportOldData != nil {
		return *m.PlayerBehaviorReportOldData
	}
	return false
}

func (m *CSODOTAGameAccountClient) GetTourneySkillLevel() uint32 {
	if m != nil && m.TourneySkillLevel != nil {
		return *m.TourneySkillLevel
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetTourneyRecentParticipationDate() uint32 {
	if m != nil && m.TourneyRecentParticipationDate != nil {
		return *m.TourneyRecentParticipationDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetAnchoredPhoneNumberId() uint64 {
	if m != nil && m.AnchoredPhoneNumberId != nil {
		return *m.AnchoredPhoneNumberId
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetRankedMatchmakingBanUntilDate() uint32 {
	if m != nil && m.RankedMatchmakingBanUntilDate != nil {
		return *m.RankedMatchmakingBanUntilDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetRecentGameTime_1() uint32 {
	if m != nil && m.RecentGameTime_1 != nil {
		return *m.RecentGameTime_1
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetRecentGameTime_2() uint32 {
	if m != nil && m.RecentGameTime_2 != nil {
		return *m.RecentGameTime_2
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetRecentGameTime_3() uint32 {
	if m != nil && m.RecentGameTime_3 != nil {
		return *m.RecentGameTime_3
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetFavoriteTeamPacked() uint64 {
	if m != nil && m.FavoriteTeamPacked != nil {
		return *m.FavoriteTeamPacked
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetRecentReportTime() uint32 {
	if m != nil && m.RecentReportTime != nil {
		return *m.RecentReportTime
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetCustomGameDisabledUntilDate() uint32 {
	if m != nil && m.CustomGameDisabledUntilDate != nil {
		return *m.CustomGameDisabledUntilDate
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetRecentWinTime_1() uint32 {
	if m != nil && m.RecentWinTime_1 != nil {
		return *m.RecentWinTime_1
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetRecentWinTime_2() uint32 {
	if m != nil && m.RecentWinTime_2 != nil {
		return *m.RecentWinTime_2
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetRecentWinTime_3() uint32 {
	if m != nil && m.RecentWinTime_3 != nil {
		return *m.RecentWinTime_3
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetCoachRating() uint32 {
	if m != nil && m.CoachRating != nil {
		return *m.CoachRating
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetQueuePoints() uint32 {
	if m != nil && m.QueuePoints != nil {
		return *m.QueuePoints
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetRoleHandicaps() []*CSODOTAGameAccountClient_RoleHandicap {
	if m != nil {
		return m.RoleHandicaps
	}
	return nil
}

func (m *CSODOTAGameAccountClient) GetEventModeRecentTime() uint32 {
	if m != nil && m.EventModeRecentTime != nil {
		return *m.EventModeRecentTime
	}
	return 0
}

func (m *CSODOTAGameAccountClient) GetMmrRecalibrationTime() uint32 {
	if m != nil && m.MmrRecalibrationTime != nil {
		return *m.MmrRecalibrationTime
	}
	return 0
}

type CSODOTAGameAccountClient_RoleHandicap struct {
	Role                 *uint32  `protobuf:"varint,1,opt,name=role" json:"role,omitempty"`
	Handicap             *float32 `protobuf:"fixed32,2,opt,name=handicap" json:"handicap,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSODOTAGameAccountClient_RoleHandicap) Reset()         { *m = CSODOTAGameAccountClient_RoleHandicap{} }
func (m *CSODOTAGameAccountClient_RoleHandicap) String() string { return proto.CompactTextString(m) }
func (*CSODOTAGameAccountClient_RoleHandicap) ProtoMessage()    {}
func (*CSODOTAGameAccountClient_RoleHandicap) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{0, 0}
}

func (m *CSODOTAGameAccountClient_RoleHandicap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSODOTAGameAccountClient_RoleHandicap.Unmarshal(m, b)
}
func (m *CSODOTAGameAccountClient_RoleHandicap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSODOTAGameAccountClient_RoleHandicap.Marshal(b, m, deterministic)
}
func (m *CSODOTAGameAccountClient_RoleHandicap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSODOTAGameAccountClient_RoleHandicap.Merge(m, src)
}
func (m *CSODOTAGameAccountClient_RoleHandicap) XXX_Size() int {
	return xxx_messageInfo_CSODOTAGameAccountClient_RoleHandicap.Size(m)
}
func (m *CSODOTAGameAccountClient_RoleHandicap) XXX_DiscardUnknown() {
	xxx_messageInfo_CSODOTAGameAccountClient_RoleHandicap.DiscardUnknown(m)
}

var xxx_messageInfo_CSODOTAGameAccountClient_RoleHandicap proto.InternalMessageInfo

func (m *CSODOTAGameAccountClient_RoleHandicap) GetRole() uint32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *CSODOTAGameAccountClient_RoleHandicap) GetHandicap() float32 {
	if m != nil && m.Handicap != nil {
		return *m.Handicap
	}
	return 0
}

type CSODOTAGameAccountPlus struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	OriginalStartDate    *uint32  `protobuf:"varint,2,opt,name=original_start_date,json=originalStartDate" json:"original_start_date,omitempty"`
	PlusFlags            *uint32  `protobuf:"varint,3,opt,name=plus_flags,json=plusFlags" json:"plus_flags,omitempty"`
	PlusStatus           *uint32  `protobuf:"varint,4,opt,name=plus_status,json=plusStatus" json:"plus_status,omitempty"`
	PrepaidTimeStart     *uint32  `protobuf:"varint,5,opt,name=prepaid_time_start,json=prepaidTimeStart" json:"prepaid_time_start,omitempty"`
	PrepaidTimeBalance   *uint32  `protobuf:"varint,6,opt,name=prepaid_time_balance,json=prepaidTimeBalance" json:"prepaid_time_balance,omitempty"`
	NextPaymentDate      *uint32  `protobuf:"fixed32,7,opt,name=next_payment_date,json=nextPaymentDate" json:"next_payment_date,omitempty"`
	SteamAgreementId     *uint64  `protobuf:"fixed64,8,opt,name=steam_agreement_id,json=steamAgreementId" json:"steam_agreement_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSODOTAGameAccountPlus) Reset()         { *m = CSODOTAGameAccountPlus{} }
func (m *CSODOTAGameAccountPlus) String() string { return proto.CompactTextString(m) }
func (*CSODOTAGameAccountPlus) ProtoMessage()    {}
func (*CSODOTAGameAccountPlus) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{1}
}

func (m *CSODOTAGameAccountPlus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSODOTAGameAccountPlus.Unmarshal(m, b)
}
func (m *CSODOTAGameAccountPlus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSODOTAGameAccountPlus.Marshal(b, m, deterministic)
}
func (m *CSODOTAGameAccountPlus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSODOTAGameAccountPlus.Merge(m, src)
}
func (m *CSODOTAGameAccountPlus) XXX_Size() int {
	return xxx_messageInfo_CSODOTAGameAccountPlus.Size(m)
}
func (m *CSODOTAGameAccountPlus) XXX_DiscardUnknown() {
	xxx_messageInfo_CSODOTAGameAccountPlus.DiscardUnknown(m)
}

var xxx_messageInfo_CSODOTAGameAccountPlus proto.InternalMessageInfo

func (m *CSODOTAGameAccountPlus) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSODOTAGameAccountPlus) GetOriginalStartDate() uint32 {
	if m != nil && m.OriginalStartDate != nil {
		return *m.OriginalStartDate
	}
	return 0
}

func (m *CSODOTAGameAccountPlus) GetPlusFlags() uint32 {
	if m != nil && m.PlusFlags != nil {
		return *m.PlusFlags
	}
	return 0
}

func (m *CSODOTAGameAccountPlus) GetPlusStatus() uint32 {
	if m != nil && m.PlusStatus != nil {
		return *m.PlusStatus
	}
	return 0
}

func (m *CSODOTAGameAccountPlus) GetPrepaidTimeStart() uint32 {
	if m != nil && m.PrepaidTimeStart != nil {
		return *m.PrepaidTimeStart
	}
	return 0
}

func (m *CSODOTAGameAccountPlus) GetPrepaidTimeBalance() uint32 {
	if m != nil && m.PrepaidTimeBalance != nil {
		return *m.PrepaidTimeBalance
	}
	return 0
}

func (m *CSODOTAGameAccountPlus) GetNextPaymentDate() uint32 {
	if m != nil && m.NextPaymentDate != nil {
		return *m.NextPaymentDate
	}
	return 0
}

func (m *CSODOTAGameAccountPlus) GetSteamAgreementId() uint64 {
	if m != nil && m.SteamAgreementId != nil {
		return *m.SteamAgreementId
	}
	return 0
}

type CMsgLobbyFeaturedGamemodeProgress struct {
	Accounts             []*CMsgLobbyFeaturedGamemodeProgress_AccountProgress `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *CMsgLobbyFeaturedGamemodeProgress) Reset()         { *m = CMsgLobbyFeaturedGamemodeProgress{} }
func (m *CMsgLobbyFeaturedGamemodeProgress) String() string { return proto.CompactTextString(m) }
func (*CMsgLobbyFeaturedGamemodeProgress) ProtoMessage()    {}
func (*CMsgLobbyFeaturedGamemodeProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{2}
}

func (m *CMsgLobbyFeaturedGamemodeProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress.Unmarshal(m, b)
}
func (m *CMsgLobbyFeaturedGamemodeProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress.Marshal(b, m, deterministic)
}
func (m *CMsgLobbyFeaturedGamemodeProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress.Merge(m, src)
}
func (m *CMsgLobbyFeaturedGamemodeProgress) XXX_Size() int {
	return xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress.Size(m)
}
func (m *CMsgLobbyFeaturedGamemodeProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress proto.InternalMessageInfo

func (m *CMsgLobbyFeaturedGamemodeProgress) GetAccounts() []*CMsgLobbyFeaturedGamemodeProgress_AccountProgress {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type CMsgLobbyFeaturedGamemodeProgress_AccountProgress struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	CurrentValue         *uint32  `protobuf:"varint,2,opt,name=current_value,json=currentValue" json:"current_value,omitempty"`
	MaxValue             *uint32  `protobuf:"varint,3,opt,name=max_value,json=maxValue" json:"max_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgLobbyFeaturedGamemodeProgress_AccountProgress) Reset() {
	*m = CMsgLobbyFeaturedGamemodeProgress_AccountProgress{}
}
func (m *CMsgLobbyFeaturedGamemodeProgress_AccountProgress) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgLobbyFeaturedGamemodeProgress_AccountProgress) ProtoMessage() {}
func (*CMsgLobbyFeaturedGamemodeProgress_AccountProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{2, 0}
}

func (m *CMsgLobbyFeaturedGamemodeProgress_AccountProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress_AccountProgress.Unmarshal(m, b)
}
func (m *CMsgLobbyFeaturedGamemodeProgress_AccountProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress_AccountProgress.Marshal(b, m, deterministic)
}
func (m *CMsgLobbyFeaturedGamemodeProgress_AccountProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress_AccountProgress.Merge(m, src)
}
func (m *CMsgLobbyFeaturedGamemodeProgress_AccountProgress) XXX_Size() int {
	return xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress_AccountProgress.Size(m)
}
func (m *CMsgLobbyFeaturedGamemodeProgress_AccountProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress_AccountProgress.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgLobbyFeaturedGamemodeProgress_AccountProgress proto.InternalMessageInfo

func (m *CMsgLobbyFeaturedGamemodeProgress_AccountProgress) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgLobbyFeaturedGamemodeProgress_AccountProgress) GetCurrentValue() uint32 {
	if m != nil && m.CurrentValue != nil {
		return *m.CurrentValue
	}
	return 0
}

func (m *CMsgLobbyFeaturedGamemodeProgress_AccountProgress) GetMaxValue() uint32 {
	if m != nil && m.MaxValue != nil {
		return *m.MaxValue
	}
	return 0
}

type CMsgBattleCupVictory struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	WinDate              *uint32  `protobuf:"varint,2,opt,name=win_date,json=winDate" json:"win_date,omitempty"`
	ValidUntil           *uint32  `protobuf:"varint,3,opt,name=valid_until,json=validUntil" json:"valid_until,omitempty"`
	SkillLevel           *uint32  `protobuf:"varint,4,opt,name=skill_level,json=skillLevel" json:"skill_level,omitempty"`
	TournamentId         *uint32  `protobuf:"varint,5,opt,name=tournament_id,json=tournamentId" json:"tournament_id,omitempty"`
	DivisionId           *uint32  `protobuf:"varint,6,opt,name=division_id,json=divisionId" json:"division_id,omitempty"`
	TeamId               *uint32  `protobuf:"varint,7,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Streak               *uint32  `protobuf:"varint,8,opt,name=streak" json:"streak,omitempty"`
	TrophyId             *uint32  `protobuf:"varint,9,opt,name=trophy_id,json=trophyId" json:"trophy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBattleCupVictory) Reset()         { *m = CMsgBattleCupVictory{} }
func (m *CMsgBattleCupVictory) String() string { return proto.CompactTextString(m) }
func (*CMsgBattleCupVictory) ProtoMessage()    {}
func (*CMsgBattleCupVictory) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{3}
}

func (m *CMsgBattleCupVictory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleCupVictory.Unmarshal(m, b)
}
func (m *CMsgBattleCupVictory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleCupVictory.Marshal(b, m, deterministic)
}
func (m *CMsgBattleCupVictory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleCupVictory.Merge(m, src)
}
func (m *CMsgBattleCupVictory) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleCupVictory.Size(m)
}
func (m *CMsgBattleCupVictory) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleCupVictory.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleCupVictory proto.InternalMessageInfo

func (m *CMsgBattleCupVictory) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgBattleCupVictory) GetWinDate() uint32 {
	if m != nil && m.WinDate != nil {
		return *m.WinDate
	}
	return 0
}

func (m *CMsgBattleCupVictory) GetValidUntil() uint32 {
	if m != nil && m.ValidUntil != nil {
		return *m.ValidUntil
	}
	return 0
}

func (m *CMsgBattleCupVictory) GetSkillLevel() uint32 {
	if m != nil && m.SkillLevel != nil {
		return *m.SkillLevel
	}
	return 0
}

func (m *CMsgBattleCupVictory) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgBattleCupVictory) GetDivisionId() uint32 {
	if m != nil && m.DivisionId != nil {
		return *m.DivisionId
	}
	return 0
}

func (m *CMsgBattleCupVictory) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgBattleCupVictory) GetStreak() uint32 {
	if m != nil && m.Streak != nil {
		return *m.Streak
	}
	return 0
}

func (m *CMsgBattleCupVictory) GetTrophyId() uint32 {
	if m != nil && m.TrophyId != nil {
		return *m.TrophyId
	}
	return 0
}

type CMsgLobbyBattleCupVictoryList struct {
	Winners              []*CMsgBattleCupVictory `protobuf:"bytes,1,rep,name=winners" json:"winners,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CMsgLobbyBattleCupVictoryList) Reset()         { *m = CMsgLobbyBattleCupVictoryList{} }
func (m *CMsgLobbyBattleCupVictoryList) String() string { return proto.CompactTextString(m) }
func (*CMsgLobbyBattleCupVictoryList) ProtoMessage()    {}
func (*CMsgLobbyBattleCupVictoryList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{4}
}

func (m *CMsgLobbyBattleCupVictoryList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgLobbyBattleCupVictoryList.Unmarshal(m, b)
}
func (m *CMsgLobbyBattleCupVictoryList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgLobbyBattleCupVictoryList.Marshal(b, m, deterministic)
}
func (m *CMsgLobbyBattleCupVictoryList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgLobbyBattleCupVictoryList.Merge(m, src)
}
func (m *CMsgLobbyBattleCupVictoryList) XXX_Size() int {
	return xxx_messageInfo_CMsgLobbyBattleCupVictoryList.Size(m)
}
func (m *CMsgLobbyBattleCupVictoryList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgLobbyBattleCupVictoryList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgLobbyBattleCupVictoryList proto.InternalMessageInfo

func (m *CMsgLobbyBattleCupVictoryList) GetWinners() []*CMsgBattleCupVictory {
	if m != nil {
		return m.Winners
	}
	return nil
}

type CMsgDOTABroadcastNotification struct {
	Message              *string  `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTABroadcastNotification) Reset()         { *m = CMsgDOTABroadcastNotification{} }
func (m *CMsgDOTABroadcastNotification) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTABroadcastNotification) ProtoMessage()    {}
func (*CMsgDOTABroadcastNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{5}
}

func (m *CMsgDOTABroadcastNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTABroadcastNotification.Unmarshal(m, b)
}
func (m *CMsgDOTABroadcastNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTABroadcastNotification.Marshal(b, m, deterministic)
}
func (m *CMsgDOTABroadcastNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTABroadcastNotification.Merge(m, src)
}
func (m *CMsgDOTABroadcastNotification) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTABroadcastNotification.Size(m)
}
func (m *CMsgDOTABroadcastNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTABroadcastNotification.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTABroadcastNotification proto.InternalMessageInfo

func (m *CMsgDOTABroadcastNotification) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CProtoItemHeroStatue struct {
	HeroId               *uint32  `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	StatusEffectIndex    *uint32  `protobuf:"varint,2,opt,name=status_effect_index,json=statusEffectIndex" json:"status_effect_index,omitempty"`
	SequenceName         *string  `protobuf:"bytes,3,opt,name=sequence_name,json=sequenceName" json:"sequence_name,omitempty"`
	Cycle                *float32 `protobuf:"fixed32,4,opt,name=cycle" json:"cycle,omitempty"`
	Wearable             []uint32 `protobuf:"varint,5,rep,name=wearable" json:"wearable,omitempty"`
	Inscription          *string  `protobuf:"bytes,6,opt,name=inscription" json:"inscription,omitempty"`
	Style                []uint32 `protobuf:"varint,7,rep,name=style" json:"style,omitempty"`
	TournamentDrop       *bool    `protobuf:"varint,8,opt,name=tournament_drop,json=tournamentDrop" json:"tournament_drop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CProtoItemHeroStatue) Reset()         { *m = CProtoItemHeroStatue{} }
func (m *CProtoItemHeroStatue) String() string { return proto.CompactTextString(m) }
func (*CProtoItemHeroStatue) ProtoMessage()    {}
func (*CProtoItemHeroStatue) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{6}
}

func (m *CProtoItemHeroStatue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CProtoItemHeroStatue.Unmarshal(m, b)
}
func (m *CProtoItemHeroStatue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CProtoItemHeroStatue.Marshal(b, m, deterministic)
}
func (m *CProtoItemHeroStatue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CProtoItemHeroStatue.Merge(m, src)
}
func (m *CProtoItemHeroStatue) XXX_Size() int {
	return xxx_messageInfo_CProtoItemHeroStatue.Size(m)
}
func (m *CProtoItemHeroStatue) XXX_DiscardUnknown() {
	xxx_messageInfo_CProtoItemHeroStatue.DiscardUnknown(m)
}

var xxx_messageInfo_CProtoItemHeroStatue proto.InternalMessageInfo

func (m *CProtoItemHeroStatue) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CProtoItemHeroStatue) GetStatusEffectIndex() uint32 {
	if m != nil && m.StatusEffectIndex != nil {
		return *m.StatusEffectIndex
	}
	return 0
}

func (m *CProtoItemHeroStatue) GetSequenceName() string {
	if m != nil && m.SequenceName != nil {
		return *m.SequenceName
	}
	return ""
}

func (m *CProtoItemHeroStatue) GetCycle() float32 {
	if m != nil && m.Cycle != nil {
		return *m.Cycle
	}
	return 0
}

func (m *CProtoItemHeroStatue) GetWearable() []uint32 {
	if m != nil {
		return m.Wearable
	}
	return nil
}

func (m *CProtoItemHeroStatue) GetInscription() string {
	if m != nil && m.Inscription != nil {
		return *m.Inscription
	}
	return ""
}

func (m *CProtoItemHeroStatue) GetStyle() []uint32 {
	if m != nil {
		return m.Style
	}
	return nil
}

func (m *CProtoItemHeroStatue) GetTournamentDrop() bool {
	if m != nil && m.TournamentDrop != nil {
		return *m.TournamentDrop
	}
	return false
}

type CMatchPlayerAbilityUpgrade struct {
	Ability              *int32   `protobuf:"varint,1,opt,name=ability,def=-1" json:"ability,omitempty"`
	Time                 *uint32  `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMatchPlayerAbilityUpgrade) Reset()         { *m = CMatchPlayerAbilityUpgrade{} }
func (m *CMatchPlayerAbilityUpgrade) String() string { return proto.CompactTextString(m) }
func (*CMatchPlayerAbilityUpgrade) ProtoMessage()    {}
func (*CMatchPlayerAbilityUpgrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{7}
}

func (m *CMatchPlayerAbilityUpgrade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMatchPlayerAbilityUpgrade.Unmarshal(m, b)
}
func (m *CMatchPlayerAbilityUpgrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMatchPlayerAbilityUpgrade.Marshal(b, m, deterministic)
}
func (m *CMatchPlayerAbilityUpgrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMatchPlayerAbilityUpgrade.Merge(m, src)
}
func (m *CMatchPlayerAbilityUpgrade) XXX_Size() int {
	return xxx_messageInfo_CMatchPlayerAbilityUpgrade.Size(m)
}
func (m *CMatchPlayerAbilityUpgrade) XXX_DiscardUnknown() {
	xxx_messageInfo_CMatchPlayerAbilityUpgrade.DiscardUnknown(m)
}

var xxx_messageInfo_CMatchPlayerAbilityUpgrade proto.InternalMessageInfo

const Default_CMatchPlayerAbilityUpgrade_Ability int32 = -1

func (m *CMatchPlayerAbilityUpgrade) GetAbility() int32 {
	if m != nil && m.Ability != nil {
		return *m.Ability
	}
	return Default_CMatchPlayerAbilityUpgrade_Ability
}

func (m *CMatchPlayerAbilityUpgrade) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type CMatchPlayerTimedCustomStat struct {
	Stat                 *EDOTAMatchPlayerTimeCustomStat `protobuf:"varint,2,opt,name=stat,enum=protocol.EDOTAMatchPlayerTimeCustomStat,def=1" json:"stat,omitempty"`
	Value                *float32                        `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CMatchPlayerTimedCustomStat) Reset()         { *m = CMatchPlayerTimedCustomStat{} }
func (m *CMatchPlayerTimedCustomStat) String() string { return proto.CompactTextString(m) }
func (*CMatchPlayerTimedCustomStat) ProtoMessage()    {}
func (*CMatchPlayerTimedCustomStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{8}
}

func (m *CMatchPlayerTimedCustomStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMatchPlayerTimedCustomStat.Unmarshal(m, b)
}
func (m *CMatchPlayerTimedCustomStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMatchPlayerTimedCustomStat.Marshal(b, m, deterministic)
}
func (m *CMatchPlayerTimedCustomStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMatchPlayerTimedCustomStat.Merge(m, src)
}
func (m *CMatchPlayerTimedCustomStat) XXX_Size() int {
	return xxx_messageInfo_CMatchPlayerTimedCustomStat.Size(m)
}
func (m *CMatchPlayerTimedCustomStat) XXX_DiscardUnknown() {
	xxx_messageInfo_CMatchPlayerTimedCustomStat.DiscardUnknown(m)
}

var xxx_messageInfo_CMatchPlayerTimedCustomStat proto.InternalMessageInfo

const Default_CMatchPlayerTimedCustomStat_Stat EDOTAMatchPlayerTimeCustomStat = EDOTAMatchPlayerTimeCustomStat_k_EDOTA_MatchPlayerTimeCustomStat_HPRegenUnderT1Towers

func (m *CMatchPlayerTimedCustomStat) GetStat() EDOTAMatchPlayerTimeCustomStat {
	if m != nil && m.Stat != nil {
		return *m.Stat
	}
	return Default_CMatchPlayerTimedCustomStat_Stat
}

func (m *CMatchPlayerTimedCustomStat) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type CMatchPlayerTimedStats struct {
	Time                  *uint32                        `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	Kills                 *uint32                        `protobuf:"varint,2,opt,name=kills" json:"kills,omitempty"`
	Deaths                *uint32                        `protobuf:"varint,3,opt,name=deaths" json:"deaths,omitempty"`
	Assists               *uint32                        `protobuf:"varint,4,opt,name=assists" json:"assists,omitempty"`
	NetWorth              *uint32                        `protobuf:"varint,5,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	Xp                    *uint32                        `protobuf:"varint,6,opt,name=xp" json:"xp,omitempty"`
	LastHits              *uint32                        `protobuf:"varint,7,opt,name=last_hits,json=lastHits" json:"last_hits,omitempty"`
	Denies                *uint32                        `protobuf:"varint,8,opt,name=denies" json:"denies,omitempty"`
	BountyRuneGold        *uint32                        `protobuf:"varint,9,opt,name=bounty_rune_gold,json=bountyRuneGold" json:"bounty_rune_gold,omitempty"`
	RangeCreepUpgradeGold *uint32                        `protobuf:"varint,10,opt,name=range_creep_upgrade_gold,json=rangeCreepUpgradeGold" json:"range_creep_upgrade_gold,omitempty"`
	ObserverWardsDewarded *uint32                        `protobuf:"varint,11,opt,name=observer_wards_dewarded,json=observerWardsDewarded" json:"observer_wards_dewarded,omitempty"`
	ReliableGoldEarned    *uint32                        `protobuf:"varint,12,opt,name=reliable_gold_earned,json=reliableGoldEarned" json:"reliable_gold_earned,omitempty"`
	GoldLossPrevented     *uint32                        `protobuf:"varint,13,opt,name=gold_loss_prevented,json=goldLossPrevented" json:"gold_loss_prevented,omitempty"`
	HeroKillGold          *uint32                        `protobuf:"varint,14,opt,name=hero_kill_gold,json=heroKillGold" json:"hero_kill_gold,omitempty"`
	CreepKillGold         *uint32                        `protobuf:"varint,15,opt,name=creep_kill_gold,json=creepKillGold" json:"creep_kill_gold,omitempty"`
	BuildingGold          *uint32                        `protobuf:"varint,16,opt,name=building_gold,json=buildingGold" json:"building_gold,omitempty"`
	OtherGold             *uint32                        `protobuf:"varint,17,opt,name=other_gold,json=otherGold" json:"other_gold,omitempty"`
	ComebackGold          *uint32                        `protobuf:"varint,18,opt,name=comeback_gold,json=comebackGold" json:"comeback_gold,omitempty"`
	ExperimentalGold      *uint32                        `protobuf:"varint,19,opt,name=experimental_gold,json=experimentalGold" json:"experimental_gold,omitempty"`
	Experimental2Gold     *uint32                        `protobuf:"varint,20,opt,name=experimental2_gold,json=experimental2Gold" json:"experimental2_gold,omitempty"`
	CreepDenyGold         *uint32                        `protobuf:"varint,21,opt,name=creep_deny_gold,json=creepDenyGold" json:"creep_deny_gold,omitempty"`
	TpScrollsPurchased_1  *uint32                        `protobuf:"varint,22,opt,name=tp_scrolls_purchased_1,json=tpScrollsPurchased1" json:"tp_scrolls_purchased_1,omitempty"`
	TpScrollsPurchased_2  *uint32                        `protobuf:"varint,23,opt,name=tp_scrolls_purchased_2,json=tpScrollsPurchased2" json:"tp_scrolls_purchased_2,omitempty"`
	TpScrollsPurchased_3  *uint32                        `protobuf:"varint,24,opt,name=tp_scrolls_purchased_3,json=tpScrollsPurchased3" json:"tp_scrolls_purchased_3,omitempty"`
	TpScrollsPurchased_4  *uint32                        `protobuf:"varint,25,opt,name=tp_scrolls_purchased_4,json=tpScrollsPurchased4" json:"tp_scrolls_purchased_4,omitempty"`
	TpScrollsPurchased_5  *uint32                        `protobuf:"varint,26,opt,name=tp_scrolls_purchased_5,json=tpScrollsPurchased5" json:"tp_scrolls_purchased_5,omitempty"`
	NeutralGold           *uint32                        `protobuf:"varint,27,opt,name=neutral_gold,json=neutralGold" json:"neutral_gold,omitempty"`
	CourierGold           *uint32                        `protobuf:"varint,28,opt,name=courier_gold,json=courierGold" json:"courier_gold,omitempty"`
	RoshanGold            *uint32                        `protobuf:"varint,29,opt,name=roshan_gold,json=roshanGold" json:"roshan_gold,omitempty"`
	IncomeGold            *uint32                        `protobuf:"varint,30,opt,name=income_gold,json=incomeGold" json:"income_gold,omitempty"`
	ItemValue             *uint32                        `protobuf:"varint,36,opt,name=item_value,json=itemValue" json:"item_value,omitempty"`
	SupportGoldSpent      *uint32                        `protobuf:"varint,37,opt,name=support_gold_spent,json=supportGoldSpent" json:"support_gold_spent,omitempty"`
	CampsStacked          *uint32                        `protobuf:"varint,38,opt,name=camps_stacked,json=campsStacked" json:"camps_stacked,omitempty"`
	WardsPlaced           *uint32                        `protobuf:"varint,39,opt,name=wards_placed,json=wardsPlaced" json:"wards_placed,omitempty"`
	TripleKills           *uint32                        `protobuf:"varint,40,opt,name=triple_kills,json=tripleKills" json:"triple_kills,omitempty"`
	Rampages              *uint32                        `protobuf:"varint,41,opt,name=rampages" json:"rampages,omitempty"`
	CustomStats           []*CMatchPlayerTimedCustomStat `protobuf:"bytes,42,rep,name=custom_stats,json=customStats" json:"custom_stats,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                       `json:"-"`
	XXX_unrecognized      []byte                         `json:"-"`
	XXX_sizecache         int32                          `json:"-"`
}

func (m *CMatchPlayerTimedStats) Reset()         { *m = CMatchPlayerTimedStats{} }
func (m *CMatchPlayerTimedStats) String() string { return proto.CompactTextString(m) }
func (*CMatchPlayerTimedStats) ProtoMessage()    {}
func (*CMatchPlayerTimedStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{9}
}

func (m *CMatchPlayerTimedStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMatchPlayerTimedStats.Unmarshal(m, b)
}
func (m *CMatchPlayerTimedStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMatchPlayerTimedStats.Marshal(b, m, deterministic)
}
func (m *CMatchPlayerTimedStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMatchPlayerTimedStats.Merge(m, src)
}
func (m *CMatchPlayerTimedStats) XXX_Size() int {
	return xxx_messageInfo_CMatchPlayerTimedStats.Size(m)
}
func (m *CMatchPlayerTimedStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMatchPlayerTimedStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMatchPlayerTimedStats proto.InternalMessageInfo

func (m *CMatchPlayerTimedStats) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetNetWorth() uint32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetXp() uint32 {
	if m != nil && m.Xp != nil {
		return *m.Xp
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetLastHits() uint32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetDenies() uint32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetBountyRuneGold() uint32 {
	if m != nil && m.BountyRuneGold != nil {
		return *m.BountyRuneGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetRangeCreepUpgradeGold() uint32 {
	if m != nil && m.RangeCreepUpgradeGold != nil {
		return *m.RangeCreepUpgradeGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetObserverWardsDewarded() uint32 {
	if m != nil && m.ObserverWardsDewarded != nil {
		return *m.ObserverWardsDewarded
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetReliableGoldEarned() uint32 {
	if m != nil && m.ReliableGoldEarned != nil {
		return *m.ReliableGoldEarned
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetGoldLossPrevented() uint32 {
	if m != nil && m.GoldLossPrevented != nil {
		return *m.GoldLossPrevented
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetHeroKillGold() uint32 {
	if m != nil && m.HeroKillGold != nil {
		return *m.HeroKillGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetCreepKillGold() uint32 {
	if m != nil && m.CreepKillGold != nil {
		return *m.CreepKillGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetBuildingGold() uint32 {
	if m != nil && m.BuildingGold != nil {
		return *m.BuildingGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetOtherGold() uint32 {
	if m != nil && m.OtherGold != nil {
		return *m.OtherGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetComebackGold() uint32 {
	if m != nil && m.ComebackGold != nil {
		return *m.ComebackGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetExperimentalGold() uint32 {
	if m != nil && m.ExperimentalGold != nil {
		return *m.ExperimentalGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetExperimental2Gold() uint32 {
	if m != nil && m.Experimental2Gold != nil {
		return *m.Experimental2Gold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetCreepDenyGold() uint32 {
	if m != nil && m.CreepDenyGold != nil {
		return *m.CreepDenyGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetTpScrollsPurchased_1() uint32 {
	if m != nil && m.TpScrollsPurchased_1 != nil {
		return *m.TpScrollsPurchased_1
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetTpScrollsPurchased_2() uint32 {
	if m != nil && m.TpScrollsPurchased_2 != nil {
		return *m.TpScrollsPurchased_2
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetTpScrollsPurchased_3() uint32 {
	if m != nil && m.TpScrollsPurchased_3 != nil {
		return *m.TpScrollsPurchased_3
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetTpScrollsPurchased_4() uint32 {
	if m != nil && m.TpScrollsPurchased_4 != nil {
		return *m.TpScrollsPurchased_4
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetTpScrollsPurchased_5() uint32 {
	if m != nil && m.TpScrollsPurchased_5 != nil {
		return *m.TpScrollsPurchased_5
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetNeutralGold() uint32 {
	if m != nil && m.NeutralGold != nil {
		return *m.NeutralGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetCourierGold() uint32 {
	if m != nil && m.CourierGold != nil {
		return *m.CourierGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetRoshanGold() uint32 {
	if m != nil && m.RoshanGold != nil {
		return *m.RoshanGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetIncomeGold() uint32 {
	if m != nil && m.IncomeGold != nil {
		return *m.IncomeGold
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetItemValue() uint32 {
	if m != nil && m.ItemValue != nil {
		return *m.ItemValue
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetSupportGoldSpent() uint32 {
	if m != nil && m.SupportGoldSpent != nil {
		return *m.SupportGoldSpent
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetCampsStacked() uint32 {
	if m != nil && m.CampsStacked != nil {
		return *m.CampsStacked
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetWardsPlaced() uint32 {
	if m != nil && m.WardsPlaced != nil {
		return *m.WardsPlaced
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetTripleKills() uint32 {
	if m != nil && m.TripleKills != nil {
		return *m.TripleKills
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetRampages() uint32 {
	if m != nil && m.Rampages != nil {
		return *m.Rampages
	}
	return 0
}

func (m *CMatchPlayerTimedStats) GetCustomStats() []*CMatchPlayerTimedCustomStat {
	if m != nil {
		return m.CustomStats
	}
	return nil
}

type CMatchTeamTimedStats struct {
	Time                 *uint32  `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	EnemyTowersKilled    *uint32  `protobuf:"varint,2,opt,name=enemy_towers_killed,json=enemyTowersKilled" json:"enemy_towers_killed,omitempty"`
	EnemyBarracksKilled  *uint32  `protobuf:"varint,3,opt,name=enemy_barracks_killed,json=enemyBarracksKilled" json:"enemy_barracks_killed,omitempty"`
	EnemyTowersStatus    *uint32  `protobuf:"varint,4,opt,name=enemy_towers_status,json=enemyTowersStatus" json:"enemy_towers_status,omitempty"`
	EnemyBarracksStatus  *uint32  `protobuf:"varint,5,opt,name=enemy_barracks_status,json=enemyBarracksStatus" json:"enemy_barracks_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMatchTeamTimedStats) Reset()         { *m = CMatchTeamTimedStats{} }
func (m *CMatchTeamTimedStats) String() string { return proto.CompactTextString(m) }
func (*CMatchTeamTimedStats) ProtoMessage()    {}
func (*CMatchTeamTimedStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{10}
}

func (m *CMatchTeamTimedStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMatchTeamTimedStats.Unmarshal(m, b)
}
func (m *CMatchTeamTimedStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMatchTeamTimedStats.Marshal(b, m, deterministic)
}
func (m *CMatchTeamTimedStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMatchTeamTimedStats.Merge(m, src)
}
func (m *CMatchTeamTimedStats) XXX_Size() int {
	return xxx_messageInfo_CMatchTeamTimedStats.Size(m)
}
func (m *CMatchTeamTimedStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMatchTeamTimedStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMatchTeamTimedStats proto.InternalMessageInfo

func (m *CMatchTeamTimedStats) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *CMatchTeamTimedStats) GetEnemyTowersKilled() uint32 {
	if m != nil && m.EnemyTowersKilled != nil {
		return *m.EnemyTowersKilled
	}
	return 0
}

func (m *CMatchTeamTimedStats) GetEnemyBarracksKilled() uint32 {
	if m != nil && m.EnemyBarracksKilled != nil {
		return *m.EnemyBarracksKilled
	}
	return 0
}

func (m *CMatchTeamTimedStats) GetEnemyTowersStatus() uint32 {
	if m != nil && m.EnemyTowersStatus != nil {
		return *m.EnemyTowersStatus
	}
	return 0
}

func (m *CMatchTeamTimedStats) GetEnemyBarracksStatus() uint32 {
	if m != nil && m.EnemyBarracksStatus != nil {
		return *m.EnemyBarracksStatus
	}
	return 0
}

type CMatchAdditionalUnitInventory struct {
	UnitName             *string  `protobuf:"bytes,1,opt,name=unit_name,json=unitName" json:"unit_name,omitempty"`
	Items                []int32  `protobuf:"varint,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMatchAdditionalUnitInventory) Reset()         { *m = CMatchAdditionalUnitInventory{} }
func (m *CMatchAdditionalUnitInventory) String() string { return proto.CompactTextString(m) }
func (*CMatchAdditionalUnitInventory) ProtoMessage()    {}
func (*CMatchAdditionalUnitInventory) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{11}
}

func (m *CMatchAdditionalUnitInventory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMatchAdditionalUnitInventory.Unmarshal(m, b)
}
func (m *CMatchAdditionalUnitInventory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMatchAdditionalUnitInventory.Marshal(b, m, deterministic)
}
func (m *CMatchAdditionalUnitInventory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMatchAdditionalUnitInventory.Merge(m, src)
}
func (m *CMatchAdditionalUnitInventory) XXX_Size() int {
	return xxx_messageInfo_CMatchAdditionalUnitInventory.Size(m)
}
func (m *CMatchAdditionalUnitInventory) XXX_DiscardUnknown() {
	xxx_messageInfo_CMatchAdditionalUnitInventory.DiscardUnknown(m)
}

var xxx_messageInfo_CMatchAdditionalUnitInventory proto.InternalMessageInfo

func (m *CMatchAdditionalUnitInventory) GetUnitName() string {
	if m != nil && m.UnitName != nil {
		return *m.UnitName
	}
	return ""
}

func (m *CMatchAdditionalUnitInventory) GetItems() []int32 {
	if m != nil {
		return m.Items
	}
	return nil
}

type CMatchPlayerPermanentBuff struct {
	PermanentBuff        *uint32  `protobuf:"varint,1,opt,name=permanent_buff,json=permanentBuff" json:"permanent_buff,omitempty"`
	StackCount           *uint32  `protobuf:"varint,2,opt,name=stack_count,json=stackCount" json:"stack_count,omitempty"`
	GrantTime            *uint32  `protobuf:"varint,3,opt,name=grant_time,json=grantTime" json:"grant_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMatchPlayerPermanentBuff) Reset()         { *m = CMatchPlayerPermanentBuff{} }
func (m *CMatchPlayerPermanentBuff) String() string { return proto.CompactTextString(m) }
func (*CMatchPlayerPermanentBuff) ProtoMessage()    {}
func (*CMatchPlayerPermanentBuff) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{12}
}

func (m *CMatchPlayerPermanentBuff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMatchPlayerPermanentBuff.Unmarshal(m, b)
}
func (m *CMatchPlayerPermanentBuff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMatchPlayerPermanentBuff.Marshal(b, m, deterministic)
}
func (m *CMatchPlayerPermanentBuff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMatchPlayerPermanentBuff.Merge(m, src)
}
func (m *CMatchPlayerPermanentBuff) XXX_Size() int {
	return xxx_messageInfo_CMatchPlayerPermanentBuff.Size(m)
}
func (m *CMatchPlayerPermanentBuff) XXX_DiscardUnknown() {
	xxx_messageInfo_CMatchPlayerPermanentBuff.DiscardUnknown(m)
}

var xxx_messageInfo_CMatchPlayerPermanentBuff proto.InternalMessageInfo

func (m *CMatchPlayerPermanentBuff) GetPermanentBuff() uint32 {
	if m != nil && m.PermanentBuff != nil {
		return *m.PermanentBuff
	}
	return 0
}

func (m *CMatchPlayerPermanentBuff) GetStackCount() uint32 {
	if m != nil && m.StackCount != nil {
		return *m.StackCount
	}
	return 0
}

func (m *CMatchPlayerPermanentBuff) GetGrantTime() uint32 {
	if m != nil && m.GrantTime != nil {
		return *m.GrantTime
	}
	return 0
}

type CMatchHeroSelectEvent struct {
	IsPick               *bool    `protobuf:"varint,1,opt,name=is_pick,json=isPick" json:"is_pick,omitempty"`
	Team                 *uint32  `protobuf:"varint,2,opt,name=team" json:"team,omitempty"`
	HeroId               *uint32  `protobuf:"varint,3,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMatchHeroSelectEvent) Reset()         { *m = CMatchHeroSelectEvent{} }
func (m *CMatchHeroSelectEvent) String() string { return proto.CompactTextString(m) }
func (*CMatchHeroSelectEvent) ProtoMessage()    {}
func (*CMatchHeroSelectEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{13}
}

func (m *CMatchHeroSelectEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMatchHeroSelectEvent.Unmarshal(m, b)
}
func (m *CMatchHeroSelectEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMatchHeroSelectEvent.Marshal(b, m, deterministic)
}
func (m *CMatchHeroSelectEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMatchHeroSelectEvent.Merge(m, src)
}
func (m *CMatchHeroSelectEvent) XXX_Size() int {
	return xxx_messageInfo_CMatchHeroSelectEvent.Size(m)
}
func (m *CMatchHeroSelectEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CMatchHeroSelectEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CMatchHeroSelectEvent proto.InternalMessageInfo

func (m *CMatchHeroSelectEvent) GetIsPick() bool {
	if m != nil && m.IsPick != nil {
		return *m.IsPick
	}
	return false
}

func (m *CMatchHeroSelectEvent) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CMatchHeroSelectEvent) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMatchClip struct {
	MatchId              *uint64  `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	PlayerAccountId      *uint32  `protobuf:"varint,2,opt,name=player_account_id,json=playerAccountId" json:"player_account_id,omitempty"`
	GameTimeSeconds      *uint32  `protobuf:"varint,3,opt,name=game_time_seconds,json=gameTimeSeconds" json:"game_time_seconds,omitempty"`
	DurationSeconds      *uint32  `protobuf:"varint,4,opt,name=duration_seconds,json=durationSeconds" json:"duration_seconds,omitempty"`
	PlayerId             *uint32  `protobuf:"varint,5,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,6,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	AbilityId            *int32   `protobuf:"varint,7,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	CameraMode           *uint32  `protobuf:"varint,8,opt,name=camera_mode,json=cameraMode" json:"camera_mode,omitempty"`
	Comment              *string  `protobuf:"bytes,9,opt,name=comment" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMatchClip) Reset()         { *m = CMatchClip{} }
func (m *CMatchClip) String() string { return proto.CompactTextString(m) }
func (*CMatchClip) ProtoMessage()    {}
func (*CMatchClip) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{14}
}

func (m *CMatchClip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMatchClip.Unmarshal(m, b)
}
func (m *CMatchClip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMatchClip.Marshal(b, m, deterministic)
}
func (m *CMatchClip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMatchClip.Merge(m, src)
}
func (m *CMatchClip) XXX_Size() int {
	return xxx_messageInfo_CMatchClip.Size(m)
}
func (m *CMatchClip) XXX_DiscardUnknown() {
	xxx_messageInfo_CMatchClip.DiscardUnknown(m)
}

var xxx_messageInfo_CMatchClip proto.InternalMessageInfo

const Default_CMatchClip_AbilityId int32 = -1

func (m *CMatchClip) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMatchClip) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMatchClip) GetGameTimeSeconds() uint32 {
	if m != nil && m.GameTimeSeconds != nil {
		return *m.GameTimeSeconds
	}
	return 0
}

func (m *CMatchClip) GetDurationSeconds() uint32 {
	if m != nil && m.DurationSeconds != nil {
		return *m.DurationSeconds
	}
	return 0
}

func (m *CMatchClip) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CMatchClip) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMatchClip) GetAbilityId() int32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return Default_CMatchClip_AbilityId
}

func (m *CMatchClip) GetCameraMode() uint32 {
	if m != nil && m.CameraMode != nil {
		return *m.CameraMode
	}
	return 0
}

func (m *CMatchClip) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

type CPartySearchClientParty struct {
	PartyId              *uint64  `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	BeaconType           *int32   `protobuf:"varint,2,opt,name=beacon_type,json=beaconType" json:"beacon_type,omitempty"`
	PartyMembers         []uint32 `protobuf:"fixed32,3,rep,name=party_members,json=partyMembers" json:"party_members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPartySearchClientParty) Reset()         { *m = CPartySearchClientParty{} }
func (m *CPartySearchClientParty) String() string { return proto.CompactTextString(m) }
func (*CPartySearchClientParty) ProtoMessage()    {}
func (*CPartySearchClientParty) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{15}
}

func (m *CPartySearchClientParty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPartySearchClientParty.Unmarshal(m, b)
}
func (m *CPartySearchClientParty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPartySearchClientParty.Marshal(b, m, deterministic)
}
func (m *CPartySearchClientParty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPartySearchClientParty.Merge(m, src)
}
func (m *CPartySearchClientParty) XXX_Size() int {
	return xxx_messageInfo_CPartySearchClientParty.Size(m)
}
func (m *CPartySearchClientParty) XXX_DiscardUnknown() {
	xxx_messageInfo_CPartySearchClientParty.DiscardUnknown(m)
}

var xxx_messageInfo_CPartySearchClientParty proto.InternalMessageInfo

func (m *CPartySearchClientParty) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CPartySearchClientParty) GetBeaconType() int32 {
	if m != nil && m.BeaconType != nil {
		return *m.BeaconType
	}
	return 0
}

func (m *CPartySearchClientParty) GetPartyMembers() []uint32 {
	if m != nil {
		return m.PartyMembers
	}
	return nil
}

type CMsgDOTAHasItemQuery struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ItemId               *uint64  `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAHasItemQuery) Reset()         { *m = CMsgDOTAHasItemQuery{} }
func (m *CMsgDOTAHasItemQuery) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAHasItemQuery) ProtoMessage()    {}
func (*CMsgDOTAHasItemQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{16}
}

func (m *CMsgDOTAHasItemQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAHasItemQuery.Unmarshal(m, b)
}
func (m *CMsgDOTAHasItemQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAHasItemQuery.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAHasItemQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAHasItemQuery.Merge(m, src)
}
func (m *CMsgDOTAHasItemQuery) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAHasItemQuery.Size(m)
}
func (m *CMsgDOTAHasItemQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAHasItemQuery.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAHasItemQuery proto.InternalMessageInfo

func (m *CMsgDOTAHasItemQuery) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAHasItemQuery) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgDOTAHasItemResponse struct {
	HasItem              *bool    `protobuf:"varint,1,opt,name=has_item,json=hasItem" json:"has_item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAHasItemResponse) Reset()         { *m = CMsgDOTAHasItemResponse{} }
func (m *CMsgDOTAHasItemResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAHasItemResponse) ProtoMessage()    {}
func (*CMsgDOTAHasItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{17}
}

func (m *CMsgDOTAHasItemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAHasItemResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAHasItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAHasItemResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAHasItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAHasItemResponse.Merge(m, src)
}
func (m *CMsgDOTAHasItemResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAHasItemResponse.Size(m)
}
func (m *CMsgDOTAHasItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAHasItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAHasItemResponse proto.InternalMessageInfo

func (m *CMsgDOTAHasItemResponse) GetHasItem() bool {
	if m != nil && m.HasItem != nil {
		return *m.HasItem
	}
	return false
}

type CMsgGCGetPlayerCardItemInfo struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PlayerCardItemIds    []uint64 `protobuf:"varint,2,rep,name=player_card_item_ids,json=playerCardItemIds" json:"player_card_item_ids,omitempty"`
	AllForEvent          *uint32  `protobuf:"varint,3,opt,name=all_for_event,json=allForEvent" json:"all_for_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGCGetPlayerCardItemInfo) Reset()         { *m = CMsgGCGetPlayerCardItemInfo{} }
func (m *CMsgGCGetPlayerCardItemInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGCGetPlayerCardItemInfo) ProtoMessage()    {}
func (*CMsgGCGetPlayerCardItemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{18}
}

func (m *CMsgGCGetPlayerCardItemInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCGetPlayerCardItemInfo.Unmarshal(m, b)
}
func (m *CMsgGCGetPlayerCardItemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCGetPlayerCardItemInfo.Marshal(b, m, deterministic)
}
func (m *CMsgGCGetPlayerCardItemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCGetPlayerCardItemInfo.Merge(m, src)
}
func (m *CMsgGCGetPlayerCardItemInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgGCGetPlayerCardItemInfo.Size(m)
}
func (m *CMsgGCGetPlayerCardItemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCGetPlayerCardItemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCGetPlayerCardItemInfo proto.InternalMessageInfo

func (m *CMsgGCGetPlayerCardItemInfo) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCGetPlayerCardItemInfo) GetPlayerCardItemIds() []uint64 {
	if m != nil {
		return m.PlayerCardItemIds
	}
	return nil
}

func (m *CMsgGCGetPlayerCardItemInfo) GetAllForEvent() uint32 {
	if m != nil && m.AllForEvent != nil {
		return *m.AllForEvent
	}
	return 0
}

type CMsgGCGetPlayerCardItemInfoResponse struct {
	PlayerCardInfos      []*CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo `protobuf:"bytes,1,rep,name=player_card_infos,json=playerCardInfos" json:"player_card_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *CMsgGCGetPlayerCardItemInfoResponse) Reset()         { *m = CMsgGCGetPlayerCardItemInfoResponse{} }
func (m *CMsgGCGetPlayerCardItemInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCGetPlayerCardItemInfoResponse) ProtoMessage()    {}
func (*CMsgGCGetPlayerCardItemInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{19}
}

func (m *CMsgGCGetPlayerCardItemInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse.Unmarshal(m, b)
}
func (m *CMsgGCGetPlayerCardItemInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse.Marshal(b, m, deterministic)
}
func (m *CMsgGCGetPlayerCardItemInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse.Merge(m, src)
}
func (m *CMsgGCGetPlayerCardItemInfoResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse.Size(m)
}
func (m *CMsgGCGetPlayerCardItemInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse proto.InternalMessageInfo

func (m *CMsgGCGetPlayerCardItemInfoResponse) GetPlayerCardInfos() []*CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo {
	if m != nil {
		return m.PlayerCardInfos
	}
	return nil
}

type CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo struct {
	PlayerCardItemId     *uint64  `protobuf:"varint,1,opt,name=player_card_item_id,json=playerCardItemId" json:"player_card_item_id,omitempty"`
	AccountId            *uint32  `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PackedBonuses        *uint64  `protobuf:"varint,3,opt,name=packed_bonuses,json=packedBonuses" json:"packed_bonuses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) Reset() {
	*m = CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo{}
}
func (m *CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) ProtoMessage() {}
func (*CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{19, 0}
}

func (m *CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo.Unmarshal(m, b)
}
func (m *CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo.Marshal(b, m, deterministic)
}
func (m *CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo.Merge(m, src)
}
func (m *CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo.Size(m)
}
func (m *CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo proto.InternalMessageInfo

func (m *CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) GetPlayerCardItemId() uint64 {
	if m != nil && m.PlayerCardItemId != nil {
		return *m.PlayerCardItemId
	}
	return 0
}

func (m *CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo) GetPackedBonuses() uint64 {
	if m != nil && m.PackedBonuses != nil {
		return *m.PackedBonuses
	}
	return 0
}

type CSODOTAMapLocationState struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	LocationId           *int32   `protobuf:"varint,2,opt,name=location_id,json=locationId" json:"location_id,omitempty"`
	Completed            *bool    `protobuf:"varint,3,opt,name=completed" json:"completed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSODOTAMapLocationState) Reset()         { *m = CSODOTAMapLocationState{} }
func (m *CSODOTAMapLocationState) String() string { return proto.CompactTextString(m) }
func (*CSODOTAMapLocationState) ProtoMessage()    {}
func (*CSODOTAMapLocationState) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{20}
}

func (m *CSODOTAMapLocationState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSODOTAMapLocationState.Unmarshal(m, b)
}
func (m *CSODOTAMapLocationState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSODOTAMapLocationState.Marshal(b, m, deterministic)
}
func (m *CSODOTAMapLocationState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSODOTAMapLocationState.Merge(m, src)
}
func (m *CSODOTAMapLocationState) XXX_Size() int {
	return xxx_messageInfo_CSODOTAMapLocationState.Size(m)
}
func (m *CSODOTAMapLocationState) XXX_DiscardUnknown() {
	xxx_messageInfo_CSODOTAMapLocationState.DiscardUnknown(m)
}

var xxx_messageInfo_CSODOTAMapLocationState proto.InternalMessageInfo

func (m *CSODOTAMapLocationState) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSODOTAMapLocationState) GetLocationId() int32 {
	if m != nil && m.LocationId != nil {
		return *m.LocationId
	}
	return 0
}

func (m *CSODOTAMapLocationState) GetCompleted() bool {
	if m != nil && m.Completed != nil {
		return *m.Completed
	}
	return false
}

type CMsgLeagueAdminList struct {
	AccountIds           []uint32 `protobuf:"varint,1,rep,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgLeagueAdminList) Reset()         { *m = CMsgLeagueAdminList{} }
func (m *CMsgLeagueAdminList) String() string { return proto.CompactTextString(m) }
func (*CMsgLeagueAdminList) ProtoMessage()    {}
func (*CMsgLeagueAdminList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{21}
}

func (m *CMsgLeagueAdminList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgLeagueAdminList.Unmarshal(m, b)
}
func (m *CMsgLeagueAdminList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgLeagueAdminList.Marshal(b, m, deterministic)
}
func (m *CMsgLeagueAdminList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgLeagueAdminList.Merge(m, src)
}
func (m *CMsgLeagueAdminList) XXX_Size() int {
	return xxx_messageInfo_CMsgLeagueAdminList.Size(m)
}
func (m *CMsgLeagueAdminList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgLeagueAdminList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgLeagueAdminList proto.InternalMessageInfo

func (m *CMsgLeagueAdminList) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type CMsgDOTAProfileCard struct {
	AccountId              *uint32                     `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Slots                  []*CMsgDOTAProfileCard_Slot `protobuf:"bytes,3,rep,name=slots" json:"slots,omitempty"`
	BadgePoints            *uint32                     `protobuf:"varint,4,opt,name=badge_points,json=badgePoints" json:"badge_points,omitempty"`
	EventPoints            *uint32                     `protobuf:"varint,5,opt,name=event_points,json=eventPoints" json:"event_points,omitempty"`
	EventId                *uint32                     `protobuf:"varint,6,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	RecentBattleCupVictory *CMsgBattleCupVictory       `protobuf:"bytes,7,opt,name=recent_battle_cup_victory,json=recentBattleCupVictory" json:"recent_battle_cup_victory,omitempty"`
	RankTier               *uint32                     `protobuf:"varint,8,opt,name=rank_tier,json=rankTier" json:"rank_tier,omitempty"`
	LeaderboardRank        *uint32                     `protobuf:"varint,9,opt,name=leaderboard_rank,json=leaderboardRank" json:"leaderboard_rank,omitempty"`
	IsPlusSubscriber       *bool                       `protobuf:"varint,10,opt,name=is_plus_subscriber,json=isPlusSubscriber" json:"is_plus_subscriber,omitempty"`
	PlusOriginalStartDate  *uint32                     `protobuf:"varint,11,opt,name=plus_original_start_date,json=plusOriginalStartDate" json:"plus_original_start_date,omitempty"`
	RankTierScore          *uint32                     `protobuf:"varint,12,opt,name=rank_tier_score,json=rankTierScore" json:"rank_tier_score,omitempty"`
	LeaderboardRankCore    *uint32                     `protobuf:"varint,17,opt,name=leaderboard_rank_core,json=leaderboardRankCore" json:"leaderboard_rank_core,omitempty"`
	Title                  *uint32                     `protobuf:"varint,23,opt,name=title" json:"title,omitempty"`
	FavoriteTeamPacked     *uint64                     `protobuf:"varint,24,opt,name=favorite_team_packed,json=favoriteTeamPacked" json:"favorite_team_packed,omitempty"`
	LifetimeGames          *uint32                     `protobuf:"varint,25,opt,name=lifetime_games,json=lifetimeGames" json:"lifetime_games,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                    `json:"-"`
	XXX_unrecognized       []byte                      `json:"-"`
	XXX_sizecache          int32                       `json:"-"`
}

func (m *CMsgDOTAProfileCard) Reset()         { *m = CMsgDOTAProfileCard{} }
func (m *CMsgDOTAProfileCard) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileCard) ProtoMessage()    {}
func (*CMsgDOTAProfileCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{22}
}

func (m *CMsgDOTAProfileCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAProfileCard.Unmarshal(m, b)
}
func (m *CMsgDOTAProfileCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAProfileCard.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAProfileCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAProfileCard.Merge(m, src)
}
func (m *CMsgDOTAProfileCard) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAProfileCard.Size(m)
}
func (m *CMsgDOTAProfileCard) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAProfileCard.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAProfileCard proto.InternalMessageInfo

func (m *CMsgDOTAProfileCard) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAProfileCard) GetSlots() []*CMsgDOTAProfileCard_Slot {
	if m != nil {
		return m.Slots
	}
	return nil
}

func (m *CMsgDOTAProfileCard) GetBadgePoints() uint32 {
	if m != nil && m.BadgePoints != nil {
		return *m.BadgePoints
	}
	return 0
}

func (m *CMsgDOTAProfileCard) GetEventPoints() uint32 {
	if m != nil && m.EventPoints != nil {
		return *m.EventPoints
	}
	return 0
}

func (m *CMsgDOTAProfileCard) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgDOTAProfileCard) GetRecentBattleCupVictory() *CMsgBattleCupVictory {
	if m != nil {
		return m.RecentBattleCupVictory
	}
	return nil
}

func (m *CMsgDOTAProfileCard) GetRankTier() uint32 {
	if m != nil && m.RankTier != nil {
		return *m.RankTier
	}
	return 0
}

func (m *CMsgDOTAProfileCard) GetLeaderboardRank() uint32 {
	if m != nil && m.LeaderboardRank != nil {
		return *m.LeaderboardRank
	}
	return 0
}

func (m *CMsgDOTAProfileCard) GetIsPlusSubscriber() bool {
	if m != nil && m.IsPlusSubscriber != nil {
		return *m.IsPlusSubscriber
	}
	return false
}

func (m *CMsgDOTAProfileCard) GetPlusOriginalStartDate() uint32 {
	if m != nil && m.PlusOriginalStartDate != nil {
		return *m.PlusOriginalStartDate
	}
	return 0
}

func (m *CMsgDOTAProfileCard) GetRankTierScore() uint32 {
	if m != nil && m.RankTierScore != nil {
		return *m.RankTierScore
	}
	return 0
}

func (m *CMsgDOTAProfileCard) GetLeaderboardRankCore() uint32 {
	if m != nil && m.LeaderboardRankCore != nil {
		return *m.LeaderboardRankCore
	}
	return 0
}

func (m *CMsgDOTAProfileCard) GetTitle() uint32 {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return 0
}

func (m *CMsgDOTAProfileCard) GetFavoriteTeamPacked() uint64 {
	if m != nil && m.FavoriteTeamPacked != nil {
		return *m.FavoriteTeamPacked
	}
	return 0
}

func (m *CMsgDOTAProfileCard) GetLifetimeGames() uint32 {
	if m != nil && m.LifetimeGames != nil {
		return *m.LifetimeGames
	}
	return 0
}

type CMsgDOTAProfileCard_Slot struct {
	SlotId               *uint32                            `protobuf:"varint,1,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	Trophy               *CMsgDOTAProfileCard_Slot_Trophy   `protobuf:"bytes,2,opt,name=trophy" json:"trophy,omitempty"`
	Stat                 *CMsgDOTAProfileCard_Slot_Stat     `protobuf:"bytes,3,opt,name=stat" json:"stat,omitempty"`
	Item                 *CMsgDOTAProfileCard_Slot_Item     `protobuf:"bytes,4,opt,name=item" json:"item,omitempty"`
	Hero                 *CMsgDOTAProfileCard_Slot_Hero     `protobuf:"bytes,5,opt,name=hero" json:"hero,omitempty"`
	Emoticon             *CMsgDOTAProfileCard_Slot_Emoticon `protobuf:"bytes,6,opt,name=emoticon" json:"emoticon,omitempty"`
	Team                 *CMsgDOTAProfileCard_Slot_Team     `protobuf:"bytes,7,opt,name=team" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *CMsgDOTAProfileCard_Slot) Reset()         { *m = CMsgDOTAProfileCard_Slot{} }
func (m *CMsgDOTAProfileCard_Slot) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileCard_Slot) ProtoMessage()    {}
func (*CMsgDOTAProfileCard_Slot) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{22, 0}
}

func (m *CMsgDOTAProfileCard_Slot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot.Unmarshal(m, b)
}
func (m *CMsgDOTAProfileCard_Slot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAProfileCard_Slot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot.Merge(m, src)
}
func (m *CMsgDOTAProfileCard_Slot) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot.Size(m)
}
func (m *CMsgDOTAProfileCard_Slot) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAProfileCard_Slot proto.InternalMessageInfo

func (m *CMsgDOTAProfileCard_Slot) GetSlotId() uint32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

func (m *CMsgDOTAProfileCard_Slot) GetTrophy() *CMsgDOTAProfileCard_Slot_Trophy {
	if m != nil {
		return m.Trophy
	}
	return nil
}

func (m *CMsgDOTAProfileCard_Slot) GetStat() *CMsgDOTAProfileCard_Slot_Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

func (m *CMsgDOTAProfileCard_Slot) GetItem() *CMsgDOTAProfileCard_Slot_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *CMsgDOTAProfileCard_Slot) GetHero() *CMsgDOTAProfileCard_Slot_Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *CMsgDOTAProfileCard_Slot) GetEmoticon() *CMsgDOTAProfileCard_Slot_Emoticon {
	if m != nil {
		return m.Emoticon
	}
	return nil
}

func (m *CMsgDOTAProfileCard_Slot) GetTeam() *CMsgDOTAProfileCard_Slot_Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type CMsgDOTAProfileCard_Slot_Trophy struct {
	TrophyId             *uint32  `protobuf:"varint,1,opt,name=trophy_id,json=trophyId" json:"trophy_id,omitempty"`
	TrophyScore          *uint32  `protobuf:"varint,2,opt,name=trophy_score,json=trophyScore" json:"trophy_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAProfileCard_Slot_Trophy) Reset()         { *m = CMsgDOTAProfileCard_Slot_Trophy{} }
func (m *CMsgDOTAProfileCard_Slot_Trophy) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileCard_Slot_Trophy) ProtoMessage()    {}
func (*CMsgDOTAProfileCard_Slot_Trophy) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{22, 0, 0}
}

func (m *CMsgDOTAProfileCard_Slot_Trophy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Trophy.Unmarshal(m, b)
}
func (m *CMsgDOTAProfileCard_Slot_Trophy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Trophy.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAProfileCard_Slot_Trophy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Trophy.Merge(m, src)
}
func (m *CMsgDOTAProfileCard_Slot_Trophy) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Trophy.Size(m)
}
func (m *CMsgDOTAProfileCard_Slot_Trophy) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Trophy.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAProfileCard_Slot_Trophy proto.InternalMessageInfo

func (m *CMsgDOTAProfileCard_Slot_Trophy) GetTrophyId() uint32 {
	if m != nil && m.TrophyId != nil {
		return *m.TrophyId
	}
	return 0
}

func (m *CMsgDOTAProfileCard_Slot_Trophy) GetTrophyScore() uint32 {
	if m != nil && m.TrophyScore != nil {
		return *m.TrophyScore
	}
	return 0
}

type CMsgDOTAProfileCard_Slot_Stat struct {
	StatId               *CMsgDOTAProfileCard_EStatID `protobuf:"varint,1,opt,name=stat_id,json=statId,enum=protocol.CMsgDOTAProfileCard_EStatID,def=3" json:"stat_id,omitempty"`
	StatScore            *uint32                      `protobuf:"varint,2,opt,name=stat_score,json=statScore" json:"stat_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CMsgDOTAProfileCard_Slot_Stat) Reset()         { *m = CMsgDOTAProfileCard_Slot_Stat{} }
func (m *CMsgDOTAProfileCard_Slot_Stat) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileCard_Slot_Stat) ProtoMessage()    {}
func (*CMsgDOTAProfileCard_Slot_Stat) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{22, 0, 1}
}

func (m *CMsgDOTAProfileCard_Slot_Stat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Stat.Unmarshal(m, b)
}
func (m *CMsgDOTAProfileCard_Slot_Stat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Stat.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAProfileCard_Slot_Stat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Stat.Merge(m, src)
}
func (m *CMsgDOTAProfileCard_Slot_Stat) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Stat.Size(m)
}
func (m *CMsgDOTAProfileCard_Slot_Stat) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Stat.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAProfileCard_Slot_Stat proto.InternalMessageInfo

const Default_CMsgDOTAProfileCard_Slot_Stat_StatId CMsgDOTAProfileCard_EStatID = CMsgDOTAProfileCard_k_eStat_Wins

func (m *CMsgDOTAProfileCard_Slot_Stat) GetStatId() CMsgDOTAProfileCard_EStatID {
	if m != nil && m.StatId != nil {
		return *m.StatId
	}
	return Default_CMsgDOTAProfileCard_Slot_Stat_StatId
}

func (m *CMsgDOTAProfileCard_Slot_Stat) GetStatScore() uint32 {
	if m != nil && m.StatScore != nil {
		return *m.StatScore
	}
	return 0
}

type CMsgDOTAProfileCard_Slot_Item struct {
	SerializedItem       []byte   `protobuf:"bytes,1,opt,name=serialized_item,json=serializedItem" json:"serialized_item,omitempty"`
	ItemId               *uint64  `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAProfileCard_Slot_Item) Reset()         { *m = CMsgDOTAProfileCard_Slot_Item{} }
func (m *CMsgDOTAProfileCard_Slot_Item) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileCard_Slot_Item) ProtoMessage()    {}
func (*CMsgDOTAProfileCard_Slot_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{22, 0, 2}
}

func (m *CMsgDOTAProfileCard_Slot_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Item.Unmarshal(m, b)
}
func (m *CMsgDOTAProfileCard_Slot_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Item.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAProfileCard_Slot_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Item.Merge(m, src)
}
func (m *CMsgDOTAProfileCard_Slot_Item) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Item.Size(m)
}
func (m *CMsgDOTAProfileCard_Slot_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Item.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAProfileCard_Slot_Item proto.InternalMessageInfo

func (m *CMsgDOTAProfileCard_Slot_Item) GetSerializedItem() []byte {
	if m != nil {
		return m.SerializedItem
	}
	return nil
}

func (m *CMsgDOTAProfileCard_Slot_Item) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgDOTAProfileCard_Slot_Hero struct {
	HeroId               *uint32  `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	HeroWins             *uint32  `protobuf:"varint,2,opt,name=hero_wins,json=heroWins" json:"hero_wins,omitempty"`
	HeroLosses           *uint32  `protobuf:"varint,3,opt,name=hero_losses,json=heroLosses" json:"hero_losses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAProfileCard_Slot_Hero) Reset()         { *m = CMsgDOTAProfileCard_Slot_Hero{} }
func (m *CMsgDOTAProfileCard_Slot_Hero) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileCard_Slot_Hero) ProtoMessage()    {}
func (*CMsgDOTAProfileCard_Slot_Hero) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{22, 0, 3}
}

func (m *CMsgDOTAProfileCard_Slot_Hero) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Hero.Unmarshal(m, b)
}
func (m *CMsgDOTAProfileCard_Slot_Hero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Hero.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAProfileCard_Slot_Hero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Hero.Merge(m, src)
}
func (m *CMsgDOTAProfileCard_Slot_Hero) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Hero.Size(m)
}
func (m *CMsgDOTAProfileCard_Slot_Hero) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Hero.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAProfileCard_Slot_Hero proto.InternalMessageInfo

func (m *CMsgDOTAProfileCard_Slot_Hero) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTAProfileCard_Slot_Hero) GetHeroWins() uint32 {
	if m != nil && m.HeroWins != nil {
		return *m.HeroWins
	}
	return 0
}

func (m *CMsgDOTAProfileCard_Slot_Hero) GetHeroLosses() uint32 {
	if m != nil && m.HeroLosses != nil {
		return *m.HeroLosses
	}
	return 0
}

type CMsgDOTAProfileCard_Slot_Emoticon struct {
	EmoticonId           *uint32  `protobuf:"varint,1,opt,name=emoticon_id,json=emoticonId" json:"emoticon_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAProfileCard_Slot_Emoticon) Reset()         { *m = CMsgDOTAProfileCard_Slot_Emoticon{} }
func (m *CMsgDOTAProfileCard_Slot_Emoticon) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileCard_Slot_Emoticon) ProtoMessage()    {}
func (*CMsgDOTAProfileCard_Slot_Emoticon) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{22, 0, 4}
}

func (m *CMsgDOTAProfileCard_Slot_Emoticon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Emoticon.Unmarshal(m, b)
}
func (m *CMsgDOTAProfileCard_Slot_Emoticon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Emoticon.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAProfileCard_Slot_Emoticon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Emoticon.Merge(m, src)
}
func (m *CMsgDOTAProfileCard_Slot_Emoticon) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Emoticon.Size(m)
}
func (m *CMsgDOTAProfileCard_Slot_Emoticon) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Emoticon.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAProfileCard_Slot_Emoticon proto.InternalMessageInfo

func (m *CMsgDOTAProfileCard_Slot_Emoticon) GetEmoticonId() uint32 {
	if m != nil && m.EmoticonId != nil {
		return *m.EmoticonId
	}
	return 0
}

type CMsgDOTAProfileCard_Slot_Team struct {
	TeamId               *uint32  `protobuf:"varint,1,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAProfileCard_Slot_Team) Reset()         { *m = CMsgDOTAProfileCard_Slot_Team{} }
func (m *CMsgDOTAProfileCard_Slot_Team) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProfileCard_Slot_Team) ProtoMessage()    {}
func (*CMsgDOTAProfileCard_Slot_Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{22, 0, 5}
}

func (m *CMsgDOTAProfileCard_Slot_Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Team.Unmarshal(m, b)
}
func (m *CMsgDOTAProfileCard_Slot_Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Team.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAProfileCard_Slot_Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Team.Merge(m, src)
}
func (m *CMsgDOTAProfileCard_Slot_Team) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAProfileCard_Slot_Team.Size(m)
}
func (m *CMsgDOTAProfileCard_Slot_Team) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAProfileCard_Slot_Team.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAProfileCard_Slot_Team proto.InternalMessageInfo

func (m *CMsgDOTAProfileCard_Slot_Team) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CSODOTAPlayerChallenge struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	EventId              *uint32  `protobuf:"varint,2,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	SlotId               *uint32  `protobuf:"varint,3,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	IntParam_0           *uint32  `protobuf:"varint,5,opt,name=int_param_0,json=intParam0" json:"int_param_0,omitempty"`
	IntParam_1           *uint32  `protobuf:"varint,6,opt,name=int_param_1,json=intParam1" json:"int_param_1,omitempty"`
	CreatedTime          *uint32  `protobuf:"varint,7,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	Completed            *uint32  `protobuf:"varint,8,opt,name=completed" json:"completed,omitempty"`
	SequenceId           *uint32  `protobuf:"varint,9,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	ChallengeTier        *uint32  `protobuf:"varint,10,opt,name=challenge_tier,json=challengeTier" json:"challenge_tier,omitempty"`
	Flags                *uint32  `protobuf:"varint,11,opt,name=flags" json:"flags,omitempty"`
	Attempts             *uint32  `protobuf:"varint,12,opt,name=attempts" json:"attempts,omitempty"`
	CompleteLimit        *uint32  `protobuf:"varint,13,opt,name=complete_limit,json=completeLimit" json:"complete_limit,omitempty"`
	QuestRank            *uint32  `protobuf:"varint,14,opt,name=quest_rank,json=questRank" json:"quest_rank,omitempty"`
	MaxQuestRank         *uint32  `protobuf:"varint,15,opt,name=max_quest_rank,json=maxQuestRank" json:"max_quest_rank,omitempty"`
	InstanceId           *uint32  `protobuf:"varint,16,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,17,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	TemplateId           *uint32  `protobuf:"varint,18,opt,name=template_id,json=templateId" json:"template_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSODOTAPlayerChallenge) Reset()         { *m = CSODOTAPlayerChallenge{} }
func (m *CSODOTAPlayerChallenge) String() string { return proto.CompactTextString(m) }
func (*CSODOTAPlayerChallenge) ProtoMessage()    {}
func (*CSODOTAPlayerChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{23}
}

func (m *CSODOTAPlayerChallenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSODOTAPlayerChallenge.Unmarshal(m, b)
}
func (m *CSODOTAPlayerChallenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSODOTAPlayerChallenge.Marshal(b, m, deterministic)
}
func (m *CSODOTAPlayerChallenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSODOTAPlayerChallenge.Merge(m, src)
}
func (m *CSODOTAPlayerChallenge) XXX_Size() int {
	return xxx_messageInfo_CSODOTAPlayerChallenge.Size(m)
}
func (m *CSODOTAPlayerChallenge) XXX_DiscardUnknown() {
	xxx_messageInfo_CSODOTAPlayerChallenge.DiscardUnknown(m)
}

var xxx_messageInfo_CSODOTAPlayerChallenge proto.InternalMessageInfo

func (m *CSODOTAPlayerChallenge) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetSlotId() uint32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetIntParam_0() uint32 {
	if m != nil && m.IntParam_0 != nil {
		return *m.IntParam_0
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetIntParam_1() uint32 {
	if m != nil && m.IntParam_1 != nil {
		return *m.IntParam_1
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetCreatedTime() uint32 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetCompleted() uint32 {
	if m != nil && m.Completed != nil {
		return *m.Completed
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetSequenceId() uint32 {
	if m != nil && m.SequenceId != nil {
		return *m.SequenceId
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetChallengeTier() uint32 {
	if m != nil && m.ChallengeTier != nil {
		return *m.ChallengeTier
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetAttempts() uint32 {
	if m != nil && m.Attempts != nil {
		return *m.Attempts
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetCompleteLimit() uint32 {
	if m != nil && m.CompleteLimit != nil {
		return *m.CompleteLimit
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetQuestRank() uint32 {
	if m != nil && m.QuestRank != nil {
		return *m.QuestRank
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetMaxQuestRank() uint32 {
	if m != nil && m.MaxQuestRank != nil {
		return *m.MaxQuestRank
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetInstanceId() uint32 {
	if m != nil && m.InstanceId != nil {
		return *m.InstanceId
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CSODOTAPlayerChallenge) GetTemplateId() uint32 {
	if m != nil && m.TemplateId != nil {
		return *m.TemplateId
	}
	return 0
}

type CMsgClientToGCRerollPlayerChallenge struct {
	EventId              *EEvent  `protobuf:"varint,1,opt,name=event_id,json=eventId,enum=protocol.EEvent,def=0" json:"event_id,omitempty"`
	SequenceId           *uint32  `protobuf:"varint,3,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,4,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCRerollPlayerChallenge) Reset()         { *m = CMsgClientToGCRerollPlayerChallenge{} }
func (m *CMsgClientToGCRerollPlayerChallenge) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCRerollPlayerChallenge) ProtoMessage()    {}
func (*CMsgClientToGCRerollPlayerChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{24}
}

func (m *CMsgClientToGCRerollPlayerChallenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCRerollPlayerChallenge.Unmarshal(m, b)
}
func (m *CMsgClientToGCRerollPlayerChallenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCRerollPlayerChallenge.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCRerollPlayerChallenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCRerollPlayerChallenge.Merge(m, src)
}
func (m *CMsgClientToGCRerollPlayerChallenge) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCRerollPlayerChallenge.Size(m)
}
func (m *CMsgClientToGCRerollPlayerChallenge) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCRerollPlayerChallenge.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCRerollPlayerChallenge proto.InternalMessageInfo

const Default_CMsgClientToGCRerollPlayerChallenge_EventId EEvent = EEvent_EVENT_ID_NONE

func (m *CMsgClientToGCRerollPlayerChallenge) GetEventId() EEvent {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return Default_CMsgClientToGCRerollPlayerChallenge_EventId
}

func (m *CMsgClientToGCRerollPlayerChallenge) GetSequenceId() uint32 {
	if m != nil && m.SequenceId != nil {
		return *m.SequenceId
	}
	return 0
}

func (m *CMsgClientToGCRerollPlayerChallenge) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMsgGCRerollPlayerChallengeResponse struct {
	Result               *CMsgGCRerollPlayerChallengeResponse_EResult `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgGCRerollPlayerChallengeResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *CMsgGCRerollPlayerChallengeResponse) Reset()         { *m = CMsgGCRerollPlayerChallengeResponse{} }
func (m *CMsgGCRerollPlayerChallengeResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCRerollPlayerChallengeResponse) ProtoMessage()    {}
func (*CMsgGCRerollPlayerChallengeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{25}
}

func (m *CMsgGCRerollPlayerChallengeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCRerollPlayerChallengeResponse.Unmarshal(m, b)
}
func (m *CMsgGCRerollPlayerChallengeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCRerollPlayerChallengeResponse.Marshal(b, m, deterministic)
}
func (m *CMsgGCRerollPlayerChallengeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCRerollPlayerChallengeResponse.Merge(m, src)
}
func (m *CMsgGCRerollPlayerChallengeResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgGCRerollPlayerChallengeResponse.Size(m)
}
func (m *CMsgGCRerollPlayerChallengeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCRerollPlayerChallengeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCRerollPlayerChallengeResponse proto.InternalMessageInfo

const Default_CMsgGCRerollPlayerChallengeResponse_Result CMsgGCRerollPlayerChallengeResponse_EResult = CMsgGCRerollPlayerChallengeResponse_eResult_Success

func (m *CMsgGCRerollPlayerChallengeResponse) GetResult() CMsgGCRerollPlayerChallengeResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgGCRerollPlayerChallengeResponse_Result
}

type CMsgGCTopCustomGamesList struct {
	TopCustomGames       []uint64 `protobuf:"varint,1,rep,name=top_custom_games,json=topCustomGames" json:"top_custom_games,omitempty"`
	GameOfTheDay         *uint64  `protobuf:"varint,2,opt,name=game_of_the_day,json=gameOfTheDay" json:"game_of_the_day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGCTopCustomGamesList) Reset()         { *m = CMsgGCTopCustomGamesList{} }
func (m *CMsgGCTopCustomGamesList) String() string { return proto.CompactTextString(m) }
func (*CMsgGCTopCustomGamesList) ProtoMessage()    {}
func (*CMsgGCTopCustomGamesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{26}
}

func (m *CMsgGCTopCustomGamesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCTopCustomGamesList.Unmarshal(m, b)
}
func (m *CMsgGCTopCustomGamesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCTopCustomGamesList.Marshal(b, m, deterministic)
}
func (m *CMsgGCTopCustomGamesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCTopCustomGamesList.Merge(m, src)
}
func (m *CMsgGCTopCustomGamesList) XXX_Size() int {
	return xxx_messageInfo_CMsgGCTopCustomGamesList.Size(m)
}
func (m *CMsgGCTopCustomGamesList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCTopCustomGamesList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCTopCustomGamesList proto.InternalMessageInfo

func (m *CMsgGCTopCustomGamesList) GetTopCustomGames() []uint64 {
	if m != nil {
		return m.TopCustomGames
	}
	return nil
}

func (m *CMsgGCTopCustomGamesList) GetGameOfTheDay() uint64 {
	if m != nil && m.GameOfTheDay != nil {
		return *m.GameOfTheDay
	}
	return 0
}

type CMsgDOTARealtimeGameStats struct {
	Match                *CMsgDOTARealtimeGameStats_MatchDetails      `protobuf:"bytes,1,opt,name=match" json:"match,omitempty"`
	Teams                []*CMsgDOTARealtimeGameStats_TeamDetails     `protobuf:"bytes,2,rep,name=teams" json:"teams,omitempty"`
	Buildings            []*CMsgDOTARealtimeGameStats_BuildingDetails `protobuf:"bytes,3,rep,name=buildings" json:"buildings,omitempty"`
	GraphData            *CMsgDOTARealtimeGameStats_GraphData         `protobuf:"bytes,4,opt,name=graph_data,json=graphData" json:"graph_data,omitempty"`
	DeltaFrame           *bool                                        `protobuf:"varint,5,opt,name=delta_frame,json=deltaFrame" json:"delta_frame,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats) Reset()         { *m = CMsgDOTARealtimeGameStats{} }
func (m *CMsgDOTARealtimeGameStats) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStats) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27}
}

func (m *CMsgDOTARealtimeGameStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats.Size(m)
}
func (m *CMsgDOTARealtimeGameStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStats) GetMatch() *CMsgDOTARealtimeGameStats_MatchDetails {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats) GetTeams() []*CMsgDOTARealtimeGameStats_TeamDetails {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats) GetBuildings() []*CMsgDOTARealtimeGameStats_BuildingDetails {
	if m != nil {
		return m.Buildings
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats) GetGraphData() *CMsgDOTARealtimeGameStats_GraphData {
	if m != nil {
		return m.GraphData
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats) GetDeltaFrame() bool {
	if m != nil && m.DeltaFrame != nil {
		return *m.DeltaFrame
	}
	return false
}

type CMsgDOTARealtimeGameStats_TeamDetails struct {
	TeamNumber           *uint32                                    `protobuf:"varint,1,opt,name=team_number,json=teamNumber" json:"team_number,omitempty"`
	TeamId               *uint32                                    `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	TeamName             *string                                    `protobuf:"bytes,3,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	TeamLogo             *uint64                                    `protobuf:"fixed64,4,opt,name=team_logo,json=teamLogo" json:"team_logo,omitempty"`
	TeamTag              *string                                    `protobuf:"bytes,10,opt,name=team_tag,json=teamTag" json:"team_tag,omitempty"`
	Score                *uint32                                    `protobuf:"varint,5,opt,name=score" json:"score,omitempty"`
	NetWorth             *uint32                                    `protobuf:"varint,9,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	Players              []*CMsgDOTARealtimeGameStats_PlayerDetails `protobuf:"bytes,6,rep,name=players" json:"players,omitempty"`
	OnlyTeam             *bool                                      `protobuf:"varint,7,opt,name=only_team,json=onlyTeam" json:"only_team,omitempty"`
	Cheers               *uint32                                    `protobuf:"varint,8,opt,name=cheers" json:"cheers,omitempty"`
	TeamLogoUrl          *string                                    `protobuf:"bytes,11,opt,name=team_logo_url,json=teamLogoUrl" json:"team_logo_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) Reset()         { *m = CMsgDOTARealtimeGameStats_TeamDetails{} }
func (m *CMsgDOTARealtimeGameStats_TeamDetails) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStats_TeamDetails) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStats_TeamDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 0}
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_TeamDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_TeamDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_TeamDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_TeamDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_TeamDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_TeamDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_TeamDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_TeamDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_TeamDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_TeamDetails proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStats_TeamDetails) GetTeamNumber() uint32 {
	if m != nil && m.TeamNumber != nil {
		return *m.TeamNumber
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) GetTeamLogo() uint64 {
	if m != nil && m.TeamLogo != nil {
		return *m.TeamLogo
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) GetTeamTag() string {
	if m != nil && m.TeamTag != nil {
		return *m.TeamTag
	}
	return ""
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) GetNetWorth() uint32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) GetPlayers() []*CMsgDOTARealtimeGameStats_PlayerDetails {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) GetOnlyTeam() bool {
	if m != nil && m.OnlyTeam != nil {
		return *m.OnlyTeam
	}
	return false
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) GetCheers() uint32 {
	if m != nil && m.Cheers != nil {
		return *m.Cheers
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_TeamDetails) GetTeamLogoUrl() string {
	if m != nil && m.TeamLogoUrl != nil {
		return *m.TeamLogoUrl
	}
	return ""
}

type CMsgDOTARealtimeGameStats_ItemDetails struct {
	ItemAbilityId        *int32   `protobuf:"varint,1,opt,name=item_ability_id,json=itemAbilityId,def=-1" json:"item_ability_id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Time                 *int32   `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	Sold                 *bool    `protobuf:"varint,4,opt,name=sold" json:"sold,omitempty"`
	Stackcount           *uint32  `protobuf:"varint,5,opt,name=stackcount" json:"stackcount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_ItemDetails) Reset()         { *m = CMsgDOTARealtimeGameStats_ItemDetails{} }
func (m *CMsgDOTARealtimeGameStats_ItemDetails) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStats_ItemDetails) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStats_ItemDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 1}
}

func (m *CMsgDOTARealtimeGameStats_ItemDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_ItemDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_ItemDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_ItemDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_ItemDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_ItemDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_ItemDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_ItemDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_ItemDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_ItemDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_ItemDetails proto.InternalMessageInfo

const Default_CMsgDOTARealtimeGameStats_ItemDetails_ItemAbilityId int32 = -1

func (m *CMsgDOTARealtimeGameStats_ItemDetails) GetItemAbilityId() int32 {
	if m != nil && m.ItemAbilityId != nil {
		return *m.ItemAbilityId
	}
	return Default_CMsgDOTARealtimeGameStats_ItemDetails_ItemAbilityId
}

func (m *CMsgDOTARealtimeGameStats_ItemDetails) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTARealtimeGameStats_ItemDetails) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_ItemDetails) GetSold() bool {
	if m != nil && m.Sold != nil {
		return *m.Sold
	}
	return false
}

func (m *CMsgDOTARealtimeGameStats_ItemDetails) GetStackcount() uint32 {
	if m != nil && m.Stackcount != nil {
		return *m.Stackcount
	}
	return 0
}

type CMsgDOTARealtimeGameStats_AbilityDetails struct {
	Id                   *int32   `protobuf:"varint,1,opt,name=id,def=-1" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Level                *uint32  `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
	Cooldown             *float32 `protobuf:"fixed32,4,opt,name=cooldown" json:"cooldown,omitempty"`
	CooldownMax          *float32 `protobuf:"fixed32,5,opt,name=cooldown_max,json=cooldownMax" json:"cooldown_max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_AbilityDetails) Reset() {
	*m = CMsgDOTARealtimeGameStats_AbilityDetails{}
}
func (m *CMsgDOTARealtimeGameStats_AbilityDetails) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStats_AbilityDetails) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStats_AbilityDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 2}
}

func (m *CMsgDOTARealtimeGameStats_AbilityDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_AbilityDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_AbilityDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_AbilityDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_AbilityDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityDetails proto.InternalMessageInfo

const Default_CMsgDOTARealtimeGameStats_AbilityDetails_Id int32 = -1

func (m *CMsgDOTARealtimeGameStats_AbilityDetails) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return Default_CMsgDOTARealtimeGameStats_AbilityDetails_Id
}

func (m *CMsgDOTARealtimeGameStats_AbilityDetails) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTARealtimeGameStats_AbilityDetails) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_AbilityDetails) GetCooldown() float32 {
	if m != nil && m.Cooldown != nil {
		return *m.Cooldown
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_AbilityDetails) GetCooldownMax() float32 {
	if m != nil && m.CooldownMax != nil {
		return *m.CooldownMax
	}
	return 0
}

type CMsgDOTARealtimeGameStats_HeroToHeroStats struct {
	Victimid             *int32   `protobuf:"varint,1,opt,name=victimid,def=-1" json:"victimid,omitempty"`
	Kills                *uint32  `protobuf:"varint,2,opt,name=kills" json:"kills,omitempty"`
	Assists              *uint32  `protobuf:"varint,3,opt,name=assists" json:"assists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_HeroToHeroStats) Reset() {
	*m = CMsgDOTARealtimeGameStats_HeroToHeroStats{}
}
func (m *CMsgDOTARealtimeGameStats_HeroToHeroStats) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARealtimeGameStats_HeroToHeroStats) ProtoMessage() {}
func (*CMsgDOTARealtimeGameStats_HeroToHeroStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 3}
}

func (m *CMsgDOTARealtimeGameStats_HeroToHeroStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_HeroToHeroStats.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_HeroToHeroStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_HeroToHeroStats.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_HeroToHeroStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_HeroToHeroStats.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_HeroToHeroStats) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_HeroToHeroStats.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_HeroToHeroStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_HeroToHeroStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_HeroToHeroStats proto.InternalMessageInfo

const Default_CMsgDOTARealtimeGameStats_HeroToHeroStats_Victimid int32 = -1

func (m *CMsgDOTARealtimeGameStats_HeroToHeroStats) GetVictimid() int32 {
	if m != nil && m.Victimid != nil {
		return *m.Victimid
	}
	return Default_CMsgDOTARealtimeGameStats_HeroToHeroStats_Victimid
}

func (m *CMsgDOTARealtimeGameStats_HeroToHeroStats) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_HeroToHeroStats) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

type CMsgDOTARealtimeGameStats_AbilityList struct {
	Id                   []int32  `protobuf:"varint,1,rep,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_AbilityList) Reset()         { *m = CMsgDOTARealtimeGameStats_AbilityList{} }
func (m *CMsgDOTARealtimeGameStats_AbilityList) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStats_AbilityList) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStats_AbilityList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 4}
}

func (m *CMsgDOTARealtimeGameStats_AbilityList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityList.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_AbilityList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityList.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_AbilityList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityList.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_AbilityList) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityList.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_AbilityList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_AbilityList proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStats_AbilityList) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

type CMsgDOTARealtimeGameStats_PlayerDetails struct {
	Accountid            *uint32                                      `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Playerid             *int32                                       `protobuf:"varint,2,opt,name=playerid,def=-1" json:"playerid,omitempty"`
	Name                 *string                                      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Team                 *uint32                                      `protobuf:"varint,4,opt,name=team" json:"team,omitempty"`
	Heroid               *uint32                                      `protobuf:"varint,5,opt,name=heroid" json:"heroid,omitempty"`
	Healthpoints         *uint32                                      `protobuf:"varint,6,opt,name=healthpoints" json:"healthpoints,omitempty"`
	Maxhealthpoints      *uint32                                      `protobuf:"varint,7,opt,name=maxhealthpoints" json:"maxhealthpoints,omitempty"`
	Healthregenrate      *float32                                     `protobuf:"fixed32,8,opt,name=healthregenrate" json:"healthregenrate,omitempty"`
	Manapoints           *uint32                                      `protobuf:"varint,9,opt,name=manapoints" json:"manapoints,omitempty"`
	Maxmanapoints        *uint32                                      `protobuf:"varint,10,opt,name=maxmanapoints" json:"maxmanapoints,omitempty"`
	Manaregenrate        *float32                                     `protobuf:"fixed32,11,opt,name=manaregenrate" json:"manaregenrate,omitempty"`
	BaseStrength         *uint32                                      `protobuf:"varint,12,opt,name=base_strength,json=baseStrength" json:"base_strength,omitempty"`
	BaseAgility          *uint32                                      `protobuf:"varint,13,opt,name=base_agility,json=baseAgility" json:"base_agility,omitempty"`
	BaseIntelligence     *uint32                                      `protobuf:"varint,14,opt,name=base_intelligence,json=baseIntelligence" json:"base_intelligence,omitempty"`
	BaseArmor            *int32                                       `protobuf:"varint,15,opt,name=base_armor,json=baseArmor" json:"base_armor,omitempty"`
	BaseMovespeed        *uint32                                      `protobuf:"varint,16,opt,name=base_movespeed,json=baseMovespeed" json:"base_movespeed,omitempty"`
	BaseDamage           *uint32                                      `protobuf:"varint,17,opt,name=base_damage,json=baseDamage" json:"base_damage,omitempty"`
	Strength             *uint32                                      `protobuf:"varint,18,opt,name=strength" json:"strength,omitempty"`
	Agility              *uint32                                      `protobuf:"varint,19,opt,name=agility" json:"agility,omitempty"`
	Intelligence         *uint32                                      `protobuf:"varint,20,opt,name=intelligence" json:"intelligence,omitempty"`
	Armor                *int32                                       `protobuf:"varint,21,opt,name=armor" json:"armor,omitempty"`
	Movespeed            *uint32                                      `protobuf:"varint,22,opt,name=movespeed" json:"movespeed,omitempty"`
	Damage               *uint32                                      `protobuf:"varint,23,opt,name=damage" json:"damage,omitempty"`
	HeroDamage           *uint32                                      `protobuf:"varint,24,opt,name=hero_damage,json=heroDamage" json:"hero_damage,omitempty"`
	TowerDamage          *uint32                                      `protobuf:"varint,25,opt,name=tower_damage,json=towerDamage" json:"tower_damage,omitempty"`
	Abilities            []*CMsgDOTARealtimeGameStats_AbilityDetails  `protobuf:"bytes,26,rep,name=abilities" json:"abilities,omitempty"`
	Level                *uint32                                      `protobuf:"varint,27,opt,name=level" json:"level,omitempty"`
	KillCount            *uint32                                      `protobuf:"varint,28,opt,name=kill_count,json=killCount" json:"kill_count,omitempty"`
	DeathCount           *uint32                                      `protobuf:"varint,29,opt,name=death_count,json=deathCount" json:"death_count,omitempty"`
	AssistsCount         *uint32                                      `protobuf:"varint,30,opt,name=assists_count,json=assistsCount" json:"assists_count,omitempty"`
	DeniesCount          *uint32                                      `protobuf:"varint,31,opt,name=denies_count,json=deniesCount" json:"denies_count,omitempty"`
	LhCount              *uint32                                      `protobuf:"varint,32,opt,name=lh_count,json=lhCount" json:"lh_count,omitempty"`
	HeroHealing          *uint32                                      `protobuf:"varint,33,opt,name=hero_healing,json=heroHealing" json:"hero_healing,omitempty"`
	GoldPerMin           *uint32                                      `protobuf:"varint,34,opt,name=gold_per_min,json=goldPerMin" json:"gold_per_min,omitempty"`
	XpPerMin             *uint32                                      `protobuf:"varint,35,opt,name=xp_per_min,json=xpPerMin" json:"xp_per_min,omitempty"`
	NetGold              *uint32                                      `protobuf:"varint,36,opt,name=net_gold,json=netGold" json:"net_gold,omitempty"`
	Gold                 *uint32                                      `protobuf:"varint,37,opt,name=gold" json:"gold,omitempty"`
	X                    *float32                                     `protobuf:"fixed32,38,opt,name=x" json:"x,omitempty"`
	Y                    *float32                                     `protobuf:"fixed32,39,opt,name=y" json:"y,omitempty"`
	RespawnTime          *int32                                       `protobuf:"varint,40,opt,name=respawn_time,json=respawnTime" json:"respawn_time,omitempty"`
	UltimateCooldown     *uint32                                      `protobuf:"varint,41,opt,name=ultimate_cooldown,json=ultimateCooldown" json:"ultimate_cooldown,omitempty"`
	HasBuyback           *bool                                        `protobuf:"varint,42,opt,name=has_buyback,json=hasBuyback" json:"has_buyback,omitempty"`
	Items                []*CMsgDOTARealtimeGameStats_ItemDetails     `protobuf:"bytes,43,rep,name=items" json:"items,omitempty"`
	Stashitems           []*CMsgDOTARealtimeGameStats_ItemDetails     `protobuf:"bytes,44,rep,name=stashitems" json:"stashitems,omitempty"`
	Itemshoppinglist     []*CMsgDOTARealtimeGameStats_ItemDetails     `protobuf:"bytes,45,rep,name=itemshoppinglist" json:"itemshoppinglist,omitempty"`
	Levelpoints          []*CMsgDOTARealtimeGameStats_AbilityList     `protobuf:"bytes,46,rep,name=levelpoints" json:"levelpoints,omitempty"`
	HeroToHeroStats      []*CMsgDOTARealtimeGameStats_HeroToHeroStats `protobuf:"bytes,47,rep,name=hero_to_hero_stats,json=heroToHeroStats" json:"hero_to_hero_stats,omitempty"`
	HasUltimate          *bool                                        `protobuf:"varint,48,opt,name=has_ultimate,json=hasUltimate" json:"has_ultimate,omitempty"`
	HasUltimateMana      *bool                                        `protobuf:"varint,49,opt,name=has_ultimate_mana,json=hasUltimateMana" json:"has_ultimate_mana,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) Reset() {
	*m = CMsgDOTARealtimeGameStats_PlayerDetails{}
}
func (m *CMsgDOTARealtimeGameStats_PlayerDetails) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStats_PlayerDetails) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStats_PlayerDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 5}
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_PlayerDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_PlayerDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_PlayerDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_PlayerDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_PlayerDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_PlayerDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_PlayerDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_PlayerDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_PlayerDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_PlayerDetails proto.InternalMessageInfo

const Default_CMsgDOTARealtimeGameStats_PlayerDetails_Playerid int32 = -1

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetPlayerid() int32 {
	if m != nil && m.Playerid != nil {
		return *m.Playerid
	}
	return Default_CMsgDOTARealtimeGameStats_PlayerDetails_Playerid
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetHeroid() uint32 {
	if m != nil && m.Heroid != nil {
		return *m.Heroid
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetHealthpoints() uint32 {
	if m != nil && m.Healthpoints != nil {
		return *m.Healthpoints
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetMaxhealthpoints() uint32 {
	if m != nil && m.Maxhealthpoints != nil {
		return *m.Maxhealthpoints
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetHealthregenrate() float32 {
	if m != nil && m.Healthregenrate != nil {
		return *m.Healthregenrate
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetManapoints() uint32 {
	if m != nil && m.Manapoints != nil {
		return *m.Manapoints
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetMaxmanapoints() uint32 {
	if m != nil && m.Maxmanapoints != nil {
		return *m.Maxmanapoints
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetManaregenrate() float32 {
	if m != nil && m.Manaregenrate != nil {
		return *m.Manaregenrate
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetBaseStrength() uint32 {
	if m != nil && m.BaseStrength != nil {
		return *m.BaseStrength
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetBaseAgility() uint32 {
	if m != nil && m.BaseAgility != nil {
		return *m.BaseAgility
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetBaseIntelligence() uint32 {
	if m != nil && m.BaseIntelligence != nil {
		return *m.BaseIntelligence
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetBaseArmor() int32 {
	if m != nil && m.BaseArmor != nil {
		return *m.BaseArmor
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetBaseMovespeed() uint32 {
	if m != nil && m.BaseMovespeed != nil {
		return *m.BaseMovespeed
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetBaseDamage() uint32 {
	if m != nil && m.BaseDamage != nil {
		return *m.BaseDamage
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetStrength() uint32 {
	if m != nil && m.Strength != nil {
		return *m.Strength
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetAgility() uint32 {
	if m != nil && m.Agility != nil {
		return *m.Agility
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetIntelligence() uint32 {
	if m != nil && m.Intelligence != nil {
		return *m.Intelligence
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetArmor() int32 {
	if m != nil && m.Armor != nil {
		return *m.Armor
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetMovespeed() uint32 {
	if m != nil && m.Movespeed != nil {
		return *m.Movespeed
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetDamage() uint32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetHeroDamage() uint32 {
	if m != nil && m.HeroDamage != nil {
		return *m.HeroDamage
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetTowerDamage() uint32 {
	if m != nil && m.TowerDamage != nil {
		return *m.TowerDamage
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetAbilities() []*CMsgDOTARealtimeGameStats_AbilityDetails {
	if m != nil {
		return m.Abilities
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetKillCount() uint32 {
	if m != nil && m.KillCount != nil {
		return *m.KillCount
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetDeathCount() uint32 {
	if m != nil && m.DeathCount != nil {
		return *m.DeathCount
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetAssistsCount() uint32 {
	if m != nil && m.AssistsCount != nil {
		return *m.AssistsCount
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetDeniesCount() uint32 {
	if m != nil && m.DeniesCount != nil {
		return *m.DeniesCount
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetLhCount() uint32 {
	if m != nil && m.LhCount != nil {
		return *m.LhCount
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetHeroHealing() uint32 {
	if m != nil && m.HeroHealing != nil {
		return *m.HeroHealing
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetGoldPerMin() uint32 {
	if m != nil && m.GoldPerMin != nil {
		return *m.GoldPerMin
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetXpPerMin() uint32 {
	if m != nil && m.XpPerMin != nil {
		return *m.XpPerMin
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetNetGold() uint32 {
	if m != nil && m.NetGold != nil {
		return *m.NetGold
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetGold() uint32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetRespawnTime() int32 {
	if m != nil && m.RespawnTime != nil {
		return *m.RespawnTime
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetUltimateCooldown() uint32 {
	if m != nil && m.UltimateCooldown != nil {
		return *m.UltimateCooldown
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetHasBuyback() bool {
	if m != nil && m.HasBuyback != nil {
		return *m.HasBuyback
	}
	return false
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetItems() []*CMsgDOTARealtimeGameStats_ItemDetails {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetStashitems() []*CMsgDOTARealtimeGameStats_ItemDetails {
	if m != nil {
		return m.Stashitems
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetItemshoppinglist() []*CMsgDOTARealtimeGameStats_ItemDetails {
	if m != nil {
		return m.Itemshoppinglist
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetLevelpoints() []*CMsgDOTARealtimeGameStats_AbilityList {
	if m != nil {
		return m.Levelpoints
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetHeroToHeroStats() []*CMsgDOTARealtimeGameStats_HeroToHeroStats {
	if m != nil {
		return m.HeroToHeroStats
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetHasUltimate() bool {
	if m != nil && m.HasUltimate != nil {
		return *m.HasUltimate
	}
	return false
}

func (m *CMsgDOTARealtimeGameStats_PlayerDetails) GetHasUltimateMana() bool {
	if m != nil && m.HasUltimateMana != nil {
		return *m.HasUltimateMana
	}
	return false
}

type CMsgDOTARealtimeGameStats_BuildingDetails struct {
	Team                 *uint32  `protobuf:"varint,2,opt,name=team" json:"team,omitempty"`
	Heading              *float32 `protobuf:"fixed32,3,opt,name=heading" json:"heading,omitempty"`
	Lane                 *uint32  `protobuf:"varint,4,opt,name=lane" json:"lane,omitempty"`
	Tier                 *uint32  `protobuf:"varint,5,opt,name=tier" json:"tier,omitempty"`
	Type                 *uint32  `protobuf:"varint,6,opt,name=type" json:"type,omitempty"`
	X                    *float32 `protobuf:"fixed32,7,opt,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,8,opt,name=y" json:"y,omitempty"`
	Destroyed            *bool    `protobuf:"varint,9,opt,name=destroyed" json:"destroyed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_BuildingDetails) Reset() {
	*m = CMsgDOTARealtimeGameStats_BuildingDetails{}
}
func (m *CMsgDOTARealtimeGameStats_BuildingDetails) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARealtimeGameStats_BuildingDetails) ProtoMessage() {}
func (*CMsgDOTARealtimeGameStats_BuildingDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 6}
}

func (m *CMsgDOTARealtimeGameStats_BuildingDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_BuildingDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_BuildingDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_BuildingDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_BuildingDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_BuildingDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_BuildingDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_BuildingDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_BuildingDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_BuildingDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_BuildingDetails proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStats_BuildingDetails) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_BuildingDetails) GetHeading() float32 {
	if m != nil && m.Heading != nil {
		return *m.Heading
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_BuildingDetails) GetLane() uint32 {
	if m != nil && m.Lane != nil {
		return *m.Lane
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_BuildingDetails) GetTier() uint32 {
	if m != nil && m.Tier != nil {
		return *m.Tier
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_BuildingDetails) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_BuildingDetails) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_BuildingDetails) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_BuildingDetails) GetDestroyed() bool {
	if m != nil && m.Destroyed != nil {
		return *m.Destroyed
	}
	return false
}

type CMsgDOTARealtimeGameStats_KillDetails struct {
	PlayerId             *int32   `protobuf:"varint,1,opt,name=player_id,json=playerId,def=-1" json:"player_id,omitempty"`
	DeathTime            *int32   `protobuf:"varint,2,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	KillerPlayerId       *int32   `protobuf:"varint,3,opt,name=killer_player_id,json=killerPlayerId,def=-1" json:"killer_player_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_KillDetails) Reset()         { *m = CMsgDOTARealtimeGameStats_KillDetails{} }
func (m *CMsgDOTARealtimeGameStats_KillDetails) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStats_KillDetails) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStats_KillDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 7}
}

func (m *CMsgDOTARealtimeGameStats_KillDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_KillDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_KillDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_KillDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_KillDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_KillDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_KillDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_KillDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_KillDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_KillDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_KillDetails proto.InternalMessageInfo

const Default_CMsgDOTARealtimeGameStats_KillDetails_PlayerId int32 = -1
const Default_CMsgDOTARealtimeGameStats_KillDetails_KillerPlayerId int32 = -1

func (m *CMsgDOTARealtimeGameStats_KillDetails) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return Default_CMsgDOTARealtimeGameStats_KillDetails_PlayerId
}

func (m *CMsgDOTARealtimeGameStats_KillDetails) GetDeathTime() int32 {
	if m != nil && m.DeathTime != nil {
		return *m.DeathTime
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_KillDetails) GetKillerPlayerId() int32 {
	if m != nil && m.KillerPlayerId != nil {
		return *m.KillerPlayerId
	}
	return Default_CMsgDOTARealtimeGameStats_KillDetails_KillerPlayerId
}

type CMsgDOTARealtimeGameStats_BroadcasterDetails struct {
	PlayerId             *int32   `protobuf:"varint,1,opt,name=player_id,json=playerId,def=-1" json:"player_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_BroadcasterDetails) Reset() {
	*m = CMsgDOTARealtimeGameStats_BroadcasterDetails{}
}
func (m *CMsgDOTARealtimeGameStats_BroadcasterDetails) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARealtimeGameStats_BroadcasterDetails) ProtoMessage() {}
func (*CMsgDOTARealtimeGameStats_BroadcasterDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 8}
}

func (m *CMsgDOTARealtimeGameStats_BroadcasterDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_BroadcasterDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_BroadcasterDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_BroadcasterDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_BroadcasterDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_BroadcasterDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_BroadcasterDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_BroadcasterDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_BroadcasterDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_BroadcasterDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_BroadcasterDetails proto.InternalMessageInfo

const Default_CMsgDOTARealtimeGameStats_BroadcasterDetails_PlayerId int32 = -1

func (m *CMsgDOTARealtimeGameStats_BroadcasterDetails) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return Default_CMsgDOTARealtimeGameStats_BroadcasterDetails_PlayerId
}

type CMsgDOTARealtimeGameStats_PickBanDetails struct {
	Hero                 *uint32  `protobuf:"varint,1,opt,name=hero" json:"hero,omitempty"`
	Team                 *uint32  `protobuf:"varint,2,opt,name=team" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_PickBanDetails) Reset() {
	*m = CMsgDOTARealtimeGameStats_PickBanDetails{}
}
func (m *CMsgDOTARealtimeGameStats_PickBanDetails) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStats_PickBanDetails) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStats_PickBanDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 9}
}

func (m *CMsgDOTARealtimeGameStats_PickBanDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_PickBanDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_PickBanDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_PickBanDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_PickBanDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_PickBanDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_PickBanDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_PickBanDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_PickBanDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_PickBanDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_PickBanDetails proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStats_PickBanDetails) GetHero() uint32 {
	if m != nil && m.Hero != nil {
		return *m.Hero
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_PickBanDetails) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

type CMsgDOTARealtimeGameStats_MatchDetails struct {
	ServerSteamId        *uint64                                         `protobuf:"fixed64,1,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	MatchId              *uint64                                         `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Timestamp            *uint32                                         `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	TimeOfDay            *float32                                        `protobuf:"fixed32,4,opt,name=time_of_day,json=timeOfDay" json:"time_of_day,omitempty"`
	IsNightstalkerNight  *bool                                           `protobuf:"varint,5,opt,name=is_nightstalker_night,json=isNightstalkerNight" json:"is_nightstalker_night,omitempty"`
	GameTime             *int32                                          `protobuf:"varint,6,opt,name=game_time,json=gameTime" json:"game_time,omitempty"`
	GameState            *uint32                                         `protobuf:"varint,19,opt,name=game_state,json=gameState" json:"game_state,omitempty"`
	TeamidRadiant        *uint32                                         `protobuf:"varint,8,opt,name=teamid_radiant,json=teamidRadiant" json:"teamid_radiant,omitempty"`
	TeamidDire           *uint32                                         `protobuf:"varint,9,opt,name=teamid_dire,json=teamidDire" json:"teamid_dire,omitempty"`
	Picks                []*CMsgDOTARealtimeGameStats_PickBanDetails     `protobuf:"bytes,10,rep,name=picks" json:"picks,omitempty"`
	Bans                 []*CMsgDOTARealtimeGameStats_PickBanDetails     `protobuf:"bytes,11,rep,name=bans" json:"bans,omitempty"`
	Kills                []*CMsgDOTARealtimeGameStats_KillDetails        `protobuf:"bytes,12,rep,name=kills" json:"kills,omitempty"`
	Broadcasters         []*CMsgDOTARealtimeGameStats_BroadcasterDetails `protobuf:"bytes,13,rep,name=broadcasters" json:"broadcasters,omitempty"`
	GameMode             *uint32                                         `protobuf:"varint,14,opt,name=game_mode,json=gameMode" json:"game_mode,omitempty"`
	LeagueId             *uint32                                         `protobuf:"varint,15,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	LeagueNodeId         *uint32                                         `protobuf:"varint,18,opt,name=league_node_id,json=leagueNodeId" json:"league_node_id,omitempty"`
	SingleTeam           *bool                                           `protobuf:"varint,16,opt,name=single_team,json=singleTeam" json:"single_team,omitempty"`
	CheersPeak           *uint32                                         `protobuf:"varint,17,opt,name=cheers_peak,json=cheersPeak" json:"cheers_peak,omitempty"`
	LobbyType            *uint32                                         `protobuf:"varint,20,opt,name=lobby_type,json=lobbyType" json:"lobby_type,omitempty"`
	StartTimestamp       *uint32                                         `protobuf:"varint,21,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) Reset() {
	*m = CMsgDOTARealtimeGameStats_MatchDetails{}
}
func (m *CMsgDOTARealtimeGameStats_MatchDetails) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStats_MatchDetails) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStats_MatchDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 10}
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_MatchDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_MatchDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_MatchDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_MatchDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_MatchDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_MatchDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_MatchDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_MatchDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_MatchDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_MatchDetails proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetServerSteamId() uint64 {
	if m != nil && m.ServerSteamId != nil {
		return *m.ServerSteamId
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetTimeOfDay() float32 {
	if m != nil && m.TimeOfDay != nil {
		return *m.TimeOfDay
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetIsNightstalkerNight() bool {
	if m != nil && m.IsNightstalkerNight != nil {
		return *m.IsNightstalkerNight
	}
	return false
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetGameTime() int32 {
	if m != nil && m.GameTime != nil {
		return *m.GameTime
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetGameState() uint32 {
	if m != nil && m.GameState != nil {
		return *m.GameState
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetTeamidRadiant() uint32 {
	if m != nil && m.TeamidRadiant != nil {
		return *m.TeamidRadiant
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetTeamidDire() uint32 {
	if m != nil && m.TeamidDire != nil {
		return *m.TeamidDire
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetPicks() []*CMsgDOTARealtimeGameStats_PickBanDetails {
	if m != nil {
		return m.Picks
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetBans() []*CMsgDOTARealtimeGameStats_PickBanDetails {
	if m != nil {
		return m.Bans
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetKills() []*CMsgDOTARealtimeGameStats_KillDetails {
	if m != nil {
		return m.Kills
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetBroadcasters() []*CMsgDOTARealtimeGameStats_BroadcasterDetails {
	if m != nil {
		return m.Broadcasters
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetGameMode() uint32 {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetLeagueNodeId() uint32 {
	if m != nil && m.LeagueNodeId != nil {
		return *m.LeagueNodeId
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetSingleTeam() bool {
	if m != nil && m.SingleTeam != nil {
		return *m.SingleTeam
	}
	return false
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetCheersPeak() uint32 {
	if m != nil && m.CheersPeak != nil {
		return *m.CheersPeak
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetLobbyType() uint32 {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStats_MatchDetails) GetStartTimestamp() uint32 {
	if m != nil && m.StartTimestamp != nil {
		return *m.StartTimestamp
	}
	return 0
}

type CMsgDOTARealtimeGameStats_GraphData struct {
	GraphGold            []int32                                                  `protobuf:"varint,1,rep,name=graph_gold,json=graphGold" json:"graph_gold,omitempty"`
	GraphXp              []int32                                                  `protobuf:"varint,2,rep,name=graph_xp,json=graphXp" json:"graph_xp,omitempty"`
	GraphKill            []int32                                                  `protobuf:"varint,3,rep,name=graph_kill,json=graphKill" json:"graph_kill,omitempty"`
	GraphTower           []int32                                                  `protobuf:"varint,4,rep,name=graph_tower,json=graphTower" json:"graph_tower,omitempty"`
	GraphRax             []int32                                                  `protobuf:"varint,5,rep,name=graph_rax,json=graphRax" json:"graph_rax,omitempty"`
	TeamLocStats         []*CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats `protobuf:"bytes,6,rep,name=team_loc_stats,json=teamLocStats" json:"team_loc_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_GraphData) Reset()         { *m = CMsgDOTARealtimeGameStats_GraphData{} }
func (m *CMsgDOTARealtimeGameStats_GraphData) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStats_GraphData) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStats_GraphData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 11}
}

func (m *CMsgDOTARealtimeGameStats_GraphData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_GraphData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_GraphData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_GraphData) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_GraphData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStats_GraphData) GetGraphGold() []int32 {
	if m != nil {
		return m.GraphGold
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_GraphData) GetGraphXp() []int32 {
	if m != nil {
		return m.GraphXp
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_GraphData) GetGraphKill() []int32 {
	if m != nil {
		return m.GraphKill
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_GraphData) GetGraphTower() []int32 {
	if m != nil {
		return m.GraphTower
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_GraphData) GetGraphRax() []int32 {
	if m != nil {
		return m.GraphRax
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStats_GraphData) GetTeamLocStats() []*CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats {
	if m != nil {
		return m.TeamLocStats
	}
	return nil
}

type CMsgDOTARealtimeGameStats_GraphData_LocationStats struct {
	Stats                []int32  `protobuf:"varint,1,rep,name=stats" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_GraphData_LocationStats) Reset() {
	*m = CMsgDOTARealtimeGameStats_GraphData_LocationStats{}
}
func (m *CMsgDOTARealtimeGameStats_GraphData_LocationStats) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARealtimeGameStats_GraphData_LocationStats) ProtoMessage() {}
func (*CMsgDOTARealtimeGameStats_GraphData_LocationStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 11, 0}
}

func (m *CMsgDOTARealtimeGameStats_GraphData_LocationStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_LocationStats.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_GraphData_LocationStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_LocationStats.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_GraphData_LocationStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_LocationStats.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_GraphData_LocationStats) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_LocationStats.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_GraphData_LocationStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_LocationStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_LocationStats proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStats_GraphData_LocationStats) GetStats() []int32 {
	if m != nil {
		return m.Stats
	}
	return nil
}

type CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats struct {
	LocStats             []*CMsgDOTARealtimeGameStats_GraphData_LocationStats `protobuf:"bytes,1,rep,name=loc_stats,json=locStats" json:"loc_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats) Reset() {
	*m = CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats{}
}
func (m *CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats) ProtoMessage() {}
func (*CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{27, 11, 1}
}

func (m *CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats.Size(m)
}
func (m *CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats) GetLocStats() []*CMsgDOTARealtimeGameStats_GraphData_LocationStats {
	if m != nil {
		return m.LocStats
	}
	return nil
}

type CMsgDOTARealtimeGameStatsTerse struct {
	Match                *CMsgDOTARealtimeGameStatsTerse_MatchDetails      `protobuf:"bytes,1,opt,name=match" json:"match,omitempty"`
	Teams                []*CMsgDOTARealtimeGameStatsTerse_TeamDetails     `protobuf:"bytes,2,rep,name=teams" json:"teams,omitempty"`
	Buildings            []*CMsgDOTARealtimeGameStatsTerse_BuildingDetails `protobuf:"bytes,3,rep,name=buildings" json:"buildings,omitempty"`
	GraphData            *CMsgDOTARealtimeGameStatsTerse_GraphData         `protobuf:"bytes,4,opt,name=graph_data,json=graphData" json:"graph_data,omitempty"`
	DeltaFrame           *bool                                             `protobuf:"varint,5,opt,name=delta_frame,json=deltaFrame" json:"delta_frame,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *CMsgDOTARealtimeGameStatsTerse) Reset()         { *m = CMsgDOTARealtimeGameStatsTerse{} }
func (m *CMsgDOTARealtimeGameStatsTerse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStatsTerse) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStatsTerse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{28}
}

func (m *CMsgDOTARealtimeGameStatsTerse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStatsTerse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStatsTerse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStatsTerse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse.Size(m)
}
func (m *CMsgDOTARealtimeGameStatsTerse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStatsTerse) GetMatch() *CMsgDOTARealtimeGameStatsTerse_MatchDetails {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStatsTerse) GetTeams() []*CMsgDOTARealtimeGameStatsTerse_TeamDetails {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStatsTerse) GetBuildings() []*CMsgDOTARealtimeGameStatsTerse_BuildingDetails {
	if m != nil {
		return m.Buildings
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStatsTerse) GetGraphData() *CMsgDOTARealtimeGameStatsTerse_GraphData {
	if m != nil {
		return m.GraphData
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStatsTerse) GetDeltaFrame() bool {
	if m != nil && m.DeltaFrame != nil {
		return *m.DeltaFrame
	}
	return false
}

type CMsgDOTARealtimeGameStatsTerse_TeamDetails struct {
	TeamNumber           *uint32                                         `protobuf:"varint,1,opt,name=team_number,json=teamNumber" json:"team_number,omitempty"`
	TeamId               *uint32                                         `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	TeamName             *string                                         `protobuf:"bytes,3,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	TeamTag              *string                                         `protobuf:"bytes,8,opt,name=team_tag,json=teamTag" json:"team_tag,omitempty"`
	TeamLogo             *uint64                                         `protobuf:"fixed64,4,opt,name=team_logo,json=teamLogo" json:"team_logo,omitempty"`
	Score                *uint32                                         `protobuf:"varint,5,opt,name=score" json:"score,omitempty"`
	NetWorth             *uint32                                         `protobuf:"varint,7,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	TeamLogoUrl          *string                                         `protobuf:"bytes,9,opt,name=team_logo_url,json=teamLogoUrl" json:"team_logo_url,omitempty"`
	Players              []*CMsgDOTARealtimeGameStatsTerse_PlayerDetails `protobuf:"bytes,6,rep,name=players" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) Reset() {
	*m = CMsgDOTARealtimeGameStatsTerse_TeamDetails{}
}
func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARealtimeGameStatsTerse_TeamDetails) ProtoMessage() {}
func (*CMsgDOTARealtimeGameStatsTerse_TeamDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{28, 0}
}

func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_TeamDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_TeamDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_TeamDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_TeamDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_TeamDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_TeamDetails proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) GetTeamNumber() uint32 {
	if m != nil && m.TeamNumber != nil {
		return *m.TeamNumber
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) GetTeamTag() string {
	if m != nil && m.TeamTag != nil {
		return *m.TeamTag
	}
	return ""
}

func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) GetTeamLogo() uint64 {
	if m != nil && m.TeamLogo != nil {
		return *m.TeamLogo
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) GetNetWorth() uint32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) GetTeamLogoUrl() string {
	if m != nil && m.TeamLogoUrl != nil {
		return *m.TeamLogoUrl
	}
	return ""
}

func (m *CMsgDOTARealtimeGameStatsTerse_TeamDetails) GetPlayers() []*CMsgDOTARealtimeGameStatsTerse_PlayerDetails {
	if m != nil {
		return m.Players
	}
	return nil
}

type CMsgDOTARealtimeGameStatsTerse_PlayerDetails struct {
	Accountid            *uint32  `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Playerid             *int32   `protobuf:"varint,2,opt,name=playerid,def=-1" json:"playerid,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Team                 *uint32  `protobuf:"varint,4,opt,name=team" json:"team,omitempty"`
	Heroid               *uint32  `protobuf:"varint,5,opt,name=heroid" json:"heroid,omitempty"`
	Level                *uint32  `protobuf:"varint,6,opt,name=level" json:"level,omitempty"`
	KillCount            *uint32  `protobuf:"varint,7,opt,name=kill_count,json=killCount" json:"kill_count,omitempty"`
	DeathCount           *uint32  `protobuf:"varint,8,opt,name=death_count,json=deathCount" json:"death_count,omitempty"`
	AssistsCount         *uint32  `protobuf:"varint,9,opt,name=assists_count,json=assistsCount" json:"assists_count,omitempty"`
	DeniesCount          *uint32  `protobuf:"varint,10,opt,name=denies_count,json=deniesCount" json:"denies_count,omitempty"`
	LhCount              *uint32  `protobuf:"varint,11,opt,name=lh_count,json=lhCount" json:"lh_count,omitempty"`
	Gold                 *uint32  `protobuf:"varint,12,opt,name=gold" json:"gold,omitempty"`
	X                    *float32 `protobuf:"fixed32,13,opt,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,14,opt,name=y" json:"y,omitempty"`
	NetWorth             *uint32  `protobuf:"varint,15,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	Abilities            []int32  `protobuf:"varint,16,rep,name=abilities" json:"abilities,omitempty"`
	Items                []int32  `protobuf:"varint,17,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) Reset() {
	*m = CMsgDOTARealtimeGameStatsTerse_PlayerDetails{}
}
func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARealtimeGameStatsTerse_PlayerDetails) ProtoMessage() {}
func (*CMsgDOTARealtimeGameStatsTerse_PlayerDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{28, 1}
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PlayerDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PlayerDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PlayerDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PlayerDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PlayerDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PlayerDetails proto.InternalMessageInfo

const Default_CMsgDOTARealtimeGameStatsTerse_PlayerDetails_Playerid int32 = -1

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetPlayerid() int32 {
	if m != nil && m.Playerid != nil {
		return *m.Playerid
	}
	return Default_CMsgDOTARealtimeGameStatsTerse_PlayerDetails_Playerid
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetHeroid() uint32 {
	if m != nil && m.Heroid != nil {
		return *m.Heroid
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetKillCount() uint32 {
	if m != nil && m.KillCount != nil {
		return *m.KillCount
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetDeathCount() uint32 {
	if m != nil && m.DeathCount != nil {
		return *m.DeathCount
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetAssistsCount() uint32 {
	if m != nil && m.AssistsCount != nil {
		return *m.AssistsCount
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetDeniesCount() uint32 {
	if m != nil && m.DeniesCount != nil {
		return *m.DeniesCount
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetLhCount() uint32 {
	if m != nil && m.LhCount != nil {
		return *m.LhCount
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetGold() uint32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetNetWorth() uint32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetAbilities() []int32 {
	if m != nil {
		return m.Abilities
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStatsTerse_PlayerDetails) GetItems() []int32 {
	if m != nil {
		return m.Items
	}
	return nil
}

type CMsgDOTARealtimeGameStatsTerse_BuildingDetails struct {
	Team                 *uint32  `protobuf:"varint,1,opt,name=team" json:"team,omitempty"`
	Heading              *float32 `protobuf:"fixed32,2,opt,name=heading" json:"heading,omitempty"`
	Type                 *uint32  `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Lane                 *uint32  `protobuf:"varint,4,opt,name=lane" json:"lane,omitempty"`
	Tier                 *uint32  `protobuf:"varint,5,opt,name=tier" json:"tier,omitempty"`
	X                    *float32 `protobuf:"fixed32,6,opt,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,7,opt,name=y" json:"y,omitempty"`
	Destroyed            *bool    `protobuf:"varint,8,opt,name=destroyed" json:"destroyed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) Reset() {
	*m = CMsgDOTARealtimeGameStatsTerse_BuildingDetails{}
}
func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARealtimeGameStatsTerse_BuildingDetails) ProtoMessage() {}
func (*CMsgDOTARealtimeGameStatsTerse_BuildingDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{28, 2}
}

func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_BuildingDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_BuildingDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_BuildingDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_BuildingDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_BuildingDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_BuildingDetails proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) GetHeading() float32 {
	if m != nil && m.Heading != nil {
		return *m.Heading
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) GetLane() uint32 {
	if m != nil && m.Lane != nil {
		return *m.Lane
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) GetTier() uint32 {
	if m != nil && m.Tier != nil {
		return *m.Tier
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_BuildingDetails) GetDestroyed() bool {
	if m != nil && m.Destroyed != nil {
		return *m.Destroyed
	}
	return false
}

type CMsgDOTARealtimeGameStatsTerse_PickBanDetails struct {
	Hero                 *uint32  `protobuf:"varint,1,opt,name=hero" json:"hero,omitempty"`
	Team                 *uint32  `protobuf:"varint,2,opt,name=team" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStatsTerse_PickBanDetails) Reset() {
	*m = CMsgDOTARealtimeGameStatsTerse_PickBanDetails{}
}
func (m *CMsgDOTARealtimeGameStatsTerse_PickBanDetails) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARealtimeGameStatsTerse_PickBanDetails) ProtoMessage() {}
func (*CMsgDOTARealtimeGameStatsTerse_PickBanDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{28, 3}
}

func (m *CMsgDOTARealtimeGameStatsTerse_PickBanDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PickBanDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStatsTerse_PickBanDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PickBanDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStatsTerse_PickBanDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PickBanDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStatsTerse_PickBanDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PickBanDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStatsTerse_PickBanDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PickBanDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_PickBanDetails proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStatsTerse_PickBanDetails) GetHero() uint32 {
	if m != nil && m.Hero != nil {
		return *m.Hero
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_PickBanDetails) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

type CMsgDOTARealtimeGameStatsTerse_MatchDetails struct {
	ServerSteamId              *uint64                                          `protobuf:"fixed64,1,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	MatchId                    *uint64                                          `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Timestamp                  *uint32                                          `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	GameTime                   *int32                                           `protobuf:"varint,4,opt,name=game_time,json=gameTime" json:"game_time,omitempty"`
	SteamBroadcasterAccountIds []uint32                                         `protobuf:"varint,6,rep,name=steam_broadcaster_account_ids,json=steamBroadcasterAccountIds" json:"steam_broadcaster_account_ids,omitempty"`
	GameMode                   *uint32                                          `protobuf:"varint,7,opt,name=game_mode,json=gameMode" json:"game_mode,omitempty"`
	LeagueId                   *uint32                                          `protobuf:"varint,8,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	LeagueNodeId               *uint32                                          `protobuf:"varint,9,opt,name=league_node_id,json=leagueNodeId" json:"league_node_id,omitempty"`
	GameState                  *uint32                                          `protobuf:"varint,10,opt,name=game_state,json=gameState" json:"game_state,omitempty"`
	Picks                      []*CMsgDOTARealtimeGameStatsTerse_PickBanDetails `protobuf:"bytes,11,rep,name=picks" json:"picks,omitempty"`
	Bans                       []*CMsgDOTARealtimeGameStatsTerse_PickBanDetails `protobuf:"bytes,12,rep,name=bans" json:"bans,omitempty"`
	LobbyType                  *uint32                                          `protobuf:"varint,13,opt,name=lobby_type,json=lobbyType" json:"lobby_type,omitempty"`
	StartTimestamp             *uint32                                          `protobuf:"varint,14,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                                         `json:"-"`
	XXX_unrecognized           []byte                                           `json:"-"`
	XXX_sizecache              int32                                            `json:"-"`
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) Reset() {
	*m = CMsgDOTARealtimeGameStatsTerse_MatchDetails{}
}
func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARealtimeGameStatsTerse_MatchDetails) ProtoMessage() {}
func (*CMsgDOTARealtimeGameStatsTerse_MatchDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{28, 4}
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_MatchDetails.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_MatchDetails.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_MatchDetails.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_MatchDetails.Size(m)
}
func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_MatchDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_MatchDetails proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetServerSteamId() uint64 {
	if m != nil && m.ServerSteamId != nil {
		return *m.ServerSteamId
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetGameTime() int32 {
	if m != nil && m.GameTime != nil {
		return *m.GameTime
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetSteamBroadcasterAccountIds() []uint32 {
	if m != nil {
		return m.SteamBroadcasterAccountIds
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetGameMode() uint32 {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetLeagueNodeId() uint32 {
	if m != nil && m.LeagueNodeId != nil {
		return *m.LeagueNodeId
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetGameState() uint32 {
	if m != nil && m.GameState != nil {
		return *m.GameState
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetPicks() []*CMsgDOTARealtimeGameStatsTerse_PickBanDetails {
	if m != nil {
		return m.Picks
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetBans() []*CMsgDOTARealtimeGameStatsTerse_PickBanDetails {
	if m != nil {
		return m.Bans
	}
	return nil
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetLobbyType() uint32 {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return 0
}

func (m *CMsgDOTARealtimeGameStatsTerse_MatchDetails) GetStartTimestamp() uint32 {
	if m != nil && m.StartTimestamp != nil {
		return *m.StartTimestamp
	}
	return 0
}

type CMsgDOTARealtimeGameStatsTerse_GraphData struct {
	GraphGold            []int32  `protobuf:"varint,1,rep,name=graph_gold,json=graphGold" json:"graph_gold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTARealtimeGameStatsTerse_GraphData) Reset() {
	*m = CMsgDOTARealtimeGameStatsTerse_GraphData{}
}
func (m *CMsgDOTARealtimeGameStatsTerse_GraphData) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARealtimeGameStatsTerse_GraphData) ProtoMessage()    {}
func (*CMsgDOTARealtimeGameStatsTerse_GraphData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{28, 5}
}

func (m *CMsgDOTARealtimeGameStatsTerse_GraphData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_GraphData.Unmarshal(m, b)
}
func (m *CMsgDOTARealtimeGameStatsTerse_GraphData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_GraphData.Marshal(b, m, deterministic)
}
func (m *CMsgDOTARealtimeGameStatsTerse_GraphData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_GraphData.Merge(m, src)
}
func (m *CMsgDOTARealtimeGameStatsTerse_GraphData) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_GraphData.Size(m)
}
func (m *CMsgDOTARealtimeGameStatsTerse_GraphData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_GraphData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTARealtimeGameStatsTerse_GraphData proto.InternalMessageInfo

func (m *CMsgDOTARealtimeGameStatsTerse_GraphData) GetGraphGold() []int32 {
	if m != nil {
		return m.GraphGold
	}
	return nil
}

type CMsgDOTABroadcastTimelineEvent struct {
	Event                *EBroadcastTimelineEvent `protobuf:"varint,1,opt,name=event,enum=protocol.EBroadcastTimelineEvent,def=1" json:"event,omitempty"`
	Timestamp            *uint32                  `protobuf:"fixed32,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Data                 *uint32                  `protobuf:"varint,3,opt,name=data" json:"data,omitempty"`
	StringData           *string                  `protobuf:"bytes,4,opt,name=string_data,json=stringData" json:"string_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CMsgDOTABroadcastTimelineEvent) Reset()         { *m = CMsgDOTABroadcastTimelineEvent{} }
func (m *CMsgDOTABroadcastTimelineEvent) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTABroadcastTimelineEvent) ProtoMessage()    {}
func (*CMsgDOTABroadcastTimelineEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{29}
}

func (m *CMsgDOTABroadcastTimelineEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTABroadcastTimelineEvent.Unmarshal(m, b)
}
func (m *CMsgDOTABroadcastTimelineEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTABroadcastTimelineEvent.Marshal(b, m, deterministic)
}
func (m *CMsgDOTABroadcastTimelineEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTABroadcastTimelineEvent.Merge(m, src)
}
func (m *CMsgDOTABroadcastTimelineEvent) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTABroadcastTimelineEvent.Size(m)
}
func (m *CMsgDOTABroadcastTimelineEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTABroadcastTimelineEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTABroadcastTimelineEvent proto.InternalMessageInfo

const Default_CMsgDOTABroadcastTimelineEvent_Event EBroadcastTimelineEvent = EBroadcastTimelineEvent_EBroadcastTimelineEvent_MatchStarted

func (m *CMsgDOTABroadcastTimelineEvent) GetEvent() EBroadcastTimelineEvent {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return Default_CMsgDOTABroadcastTimelineEvent_Event
}

func (m *CMsgDOTABroadcastTimelineEvent) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTABroadcastTimelineEvent) GetData() uint32 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

func (m *CMsgDOTABroadcastTimelineEvent) GetStringData() string {
	if m != nil && m.StringData != nil {
		return *m.StringData
	}
	return ""
}

type CMsgGCToClientMatchGroupsVersion struct {
	MatchgroupsVersion   *uint32  `protobuf:"varint,1,opt,name=matchgroups_version,json=matchgroupsVersion" json:"matchgroups_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGCToClientMatchGroupsVersion) Reset()         { *m = CMsgGCToClientMatchGroupsVersion{} }
func (m *CMsgGCToClientMatchGroupsVersion) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToClientMatchGroupsVersion) ProtoMessage()    {}
func (*CMsgGCToClientMatchGroupsVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{30}
}

func (m *CMsgGCToClientMatchGroupsVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCToClientMatchGroupsVersion.Unmarshal(m, b)
}
func (m *CMsgGCToClientMatchGroupsVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCToClientMatchGroupsVersion.Marshal(b, m, deterministic)
}
func (m *CMsgGCToClientMatchGroupsVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCToClientMatchGroupsVersion.Merge(m, src)
}
func (m *CMsgGCToClientMatchGroupsVersion) XXX_Size() int {
	return xxx_messageInfo_CMsgGCToClientMatchGroupsVersion.Size(m)
}
func (m *CMsgGCToClientMatchGroupsVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCToClientMatchGroupsVersion.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCToClientMatchGroupsVersion proto.InternalMessageInfo

func (m *CMsgGCToClientMatchGroupsVersion) GetMatchgroupsVersion() uint32 {
	if m != nil && m.MatchgroupsVersion != nil {
		return *m.MatchgroupsVersion
	}
	return 0
}

type CMsgDOTASDOHeroStatsHistory struct {
	MatchId              *uint64  `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	GameMode             *uint32  `protobuf:"varint,2,opt,name=game_mode,json=gameMode" json:"game_mode,omitempty"`
	LobbyType            *uint32  `protobuf:"varint,3,opt,name=lobby_type,json=lobbyType" json:"lobby_type,omitempty"`
	StartTime            *uint32  `protobuf:"varint,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Won                  *bool    `protobuf:"varint,5,opt,name=won" json:"won,omitempty"`
	Gpm                  *uint32  `protobuf:"varint,6,opt,name=gpm" json:"gpm,omitempty"`
	Xpm                  *uint32  `protobuf:"varint,7,opt,name=xpm" json:"xpm,omitempty"`
	Kills                *uint32  `protobuf:"varint,8,opt,name=kills" json:"kills,omitempty"`
	Deaths               *uint32  `protobuf:"varint,9,opt,name=deaths" json:"deaths,omitempty"`
	Assists              *uint32  `protobuf:"varint,10,opt,name=assists" json:"assists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTASDOHeroStatsHistory) Reset()         { *m = CMsgDOTASDOHeroStatsHistory{} }
func (m *CMsgDOTASDOHeroStatsHistory) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTASDOHeroStatsHistory) ProtoMessage()    {}
func (*CMsgDOTASDOHeroStatsHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{31}
}

func (m *CMsgDOTASDOHeroStatsHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTASDOHeroStatsHistory.Unmarshal(m, b)
}
func (m *CMsgDOTASDOHeroStatsHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTASDOHeroStatsHistory.Marshal(b, m, deterministic)
}
func (m *CMsgDOTASDOHeroStatsHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTASDOHeroStatsHistory.Merge(m, src)
}
func (m *CMsgDOTASDOHeroStatsHistory) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTASDOHeroStatsHistory.Size(m)
}
func (m *CMsgDOTASDOHeroStatsHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTASDOHeroStatsHistory.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTASDOHeroStatsHistory proto.InternalMessageInfo

func (m *CMsgDOTASDOHeroStatsHistory) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTASDOHeroStatsHistory) GetGameMode() uint32 {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return 0
}

func (m *CMsgDOTASDOHeroStatsHistory) GetLobbyType() uint32 {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return 0
}

func (m *CMsgDOTASDOHeroStatsHistory) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTASDOHeroStatsHistory) GetWon() bool {
	if m != nil && m.Won != nil {
		return *m.Won
	}
	return false
}

func (m *CMsgDOTASDOHeroStatsHistory) GetGpm() uint32 {
	if m != nil && m.Gpm != nil {
		return *m.Gpm
	}
	return 0
}

func (m *CMsgDOTASDOHeroStatsHistory) GetXpm() uint32 {
	if m != nil && m.Xpm != nil {
		return *m.Xpm
	}
	return 0
}

func (m *CMsgDOTASDOHeroStatsHistory) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgDOTASDOHeroStatsHistory) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgDOTASDOHeroStatsHistory) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

type CMsgPredictionChoice struct {
	Value                *uint32  `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	MinRawValue          *uint32  `protobuf:"varint,3,opt,name=min_raw_value,json=minRawValue" json:"min_raw_value,omitempty"`
	MaxRawValue          *uint32  `protobuf:"varint,4,opt,name=max_raw_value,json=maxRawValue" json:"max_raw_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgPredictionChoice) Reset()         { *m = CMsgPredictionChoice{} }
func (m *CMsgPredictionChoice) String() string { return proto.CompactTextString(m) }
func (*CMsgPredictionChoice) ProtoMessage()    {}
func (*CMsgPredictionChoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{32}
}

func (m *CMsgPredictionChoice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPredictionChoice.Unmarshal(m, b)
}
func (m *CMsgPredictionChoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPredictionChoice.Marshal(b, m, deterministic)
}
func (m *CMsgPredictionChoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPredictionChoice.Merge(m, src)
}
func (m *CMsgPredictionChoice) XXX_Size() int {
	return xxx_messageInfo_CMsgPredictionChoice.Size(m)
}
func (m *CMsgPredictionChoice) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPredictionChoice.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPredictionChoice proto.InternalMessageInfo

func (m *CMsgPredictionChoice) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *CMsgPredictionChoice) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgPredictionChoice) GetMinRawValue() uint32 {
	if m != nil && m.MinRawValue != nil {
		return *m.MinRawValue
	}
	return 0
}

func (m *CMsgPredictionChoice) GetMaxRawValue() uint32 {
	if m != nil && m.MaxRawValue != nil {
		return *m.MaxRawValue
	}
	return 0
}

type CMsgInGamePrediction struct {
	Id                   *uint32                                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name                 *string                                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type                 *CMsgInGamePrediction_EPredictionType        `protobuf:"varint,3,opt,name=type,enum=protocol.CMsgInGamePrediction_EPredictionType,def=0" json:"type,omitempty"`
	Group                *CMsgInGamePrediction_ERandomSelectionGroupT `protobuf:"varint,4,opt,name=group,enum=protocol.CMsgInGamePrediction_ERandomSelectionGroupT,def=0" json:"group,omitempty"`
	Question             *string                                      `protobuf:"bytes,5,opt,name=question" json:"question,omitempty"`
	Choices              []*CMsgPredictionChoice                      `protobuf:"bytes,6,rep,name=choices" json:"choices,omitempty"`
	RequiredHeroes       []string                                     `protobuf:"bytes,7,rep,name=required_heroes,json=requiredHeroes" json:"required_heroes,omitempty"`
	QueryName            *string                                      `protobuf:"bytes,8,opt,name=query_name,json=queryName" json:"query_name,omitempty"`
	QueryValues          []*CMsgInGamePrediction_QueryKeyValues       `protobuf:"bytes,9,rep,name=query_values,json=queryValues" json:"query_values,omitempty"`
	AnswerResolutionType *CMsgInGamePrediction_EResolutionTypeT       `protobuf:"varint,10,opt,name=answer_resolution_type,json=answerResolutionType,enum=protocol.CMsgInGamePrediction_EResolutionTypeT,def=0" json:"answer_resolution_type,omitempty"`
	PointsToGrant        *uint32                                      `protobuf:"varint,11,opt,name=points_to_grant,json=pointsToGrant" json:"points_to_grant,omitempty"`
	RewardAction         *uint32                                      `protobuf:"varint,12,opt,name=reward_action,json=rewardAction" json:"reward_action,omitempty"`
	DebugForceSelection  *uint32                                      `protobuf:"varint,13,opt,name=debug_force_selection,json=debugForceSelection" json:"debug_force_selection,omitempty"`
	RawValueType         *CMsgInGamePrediction_ERawValueTypeT         `protobuf:"varint,14,opt,name=raw_value_type,json=rawValueType,enum=protocol.CMsgInGamePrediction_ERawValueTypeT,def=0" json:"raw_value_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *CMsgInGamePrediction) Reset()         { *m = CMsgInGamePrediction{} }
func (m *CMsgInGamePrediction) String() string { return proto.CompactTextString(m) }
func (*CMsgInGamePrediction) ProtoMessage()    {}
func (*CMsgInGamePrediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{33}
}

func (m *CMsgInGamePrediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgInGamePrediction.Unmarshal(m, b)
}
func (m *CMsgInGamePrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgInGamePrediction.Marshal(b, m, deterministic)
}
func (m *CMsgInGamePrediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgInGamePrediction.Merge(m, src)
}
func (m *CMsgInGamePrediction) XXX_Size() int {
	return xxx_messageInfo_CMsgInGamePrediction.Size(m)
}
func (m *CMsgInGamePrediction) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgInGamePrediction.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgInGamePrediction proto.InternalMessageInfo

const Default_CMsgInGamePrediction_Type CMsgInGamePrediction_EPredictionType = CMsgInGamePrediction_Generic
const Default_CMsgInGamePrediction_Group CMsgInGamePrediction_ERandomSelectionGroupT = CMsgInGamePrediction_EarlyGame
const Default_CMsgInGamePrediction_AnswerResolutionType CMsgInGamePrediction_EResolutionTypeT = CMsgInGamePrediction_InvalidQuery
const Default_CMsgInGamePrediction_RawValueType CMsgInGamePrediction_ERawValueTypeT = CMsgInGamePrediction_Number

func (m *CMsgInGamePrediction) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgInGamePrediction) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgInGamePrediction) GetType() CMsgInGamePrediction_EPredictionType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CMsgInGamePrediction_Type
}

func (m *CMsgInGamePrediction) GetGroup() CMsgInGamePrediction_ERandomSelectionGroupT {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return Default_CMsgInGamePrediction_Group
}

func (m *CMsgInGamePrediction) GetQuestion() string {
	if m != nil && m.Question != nil {
		return *m.Question
	}
	return ""
}

func (m *CMsgInGamePrediction) GetChoices() []*CMsgPredictionChoice {
	if m != nil {
		return m.Choices
	}
	return nil
}

func (m *CMsgInGamePrediction) GetRequiredHeroes() []string {
	if m != nil {
		return m.RequiredHeroes
	}
	return nil
}

func (m *CMsgInGamePrediction) GetQueryName() string {
	if m != nil && m.QueryName != nil {
		return *m.QueryName
	}
	return ""
}

func (m *CMsgInGamePrediction) GetQueryValues() []*CMsgInGamePrediction_QueryKeyValues {
	if m != nil {
		return m.QueryValues
	}
	return nil
}

func (m *CMsgInGamePrediction) GetAnswerResolutionType() CMsgInGamePrediction_EResolutionTypeT {
	if m != nil && m.AnswerResolutionType != nil {
		return *m.AnswerResolutionType
	}
	return Default_CMsgInGamePrediction_AnswerResolutionType
}

func (m *CMsgInGamePrediction) GetPointsToGrant() uint32 {
	if m != nil && m.PointsToGrant != nil {
		return *m.PointsToGrant
	}
	return 0
}

func (m *CMsgInGamePrediction) GetRewardAction() uint32 {
	if m != nil && m.RewardAction != nil {
		return *m.RewardAction
	}
	return 0
}

func (m *CMsgInGamePrediction) GetDebugForceSelection() uint32 {
	if m != nil && m.DebugForceSelection != nil {
		return *m.DebugForceSelection
	}
	return 0
}

func (m *CMsgInGamePrediction) GetRawValueType() CMsgInGamePrediction_ERawValueTypeT {
	if m != nil && m.RawValueType != nil {
		return *m.RawValueType
	}
	return Default_CMsgInGamePrediction_RawValueType
}

type CMsgInGamePrediction_QueryKeyValues struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgInGamePrediction_QueryKeyValues) Reset()         { *m = CMsgInGamePrediction_QueryKeyValues{} }
func (m *CMsgInGamePrediction_QueryKeyValues) String() string { return proto.CompactTextString(m) }
func (*CMsgInGamePrediction_QueryKeyValues) ProtoMessage()    {}
func (*CMsgInGamePrediction_QueryKeyValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{33, 0}
}

func (m *CMsgInGamePrediction_QueryKeyValues) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgInGamePrediction_QueryKeyValues.Unmarshal(m, b)
}
func (m *CMsgInGamePrediction_QueryKeyValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgInGamePrediction_QueryKeyValues.Marshal(b, m, deterministic)
}
func (m *CMsgInGamePrediction_QueryKeyValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgInGamePrediction_QueryKeyValues.Merge(m, src)
}
func (m *CMsgInGamePrediction_QueryKeyValues) XXX_Size() int {
	return xxx_messageInfo_CMsgInGamePrediction_QueryKeyValues.Size(m)
}
func (m *CMsgInGamePrediction_QueryKeyValues) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgInGamePrediction_QueryKeyValues.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgInGamePrediction_QueryKeyValues proto.InternalMessageInfo

func (m *CMsgInGamePrediction_QueryKeyValues) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgInGamePrediction_QueryKeyValues) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CMsgDOTASeasonPredictions struct {
	Predictions                         []*CMsgDOTASeasonPredictions_Prediction `protobuf:"bytes,1,rep,name=predictions" json:"predictions,omitempty"`
	InGamePredictions                   []*CMsgInGamePrediction                 `protobuf:"bytes,2,rep,name=in_game_predictions,json=inGamePredictions" json:"in_game_predictions,omitempty"`
	InGamePredictionCountPerGame        *uint32                                 `protobuf:"varint,3,opt,name=in_game_prediction_count_per_game,json=inGamePredictionCountPerGame" json:"in_game_prediction_count_per_game,omitempty"`
	InGamePredictionVotingPeriodMinutes *uint32                                 `protobuf:"varint,4,opt,name=in_game_prediction_voting_period_minutes,json=inGamePredictionVotingPeriodMinutes" json:"in_game_prediction_voting_period_minutes,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}                                `json:"-"`
	XXX_unrecognized                    []byte                                  `json:"-"`
	XXX_sizecache                       int32                                   `json:"-"`
}

func (m *CMsgDOTASeasonPredictions) Reset()         { *m = CMsgDOTASeasonPredictions{} }
func (m *CMsgDOTASeasonPredictions) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTASeasonPredictions) ProtoMessage()    {}
func (*CMsgDOTASeasonPredictions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{34}
}

func (m *CMsgDOTASeasonPredictions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTASeasonPredictions.Unmarshal(m, b)
}
func (m *CMsgDOTASeasonPredictions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTASeasonPredictions.Marshal(b, m, deterministic)
}
func (m *CMsgDOTASeasonPredictions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTASeasonPredictions.Merge(m, src)
}
func (m *CMsgDOTASeasonPredictions) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTASeasonPredictions.Size(m)
}
func (m *CMsgDOTASeasonPredictions) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTASeasonPredictions.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTASeasonPredictions proto.InternalMessageInfo

func (m *CMsgDOTASeasonPredictions) GetPredictions() []*CMsgDOTASeasonPredictions_Prediction {
	if m != nil {
		return m.Predictions
	}
	return nil
}

func (m *CMsgDOTASeasonPredictions) GetInGamePredictions() []*CMsgInGamePrediction {
	if m != nil {
		return m.InGamePredictions
	}
	return nil
}

func (m *CMsgDOTASeasonPredictions) GetInGamePredictionCountPerGame() uint32 {
	if m != nil && m.InGamePredictionCountPerGame != nil {
		return *m.InGamePredictionCountPerGame
	}
	return 0
}

func (m *CMsgDOTASeasonPredictions) GetInGamePredictionVotingPeriodMinutes() uint32 {
	if m != nil && m.InGamePredictionVotingPeriodMinutes != nil {
		return *m.InGamePredictionVotingPeriodMinutes
	}
	return 0
}

type CMsgDOTASeasonPredictions_Prediction struct {
	Type                 *CMsgDOTASeasonPredictions_Prediction_EPredictionType `protobuf:"varint,1,opt,name=type,enum=protocol.CMsgDOTASeasonPredictions_Prediction_EPredictionType,def=0" json:"type,omitempty"`
	Question             *string                                               `protobuf:"bytes,2,opt,name=question" json:"question,omitempty"`
	Choices              []*CMsgPredictionChoice                               `protobuf:"bytes,3,rep,name=choices" json:"choices,omitempty"`
	SelectionId          *uint32                                               `protobuf:"varint,4,opt,name=selection_id,json=selectionId" json:"selection_id,omitempty"`
	StartDate            *uint32                                               `protobuf:"varint,5,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	LockDate             *uint32                                               `protobuf:"varint,6,opt,name=lock_date,json=lockDate" json:"lock_date,omitempty"`
	Reward               *uint32                                               `protobuf:"varint,7,opt,name=reward" json:"reward,omitempty"`
	AnswerType           *CMsgDOTASeasonPredictions_Prediction_EAnswerType     `protobuf:"varint,8,opt,name=answer_type,json=answerType,enum=protocol.CMsgDOTASeasonPredictions_Prediction_EAnswerType,def=0" json:"answer_type,omitempty"`
	AnswerId             *uint32                                               `protobuf:"varint,9,opt,name=answer_id,json=answerId" json:"answer_id,omitempty"`
	Answers              []*CMsgDOTASeasonPredictions_Prediction_Answers       `protobuf:"bytes,10,rep,name=answers" json:"answers,omitempty"`
	QueryName            *string                                               `protobuf:"bytes,11,opt,name=query_name,json=queryName" json:"query_name,omitempty"`
	LockOnSelectionId    *uint32                                               `protobuf:"varint,13,opt,name=lock_on_selection_id,json=lockOnSelectionId" json:"lock_on_selection_id,omitempty"`
	LockOnSelectionValue *uint32                                               `protobuf:"varint,14,opt,name=lock_on_selection_value,json=lockOnSelectionValue" json:"lock_on_selection_value,omitempty"`
	LockOnSelectionSet   *bool                                                 `protobuf:"varint,15,opt,name=lock_on_selection_set,json=lockOnSelectionSet" json:"lock_on_selection_set,omitempty"`
	UseAnswerValueRanges *bool                                                 `protobuf:"varint,16,opt,name=use_answer_value_ranges,json=useAnswerValueRanges" json:"use_answer_value_ranges,omitempty"`
	Region               *ELeagueRegion                                        `protobuf:"varint,17,opt,name=region,enum=protocol.ELeagueRegion,def=0" json:"region,omitempty"`
	Phases               []ELeaguePhase                                        `protobuf:"varint,18,rep,name=phases,enum=protocol.ELeaguePhase" json:"phases,omitempty"`
	RewardEvent          *EEvent                                               `protobuf:"varint,19,opt,name=reward_event,json=rewardEvent,enum=protocol.EEvent,def=0" json:"reward_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *CMsgDOTASeasonPredictions_Prediction) Reset()         { *m = CMsgDOTASeasonPredictions_Prediction{} }
func (m *CMsgDOTASeasonPredictions_Prediction) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTASeasonPredictions_Prediction) ProtoMessage()    {}
func (*CMsgDOTASeasonPredictions_Prediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{34, 0}
}

func (m *CMsgDOTASeasonPredictions_Prediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction.Unmarshal(m, b)
}
func (m *CMsgDOTASeasonPredictions_Prediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction.Marshal(b, m, deterministic)
}
func (m *CMsgDOTASeasonPredictions_Prediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction.Merge(m, src)
}
func (m *CMsgDOTASeasonPredictions_Prediction) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction.Size(m)
}
func (m *CMsgDOTASeasonPredictions_Prediction) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction proto.InternalMessageInfo

const Default_CMsgDOTASeasonPredictions_Prediction_Type CMsgDOTASeasonPredictions_Prediction_EPredictionType = CMsgDOTASeasonPredictions_Prediction_Generic
const Default_CMsgDOTASeasonPredictions_Prediction_AnswerType CMsgDOTASeasonPredictions_Prediction_EAnswerType = CMsgDOTASeasonPredictions_Prediction_SingleInt
const Default_CMsgDOTASeasonPredictions_Prediction_Region ELeagueRegion = ELeagueRegion_LEAGUE_REGION_UNSET
const Default_CMsgDOTASeasonPredictions_Prediction_RewardEvent EEvent = EEvent_EVENT_ID_NONE

func (m *CMsgDOTASeasonPredictions_Prediction) GetType() CMsgDOTASeasonPredictions_Prediction_EPredictionType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CMsgDOTASeasonPredictions_Prediction_Type
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetQuestion() string {
	if m != nil && m.Question != nil {
		return *m.Question
	}
	return ""
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetChoices() []*CMsgPredictionChoice {
	if m != nil {
		return m.Choices
	}
	return nil
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetSelectionId() uint32 {
	if m != nil && m.SelectionId != nil {
		return *m.SelectionId
	}
	return 0
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetStartDate() uint32 {
	if m != nil && m.StartDate != nil {
		return *m.StartDate
	}
	return 0
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetLockDate() uint32 {
	if m != nil && m.LockDate != nil {
		return *m.LockDate
	}
	return 0
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetReward() uint32 {
	if m != nil && m.Reward != nil {
		return *m.Reward
	}
	return 0
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetAnswerType() CMsgDOTASeasonPredictions_Prediction_EAnswerType {
	if m != nil && m.AnswerType != nil {
		return *m.AnswerType
	}
	return Default_CMsgDOTASeasonPredictions_Prediction_AnswerType
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetAnswerId() uint32 {
	if m != nil && m.AnswerId != nil {
		return *m.AnswerId
	}
	return 0
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetAnswers() []*CMsgDOTASeasonPredictions_Prediction_Answers {
	if m != nil {
		return m.Answers
	}
	return nil
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetQueryName() string {
	if m != nil && m.QueryName != nil {
		return *m.QueryName
	}
	return ""
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetLockOnSelectionId() uint32 {
	if m != nil && m.LockOnSelectionId != nil {
		return *m.LockOnSelectionId
	}
	return 0
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetLockOnSelectionValue() uint32 {
	if m != nil && m.LockOnSelectionValue != nil {
		return *m.LockOnSelectionValue
	}
	return 0
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetLockOnSelectionSet() bool {
	if m != nil && m.LockOnSelectionSet != nil {
		return *m.LockOnSelectionSet
	}
	return false
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetUseAnswerValueRanges() bool {
	if m != nil && m.UseAnswerValueRanges != nil {
		return *m.UseAnswerValueRanges
	}
	return false
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetRegion() ELeagueRegion {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return Default_CMsgDOTASeasonPredictions_Prediction_Region
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetPhases() []ELeaguePhase {
	if m != nil {
		return m.Phases
	}
	return nil
}

func (m *CMsgDOTASeasonPredictions_Prediction) GetRewardEvent() EEvent {
	if m != nil && m.RewardEvent != nil {
		return *m.RewardEvent
	}
	return Default_CMsgDOTASeasonPredictions_Prediction_RewardEvent
}

type CMsgDOTASeasonPredictions_Prediction_Answers struct {
	AnswerId             *uint32  `protobuf:"varint,1,opt,name=answer_id,json=answerId" json:"answer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTASeasonPredictions_Prediction_Answers) Reset() {
	*m = CMsgDOTASeasonPredictions_Prediction_Answers{}
}
func (m *CMsgDOTASeasonPredictions_Prediction_Answers) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTASeasonPredictions_Prediction_Answers) ProtoMessage() {}
func (*CMsgDOTASeasonPredictions_Prediction_Answers) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{34, 0, 0}
}

func (m *CMsgDOTASeasonPredictions_Prediction_Answers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction_Answers.Unmarshal(m, b)
}
func (m *CMsgDOTASeasonPredictions_Prediction_Answers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction_Answers.Marshal(b, m, deterministic)
}
func (m *CMsgDOTASeasonPredictions_Prediction_Answers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction_Answers.Merge(m, src)
}
func (m *CMsgDOTASeasonPredictions_Prediction_Answers) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction_Answers.Size(m)
}
func (m *CMsgDOTASeasonPredictions_Prediction_Answers) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction_Answers.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTASeasonPredictions_Prediction_Answers proto.InternalMessageInfo

func (m *CMsgDOTASeasonPredictions_Prediction_Answers) GetAnswerId() uint32 {
	if m != nil && m.AnswerId != nil {
		return *m.AnswerId
	}
	return 0
}

type CMsgAvailablePredictions struct {
	MatchPredictions     []*CMsgAvailablePredictions_MatchPrediction `protobuf:"bytes,1,rep,name=match_predictions,json=matchPredictions" json:"match_predictions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *CMsgAvailablePredictions) Reset()         { *m = CMsgAvailablePredictions{} }
func (m *CMsgAvailablePredictions) String() string { return proto.CompactTextString(m) }
func (*CMsgAvailablePredictions) ProtoMessage()    {}
func (*CMsgAvailablePredictions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{35}
}

func (m *CMsgAvailablePredictions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgAvailablePredictions.Unmarshal(m, b)
}
func (m *CMsgAvailablePredictions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgAvailablePredictions.Marshal(b, m, deterministic)
}
func (m *CMsgAvailablePredictions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgAvailablePredictions.Merge(m, src)
}
func (m *CMsgAvailablePredictions) XXX_Size() int {
	return xxx_messageInfo_CMsgAvailablePredictions.Size(m)
}
func (m *CMsgAvailablePredictions) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgAvailablePredictions.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgAvailablePredictions proto.InternalMessageInfo

func (m *CMsgAvailablePredictions) GetMatchPredictions() []*CMsgAvailablePredictions_MatchPrediction {
	if m != nil {
		return m.MatchPredictions
	}
	return nil
}

type CMsgAvailablePredictions_MatchPrediction struct {
	MatchId              *uint64                 `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Predictions          []*CMsgInGamePrediction `protobuf:"bytes,2,rep,name=predictions" json:"predictions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CMsgAvailablePredictions_MatchPrediction) Reset() {
	*m = CMsgAvailablePredictions_MatchPrediction{}
}
func (m *CMsgAvailablePredictions_MatchPrediction) String() string { return proto.CompactTextString(m) }
func (*CMsgAvailablePredictions_MatchPrediction) ProtoMessage()    {}
func (*CMsgAvailablePredictions_MatchPrediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{35, 0}
}

func (m *CMsgAvailablePredictions_MatchPrediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgAvailablePredictions_MatchPrediction.Unmarshal(m, b)
}
func (m *CMsgAvailablePredictions_MatchPrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgAvailablePredictions_MatchPrediction.Marshal(b, m, deterministic)
}
func (m *CMsgAvailablePredictions_MatchPrediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgAvailablePredictions_MatchPrediction.Merge(m, src)
}
func (m *CMsgAvailablePredictions_MatchPrediction) XXX_Size() int {
	return xxx_messageInfo_CMsgAvailablePredictions_MatchPrediction.Size(m)
}
func (m *CMsgAvailablePredictions_MatchPrediction) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgAvailablePredictions_MatchPrediction.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgAvailablePredictions_MatchPrediction proto.InternalMessageInfo

func (m *CMsgAvailablePredictions_MatchPrediction) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgAvailablePredictions_MatchPrediction) GetPredictions() []*CMsgInGamePrediction {
	if m != nil {
		return m.Predictions
	}
	return nil
}

type CMsgLeagueWatchedGames struct {
	Leagues              []*CMsgLeagueWatchedGames_League `protobuf:"bytes,1,rep,name=leagues" json:"leagues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CMsgLeagueWatchedGames) Reset()         { *m = CMsgLeagueWatchedGames{} }
func (m *CMsgLeagueWatchedGames) String() string { return proto.CompactTextString(m) }
func (*CMsgLeagueWatchedGames) ProtoMessage()    {}
func (*CMsgLeagueWatchedGames) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{36}
}

func (m *CMsgLeagueWatchedGames) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgLeagueWatchedGames.Unmarshal(m, b)
}
func (m *CMsgLeagueWatchedGames) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgLeagueWatchedGames.Marshal(b, m, deterministic)
}
func (m *CMsgLeagueWatchedGames) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgLeagueWatchedGames.Merge(m, src)
}
func (m *CMsgLeagueWatchedGames) XXX_Size() int {
	return xxx_messageInfo_CMsgLeagueWatchedGames.Size(m)
}
func (m *CMsgLeagueWatchedGames) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgLeagueWatchedGames.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgLeagueWatchedGames proto.InternalMessageInfo

func (m *CMsgLeagueWatchedGames) GetLeagues() []*CMsgLeagueWatchedGames_League {
	if m != nil {
		return m.Leagues
	}
	return nil
}

type CMsgLeagueWatchedGames_Series struct {
	NodeId               *uint32  `protobuf:"varint,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Game                 []uint32 `protobuf:"varint,2,rep,name=game" json:"game,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgLeagueWatchedGames_Series) Reset()         { *m = CMsgLeagueWatchedGames_Series{} }
func (m *CMsgLeagueWatchedGames_Series) String() string { return proto.CompactTextString(m) }
func (*CMsgLeagueWatchedGames_Series) ProtoMessage()    {}
func (*CMsgLeagueWatchedGames_Series) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{36, 0}
}

func (m *CMsgLeagueWatchedGames_Series) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgLeagueWatchedGames_Series.Unmarshal(m, b)
}
func (m *CMsgLeagueWatchedGames_Series) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgLeagueWatchedGames_Series.Marshal(b, m, deterministic)
}
func (m *CMsgLeagueWatchedGames_Series) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgLeagueWatchedGames_Series.Merge(m, src)
}
func (m *CMsgLeagueWatchedGames_Series) XXX_Size() int {
	return xxx_messageInfo_CMsgLeagueWatchedGames_Series.Size(m)
}
func (m *CMsgLeagueWatchedGames_Series) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgLeagueWatchedGames_Series.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgLeagueWatchedGames_Series proto.InternalMessageInfo

func (m *CMsgLeagueWatchedGames_Series) GetNodeId() uint32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *CMsgLeagueWatchedGames_Series) GetGame() []uint32 {
	if m != nil {
		return m.Game
	}
	return nil
}

type CMsgLeagueWatchedGames_League struct {
	LeagueId             *uint32                          `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	Series               []*CMsgLeagueWatchedGames_Series `protobuf:"bytes,2,rep,name=series" json:"series,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CMsgLeagueWatchedGames_League) Reset()         { *m = CMsgLeagueWatchedGames_League{} }
func (m *CMsgLeagueWatchedGames_League) String() string { return proto.CompactTextString(m) }
func (*CMsgLeagueWatchedGames_League) ProtoMessage()    {}
func (*CMsgLeagueWatchedGames_League) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{36, 1}
}

func (m *CMsgLeagueWatchedGames_League) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgLeagueWatchedGames_League.Unmarshal(m, b)
}
func (m *CMsgLeagueWatchedGames_League) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgLeagueWatchedGames_League.Marshal(b, m, deterministic)
}
func (m *CMsgLeagueWatchedGames_League) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgLeagueWatchedGames_League.Merge(m, src)
}
func (m *CMsgLeagueWatchedGames_League) XXX_Size() int {
	return xxx_messageInfo_CMsgLeagueWatchedGames_League.Size(m)
}
func (m *CMsgLeagueWatchedGames_League) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgLeagueWatchedGames_League.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgLeagueWatchedGames_League proto.InternalMessageInfo

func (m *CMsgLeagueWatchedGames_League) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgLeagueWatchedGames_League) GetSeries() []*CMsgLeagueWatchedGames_Series {
	if m != nil {
		return m.Series
	}
	return nil
}

type CMsgDOTAMatch struct {
	Duration             *uint32                             `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	Starttime            *uint32                             `protobuf:"fixed32,4,opt,name=starttime" json:"starttime,omitempty"`
	Players              []*CMsgDOTAMatch_Player             `protobuf:"bytes,5,rep,name=players" json:"players,omitempty"`
	MatchId              *uint64                             `protobuf:"varint,6,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	TowerStatus          []uint32                            `protobuf:"varint,8,rep,name=tower_status,json=towerStatus" json:"tower_status,omitempty"`
	BarracksStatus       []uint32                            `protobuf:"varint,9,rep,name=barracks_status,json=barracksStatus" json:"barracks_status,omitempty"`
	Cluster              *uint32                             `protobuf:"varint,10,opt,name=cluster" json:"cluster,omitempty"`
	FirstBloodTime       *uint32                             `protobuf:"varint,12,opt,name=first_blood_time,json=firstBloodTime" json:"first_blood_time,omitempty"`
	ReplaySalt           *uint32                             `protobuf:"fixed32,13,opt,name=replay_salt,json=replaySalt" json:"replay_salt,omitempty"`
	ServerIp             *uint32                             `protobuf:"fixed32,14,opt,name=server_ip,json=serverIp" json:"server_ip,omitempty"`
	ServerPort           *uint32                             `protobuf:"varint,15,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	LobbyType            *uint32                             `protobuf:"varint,16,opt,name=lobby_type,json=lobbyType" json:"lobby_type,omitempty"`
	HumanPlayers         *uint32                             `protobuf:"varint,17,opt,name=human_players,json=humanPlayers" json:"human_players,omitempty"`
	AverageSkill         *uint32                             `protobuf:"varint,18,opt,name=average_skill,json=averageSkill" json:"average_skill,omitempty"`
	GameBalance          *float32                            `protobuf:"fixed32,19,opt,name=game_balance,json=gameBalance" json:"game_balance,omitempty"`
	RadiantTeamId        *uint32                             `protobuf:"varint,20,opt,name=radiant_team_id,json=radiantTeamId" json:"radiant_team_id,omitempty"`
	DireTeamId           *uint32                             `protobuf:"varint,21,opt,name=dire_team_id,json=direTeamId" json:"dire_team_id,omitempty"`
	Leagueid             *uint32                             `protobuf:"varint,22,opt,name=leagueid" json:"leagueid,omitempty"`
	RadiantTeamName      *string                             `protobuf:"bytes,23,opt,name=radiant_team_name,json=radiantTeamName" json:"radiant_team_name,omitempty"`
	DireTeamName         *string                             `protobuf:"bytes,24,opt,name=dire_team_name,json=direTeamName" json:"dire_team_name,omitempty"`
	RadiantTeamLogo      *uint64                             `protobuf:"varint,25,opt,name=radiant_team_logo,json=radiantTeamLogo" json:"radiant_team_logo,omitempty"`
	DireTeamLogo         *uint64                             `protobuf:"varint,26,opt,name=dire_team_logo,json=direTeamLogo" json:"dire_team_logo,omitempty"`
	RadiantTeamLogoUrl   *string                             `protobuf:"bytes,54,opt,name=radiant_team_logo_url,json=radiantTeamLogoUrl" json:"radiant_team_logo_url,omitempty"`
	DireTeamLogoUrl      *string                             `protobuf:"bytes,55,opt,name=dire_team_logo_url,json=direTeamLogoUrl" json:"dire_team_logo_url,omitempty"`
	RadiantTeamComplete  *uint32                             `protobuf:"varint,27,opt,name=radiant_team_complete,json=radiantTeamComplete" json:"radiant_team_complete,omitempty"`
	DireTeamComplete     *uint32                             `protobuf:"varint,28,opt,name=dire_team_complete,json=direTeamComplete" json:"dire_team_complete,omitempty"`
	GameMode             *DOTA_GameMode                      `protobuf:"varint,31,opt,name=game_mode,json=gameMode,enum=protocol.DOTA_GameMode,def=0" json:"game_mode,omitempty"`
	PicksBans            []*CMatchHeroSelectEvent            `protobuf:"bytes,32,rep,name=picks_bans,json=picksBans" json:"picks_bans,omitempty"`
	MatchSeqNum          *uint64                             `protobuf:"varint,33,opt,name=match_seq_num,json=matchSeqNum" json:"match_seq_num,omitempty"`
	ReplayState          *CMsgDOTAMatch_ReplayState          `protobuf:"varint,34,opt,name=replay_state,json=replayState,enum=protocol.CMsgDOTAMatch_ReplayState,def=0" json:"replay_state,omitempty"`
	RadiantGuildId       *uint32                             `protobuf:"varint,35,opt,name=radiant_guild_id,json=radiantGuildId" json:"radiant_guild_id,omitempty"`
	DireGuildId          *uint32                             `protobuf:"varint,36,opt,name=dire_guild_id,json=direGuildId" json:"dire_guild_id,omitempty"`
	RadiantTeamTag       *string                             `protobuf:"bytes,37,opt,name=radiant_team_tag,json=radiantTeamTag" json:"radiant_team_tag,omitempty"`
	DireTeamTag          *string                             `protobuf:"bytes,38,opt,name=dire_team_tag,json=direTeamTag" json:"dire_team_tag,omitempty"`
	SeriesId             *uint32                             `protobuf:"varint,39,opt,name=series_id,json=seriesId" json:"series_id,omitempty"`
	SeriesType           *uint32                             `protobuf:"varint,40,opt,name=series_type,json=seriesType" json:"series_type,omitempty"`
	BroadcasterChannels  []*CMsgDOTAMatch_BroadcasterChannel `protobuf:"bytes,43,rep,name=broadcaster_channels,json=broadcasterChannels" json:"broadcaster_channels,omitempty"`
	Engine               *uint32                             `protobuf:"varint,44,opt,name=engine" json:"engine,omitempty"`
	CustomGameData       *CMsgDOTAMatch_CustomGameData       `protobuf:"bytes,45,opt,name=custom_game_data,json=customGameData" json:"custom_game_data,omitempty"`
	MatchFlags           *uint32                             `protobuf:"varint,46,opt,name=match_flags,json=matchFlags" json:"match_flags,omitempty"`
	PrivateMetadataKey   *uint32                             `protobuf:"fixed32,47,opt,name=private_metadata_key,json=privateMetadataKey" json:"private_metadata_key,omitempty"`
	RadiantTeamScore     *uint32                             `protobuf:"varint,48,opt,name=radiant_team_score,json=radiantTeamScore" json:"radiant_team_score,omitempty"`
	DireTeamScore        *uint32                             `protobuf:"varint,49,opt,name=dire_team_score,json=direTeamScore" json:"dire_team_score,omitempty"`
	MatchOutcome         *EMatchOutcome                      `protobuf:"varint,50,opt,name=match_outcome,json=matchOutcome,enum=protocol.EMatchOutcome,def=0" json:"match_outcome,omitempty"`
	TournamentId         *uint32                             `protobuf:"varint,51,opt,name=tournament_id,json=tournamentId" json:"tournament_id,omitempty"`
	TournamentRound      *uint32                             `protobuf:"varint,52,opt,name=tournament_round,json=tournamentRound" json:"tournament_round,omitempty"`
	PreGameDuration      *uint32                             `protobuf:"varint,53,opt,name=pre_game_duration,json=preGameDuration" json:"pre_game_duration,omitempty"`
	Coaches              []*CMsgDOTAMatch_Coach              `protobuf:"bytes,57,rep,name=coaches" json:"coaches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgDOTAMatch) Reset()         { *m = CMsgDOTAMatch{} }
func (m *CMsgDOTAMatch) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatch) ProtoMessage()    {}
func (*CMsgDOTAMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{37}
}

func (m *CMsgDOTAMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatch.Unmarshal(m, b)
}
func (m *CMsgDOTAMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatch.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatch.Merge(m, src)
}
func (m *CMsgDOTAMatch) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatch.Size(m)
}
func (m *CMsgDOTAMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatch.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatch proto.InternalMessageInfo

const Default_CMsgDOTAMatch_GameMode DOTA_GameMode = DOTA_GameMode_DOTA_GAMEMODE_NONE
const Default_CMsgDOTAMatch_ReplayState CMsgDOTAMatch_ReplayState = CMsgDOTAMatch_REPLAY_AVAILABLE
const Default_CMsgDOTAMatch_MatchOutcome EMatchOutcome = EMatchOutcome_k_EMatchOutcome_Unknown

func (m *CMsgDOTAMatch) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgDOTAMatch) GetStarttime() uint32 {
	if m != nil && m.Starttime != nil {
		return *m.Starttime
	}
	return 0
}

func (m *CMsgDOTAMatch) GetPlayers() []*CMsgDOTAMatch_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgDOTAMatch) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetTowerStatus() []uint32 {
	if m != nil {
		return m.TowerStatus
	}
	return nil
}

func (m *CMsgDOTAMatch) GetBarracksStatus() []uint32 {
	if m != nil {
		return m.BarracksStatus
	}
	return nil
}

func (m *CMsgDOTAMatch) GetCluster() uint32 {
	if m != nil && m.Cluster != nil {
		return *m.Cluster
	}
	return 0
}

func (m *CMsgDOTAMatch) GetFirstBloodTime() uint32 {
	if m != nil && m.FirstBloodTime != nil {
		return *m.FirstBloodTime
	}
	return 0
}

func (m *CMsgDOTAMatch) GetReplaySalt() uint32 {
	if m != nil && m.ReplaySalt != nil {
		return *m.ReplaySalt
	}
	return 0
}

func (m *CMsgDOTAMatch) GetServerIp() uint32 {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return 0
}

func (m *CMsgDOTAMatch) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgDOTAMatch) GetLobbyType() uint32 {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return 0
}

func (m *CMsgDOTAMatch) GetHumanPlayers() uint32 {
	if m != nil && m.HumanPlayers != nil {
		return *m.HumanPlayers
	}
	return 0
}

func (m *CMsgDOTAMatch) GetAverageSkill() uint32 {
	if m != nil && m.AverageSkill != nil {
		return *m.AverageSkill
	}
	return 0
}

func (m *CMsgDOTAMatch) GetGameBalance() float32 {
	if m != nil && m.GameBalance != nil {
		return *m.GameBalance
	}
	return 0
}

func (m *CMsgDOTAMatch) GetRadiantTeamId() uint32 {
	if m != nil && m.RadiantTeamId != nil {
		return *m.RadiantTeamId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetDireTeamId() uint32 {
	if m != nil && m.DireTeamId != nil {
		return *m.DireTeamId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

func (m *CMsgDOTAMatch) GetRadiantTeamName() string {
	if m != nil && m.RadiantTeamName != nil {
		return *m.RadiantTeamName
	}
	return ""
}

func (m *CMsgDOTAMatch) GetDireTeamName() string {
	if m != nil && m.DireTeamName != nil {
		return *m.DireTeamName
	}
	return ""
}

func (m *CMsgDOTAMatch) GetRadiantTeamLogo() uint64 {
	if m != nil && m.RadiantTeamLogo != nil {
		return *m.RadiantTeamLogo
	}
	return 0
}

func (m *CMsgDOTAMatch) GetDireTeamLogo() uint64 {
	if m != nil && m.DireTeamLogo != nil {
		return *m.DireTeamLogo
	}
	return 0
}

func (m *CMsgDOTAMatch) GetRadiantTeamLogoUrl() string {
	if m != nil && m.RadiantTeamLogoUrl != nil {
		return *m.RadiantTeamLogoUrl
	}
	return ""
}

func (m *CMsgDOTAMatch) GetDireTeamLogoUrl() string {
	if m != nil && m.DireTeamLogoUrl != nil {
		return *m.DireTeamLogoUrl
	}
	return ""
}

func (m *CMsgDOTAMatch) GetRadiantTeamComplete() uint32 {
	if m != nil && m.RadiantTeamComplete != nil {
		return *m.RadiantTeamComplete
	}
	return 0
}

func (m *CMsgDOTAMatch) GetDireTeamComplete() uint32 {
	if m != nil && m.DireTeamComplete != nil {
		return *m.DireTeamComplete
	}
	return 0
}

func (m *CMsgDOTAMatch) GetGameMode() DOTA_GameMode {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return Default_CMsgDOTAMatch_GameMode
}

func (m *CMsgDOTAMatch) GetPicksBans() []*CMatchHeroSelectEvent {
	if m != nil {
		return m.PicksBans
	}
	return nil
}

func (m *CMsgDOTAMatch) GetMatchSeqNum() uint64 {
	if m != nil && m.MatchSeqNum != nil {
		return *m.MatchSeqNum
	}
	return 0
}

func (m *CMsgDOTAMatch) GetReplayState() CMsgDOTAMatch_ReplayState {
	if m != nil && m.ReplayState != nil {
		return *m.ReplayState
	}
	return Default_CMsgDOTAMatch_ReplayState
}

func (m *CMsgDOTAMatch) GetRadiantGuildId() uint32 {
	if m != nil && m.RadiantGuildId != nil {
		return *m.RadiantGuildId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetDireGuildId() uint32 {
	if m != nil && m.DireGuildId != nil {
		return *m.DireGuildId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetRadiantTeamTag() string {
	if m != nil && m.RadiantTeamTag != nil {
		return *m.RadiantTeamTag
	}
	return ""
}

func (m *CMsgDOTAMatch) GetDireTeamTag() string {
	if m != nil && m.DireTeamTag != nil {
		return *m.DireTeamTag
	}
	return ""
}

func (m *CMsgDOTAMatch) GetSeriesId() uint32 {
	if m != nil && m.SeriesId != nil {
		return *m.SeriesId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

func (m *CMsgDOTAMatch) GetBroadcasterChannels() []*CMsgDOTAMatch_BroadcasterChannel {
	if m != nil {
		return m.BroadcasterChannels
	}
	return nil
}

func (m *CMsgDOTAMatch) GetEngine() uint32 {
	if m != nil && m.Engine != nil {
		return *m.Engine
	}
	return 0
}

func (m *CMsgDOTAMatch) GetCustomGameData() *CMsgDOTAMatch_CustomGameData {
	if m != nil {
		return m.CustomGameData
	}
	return nil
}

func (m *CMsgDOTAMatch) GetMatchFlags() uint32 {
	if m != nil && m.MatchFlags != nil {
		return *m.MatchFlags
	}
	return 0
}

func (m *CMsgDOTAMatch) GetPrivateMetadataKey() uint32 {
	if m != nil && m.PrivateMetadataKey != nil {
		return *m.PrivateMetadataKey
	}
	return 0
}

func (m *CMsgDOTAMatch) GetRadiantTeamScore() uint32 {
	if m != nil && m.RadiantTeamScore != nil {
		return *m.RadiantTeamScore
	}
	return 0
}

func (m *CMsgDOTAMatch) GetDireTeamScore() uint32 {
	if m != nil && m.DireTeamScore != nil {
		return *m.DireTeamScore
	}
	return 0
}

func (m *CMsgDOTAMatch) GetMatchOutcome() EMatchOutcome {
	if m != nil && m.MatchOutcome != nil {
		return *m.MatchOutcome
	}
	return Default_CMsgDOTAMatch_MatchOutcome
}

func (m *CMsgDOTAMatch) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgDOTAMatch) GetTournamentRound() uint32 {
	if m != nil && m.TournamentRound != nil {
		return *m.TournamentRound
	}
	return 0
}

func (m *CMsgDOTAMatch) GetPreGameDuration() uint32 {
	if m != nil && m.PreGameDuration != nil {
		return *m.PreGameDuration
	}
	return 0
}

func (m *CMsgDOTAMatch) GetCoaches() []*CMsgDOTAMatch_Coach {
	if m != nil {
		return m.Coaches
	}
	return nil
}

type CMsgDOTAMatch_Player struct {
	AccountId                 *uint32                                    `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PlayerSlot                *uint32                                    `protobuf:"varint,2,opt,name=player_slot,json=playerSlot" json:"player_slot,omitempty"`
	HeroId                    *uint32                                    `protobuf:"varint,3,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Item_0                    *int32                                     `protobuf:"varint,4,opt,name=item_0,json=item0,def=-1" json:"item_0,omitempty"`
	Item_1                    *int32                                     `protobuf:"varint,5,opt,name=item_1,json=item1,def=-1" json:"item_1,omitempty"`
	Item_2                    *int32                                     `protobuf:"varint,6,opt,name=item_2,json=item2,def=-1" json:"item_2,omitempty"`
	Item_3                    *int32                                     `protobuf:"varint,7,opt,name=item_3,json=item3,def=-1" json:"item_3,omitempty"`
	Item_4                    *int32                                     `protobuf:"varint,8,opt,name=item_4,json=item4,def=-1" json:"item_4,omitempty"`
	Item_5                    *int32                                     `protobuf:"varint,9,opt,name=item_5,json=item5,def=-1" json:"item_5,omitempty"`
	Item_6                    *int32                                     `protobuf:"varint,59,opt,name=item_6,json=item6,def=-1" json:"item_6,omitempty"`
	Item_7                    *int32                                     `protobuf:"varint,60,opt,name=item_7,json=item7,def=-1" json:"item_7,omitempty"`
	Item_8                    *int32                                     `protobuf:"varint,61,opt,name=item_8,json=item8,def=-1" json:"item_8,omitempty"`
	Item_9                    *int32                                     `protobuf:"varint,76,opt,name=item_9,json=item9,def=-1" json:"item_9,omitempty"`
	ExpectedTeamContribution  *float32                                   `protobuf:"fixed32,10,opt,name=expected_team_contribution,json=expectedTeamContribution" json:"expected_team_contribution,omitempty"`
	ScaledMetric              *float32                                   `protobuf:"fixed32,11,opt,name=scaled_metric,json=scaledMetric" json:"scaled_metric,omitempty"`
	PreviousRank              *uint32                                    `protobuf:"varint,12,opt,name=previous_rank,json=previousRank" json:"previous_rank,omitempty"`
	RankChange                *int32                                     `protobuf:"zigzag32,13,opt,name=rank_change,json=rankChange" json:"rank_change,omitempty"`
	MmrType                   *uint32                                    `protobuf:"varint,74,opt,name=mmr_type,json=mmrType" json:"mmr_type,omitempty"`
	Kills                     *uint32                                    `protobuf:"varint,14,opt,name=kills" json:"kills,omitempty"`
	Deaths                    *uint32                                    `protobuf:"varint,15,opt,name=deaths" json:"deaths,omitempty"`
	Assists                   *uint32                                    `protobuf:"varint,16,opt,name=assists" json:"assists,omitempty"`
	LeaverStatus              *uint32                                    `protobuf:"varint,17,opt,name=leaver_status,json=leaverStatus" json:"leaver_status,omitempty"`
	Gold                      *uint32                                    `protobuf:"varint,18,opt,name=gold" json:"gold,omitempty"`
	LastHits                  *uint32                                    `protobuf:"varint,19,opt,name=last_hits,json=lastHits" json:"last_hits,omitempty"`
	Denies                    *uint32                                    `protobuf:"varint,20,opt,name=denies" json:"denies,omitempty"`
	GoldPerMin                *uint32                                    `protobuf:"varint,21,opt,name=gold_per_min,json=goldPerMin" json:"gold_per_min,omitempty"`
	XpPerMin                  *uint32                                    `protobuf:"varint,22,opt,name=xp_per_min,json=xpPerMin" json:"xp_per_min,omitempty"`
	GoldSpent                 *uint32                                    `protobuf:"varint,23,opt,name=gold_spent,json=goldSpent" json:"gold_spent,omitempty"`
	HeroDamage                *uint32                                    `protobuf:"varint,24,opt,name=hero_damage,json=heroDamage" json:"hero_damage,omitempty"`
	TowerDamage               *uint32                                    `protobuf:"varint,25,opt,name=tower_damage,json=towerDamage" json:"tower_damage,omitempty"`
	HeroHealing               *uint32                                    `protobuf:"varint,26,opt,name=hero_healing,json=heroHealing" json:"hero_healing,omitempty"`
	Level                     *uint32                                    `protobuf:"varint,27,opt,name=level" json:"level,omitempty"`
	TimeLastSeen              *uint32                                    `protobuf:"varint,28,opt,name=time_last_seen,json=timeLastSeen" json:"time_last_seen,omitempty"`
	PlayerName                *string                                    `protobuf:"bytes,29,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	SupportAbilityValue       *uint32                                    `protobuf:"varint,30,opt,name=support_ability_value,json=supportAbilityValue" json:"support_ability_value,omitempty"`
	FeedingDetected           *bool                                      `protobuf:"varint,32,opt,name=feeding_detected,json=feedingDetected" json:"feeding_detected,omitempty"`
	SearchRank                *uint32                                    `protobuf:"varint,34,opt,name=search_rank,json=searchRank" json:"search_rank,omitempty"`
	SearchRankUncertainty     *uint32                                    `protobuf:"varint,35,opt,name=search_rank_uncertainty,json=searchRankUncertainty" json:"search_rank_uncertainty,omitempty"`
	RankUncertaintyChange     *int32                                     `protobuf:"varint,36,opt,name=rank_uncertainty_change,json=rankUncertaintyChange" json:"rank_uncertainty_change,omitempty"`
	HeroPlayCount             *uint32                                    `protobuf:"varint,37,opt,name=hero_play_count,json=heroPlayCount" json:"hero_play_count,omitempty"`
	PartyId                   *uint64                                    `protobuf:"fixed64,38,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	ScaledHeroDamage          *uint32                                    `protobuf:"varint,54,opt,name=scaled_hero_damage,json=scaledHeroDamage" json:"scaled_hero_damage,omitempty"`
	ScaledTowerDamage         *uint32                                    `protobuf:"varint,55,opt,name=scaled_tower_damage,json=scaledTowerDamage" json:"scaled_tower_damage,omitempty"`
	ScaledHeroHealing         *uint32                                    `protobuf:"varint,56,opt,name=scaled_hero_healing,json=scaledHeroHealing" json:"scaled_hero_healing,omitempty"`
	ScaledKills               *float32                                   `protobuf:"fixed32,39,opt,name=scaled_kills,json=scaledKills" json:"scaled_kills,omitempty"`
	ScaledDeaths              *float32                                   `protobuf:"fixed32,40,opt,name=scaled_deaths,json=scaledDeaths" json:"scaled_deaths,omitempty"`
	ScaledAssists             *float32                                   `protobuf:"fixed32,41,opt,name=scaled_assists,json=scaledAssists" json:"scaled_assists,omitempty"`
	ClaimedFarmGold           *uint32                                    `protobuf:"varint,42,opt,name=claimed_farm_gold,json=claimedFarmGold" json:"claimed_farm_gold,omitempty"`
	SupportGold               *uint32                                    `protobuf:"varint,43,opt,name=support_gold,json=supportGold" json:"support_gold,omitempty"`
	ClaimedDenies             *uint32                                    `protobuf:"varint,44,opt,name=claimed_denies,json=claimedDenies" json:"claimed_denies,omitempty"`
	ClaimedMisses             *uint32                                    `protobuf:"varint,45,opt,name=claimed_misses,json=claimedMisses" json:"claimed_misses,omitempty"`
	Misses                    *uint32                                    `protobuf:"varint,46,opt,name=misses" json:"misses,omitempty"`
	AbilityUpgrades           []*CMatchPlayerAbilityUpgrade              `protobuf:"bytes,47,rep,name=ability_upgrades,json=abilityUpgrades" json:"ability_upgrades,omitempty"`
	AdditionalUnitsInventory  []*CMatchAdditionalUnitInventory           `protobuf:"bytes,48,rep,name=additional_units_inventory,json=additionalUnitsInventory" json:"additional_units_inventory,omitempty"`
	PermanentBuffs            []*CMatchPlayerPermanentBuff               `protobuf:"bytes,57,rep,name=permanent_buffs,json=permanentBuffs" json:"permanent_buffs,omitempty"`
	ProName                   *string                                    `protobuf:"bytes,72,opt,name=pro_name,json=proName" json:"pro_name,omitempty"`
	RealName                  *string                                    `protobuf:"bytes,73,opt,name=real_name,json=realName" json:"real_name,omitempty"`
	CustomGameData            *CMsgDOTAMatch_Player_CustomGameData       `protobuf:"bytes,50,opt,name=custom_game_data,json=customGameData" json:"custom_game_data,omitempty"`
	ActivePlusSubscription    *bool                                      `protobuf:"varint,51,opt,name=active_plus_subscription,json=activePlusSubscription" json:"active_plus_subscription,omitempty"`
	NetWorth                  *uint32                                    `protobuf:"varint,52,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	BotDifficulty             *uint32                                    `protobuf:"varint,58,opt,name=bot_difficulty,json=botDifficulty" json:"bot_difficulty,omitempty"`
	HeroPickOrder             *uint32                                    `protobuf:"varint,63,opt,name=hero_pick_order,json=heroPickOrder" json:"hero_pick_order,omitempty"`
	HeroWasRandomed           *bool                                      `protobuf:"varint,64,opt,name=hero_was_randomed,json=heroWasRandomed" json:"hero_was_randomed,omitempty"`
	HeroWasDotaPlusSuggestion *bool                                      `protobuf:"varint,69,opt,name=hero_was_dota_plus_suggestion,json=heroWasDotaPlusSuggestion" json:"hero_was_dota_plus_suggestion,omitempty"`
	HeroDamageReceived        []*CMsgDOTAMatch_Player_HeroDamageReceived `protobuf:"bytes,67,rep,name=hero_damage_received,json=heroDamageReceived" json:"hero_damage_received,omitempty"`
	HeroDamageDealt           []*CMsgDOTAMatch_Player_HeroDamageReceived `protobuf:"bytes,79,rep,name=hero_damage_dealt,json=heroDamageDealt" json:"hero_damage_dealt,omitempty"`
	SecondsDead               *uint32                                    `protobuf:"varint,70,opt,name=seconds_dead,json=secondsDead" json:"seconds_dead,omitempty"`
	GoldLostToDeath           *uint32                                    `protobuf:"varint,71,opt,name=gold_lost_to_death,json=goldLostToDeath" json:"gold_lost_to_death,omitempty"`
	LaneSelectionFlags        *uint32                                    `protobuf:"varint,75,opt,name=lane_selection_flags,json=laneSelectionFlags" json:"lane_selection_flags,omitempty"`
	BountyRunes               *uint32                                    `protobuf:"varint,77,opt,name=bounty_runes,json=bountyRunes" json:"bounty_runes,omitempty"`
	OutpostsCaptured          *uint32                                    `protobuf:"varint,78,opt,name=outposts_captured,json=outpostsCaptured" json:"outposts_captured,omitempty"`
	TeamNumber                *DOTA_GC_TEAM                              `protobuf:"varint,80,opt,name=team_number,json=teamNumber,enum=protocol.DOTA_GC_TEAM,def=0" json:"team_number,omitempty"`
	TeamSlot                  *uint32                                    `protobuf:"varint,81,opt,name=team_slot,json=teamSlot" json:"team_slot,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                                   `json:"-"`
	XXX_unrecognized          []byte                                     `json:"-"`
	XXX_sizecache             int32                                      `json:"-"`
}

func (m *CMsgDOTAMatch_Player) Reset()         { *m = CMsgDOTAMatch_Player{} }
func (m *CMsgDOTAMatch_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatch_Player) ProtoMessage()    {}
func (*CMsgDOTAMatch_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{37, 0}
}

func (m *CMsgDOTAMatch_Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatch_Player.Unmarshal(m, b)
}
func (m *CMsgDOTAMatch_Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatch_Player.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAMatch_Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatch_Player.Merge(m, src)
}
func (m *CMsgDOTAMatch_Player) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatch_Player.Size(m)
}
func (m *CMsgDOTAMatch_Player) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatch_Player.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatch_Player proto.InternalMessageInfo

const Default_CMsgDOTAMatch_Player_Item_0 int32 = -1
const Default_CMsgDOTAMatch_Player_Item_1 int32 = -1
const Default_CMsgDOTAMatch_Player_Item_2 int32 = -1
const Default_CMsgDOTAMatch_Player_Item_3 int32 = -1
const Default_CMsgDOTAMatch_Player_Item_4 int32 = -1
const Default_CMsgDOTAMatch_Player_Item_5 int32 = -1
const Default_CMsgDOTAMatch_Player_Item_6 int32 = -1
const Default_CMsgDOTAMatch_Player_Item_7 int32 = -1
const Default_CMsgDOTAMatch_Player_Item_8 int32 = -1
const Default_CMsgDOTAMatch_Player_Item_9 int32 = -1
const Default_CMsgDOTAMatch_Player_TeamNumber DOTA_GC_TEAM = DOTA_GC_TEAM_DOTA_GC_TEAM_GOOD_GUYS

func (m *CMsgDOTAMatch_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetPlayerSlot() uint32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetItem_0() int32 {
	if m != nil && m.Item_0 != nil {
		return *m.Item_0
	}
	return Default_CMsgDOTAMatch_Player_Item_0
}

func (m *CMsgDOTAMatch_Player) GetItem_1() int32 {
	if m != nil && m.Item_1 != nil {
		return *m.Item_1
	}
	return Default_CMsgDOTAMatch_Player_Item_1
}

func (m *CMsgDOTAMatch_Player) GetItem_2() int32 {
	if m != nil && m.Item_2 != nil {
		return *m.Item_2
	}
	return Default_CMsgDOTAMatch_Player_Item_2
}

func (m *CMsgDOTAMatch_Player) GetItem_3() int32 {
	if m != nil && m.Item_3 != nil {
		return *m.Item_3
	}
	return Default_CMsgDOTAMatch_Player_Item_3
}

func (m *CMsgDOTAMatch_Player) GetItem_4() int32 {
	if m != nil && m.Item_4 != nil {
		return *m.Item_4
	}
	return Default_CMsgDOTAMatch_Player_Item_4
}

func (m *CMsgDOTAMatch_Player) GetItem_5() int32 {
	if m != nil && m.Item_5 != nil {
		return *m.Item_5
	}
	return Default_CMsgDOTAMatch_Player_Item_5
}

func (m *CMsgDOTAMatch_Player) GetItem_6() int32 {
	if m != nil && m.Item_6 != nil {
		return *m.Item_6
	}
	return Default_CMsgDOTAMatch_Player_Item_6
}

func (m *CMsgDOTAMatch_Player) GetItem_7() int32 {
	if m != nil && m.Item_7 != nil {
		return *m.Item_7
	}
	return Default_CMsgDOTAMatch_Player_Item_7
}

func (m *CMsgDOTAMatch_Player) GetItem_8() int32 {
	if m != nil && m.Item_8 != nil {
		return *m.Item_8
	}
	return Default_CMsgDOTAMatch_Player_Item_8
}

func (m *CMsgDOTAMatch_Player) GetItem_9() int32 {
	if m != nil && m.Item_9 != nil {
		return *m.Item_9
	}
	return Default_CMsgDOTAMatch_Player_Item_9
}

func (m *CMsgDOTAMatch_Player) GetExpectedTeamContribution() float32 {
	if m != nil && m.ExpectedTeamContribution != nil {
		return *m.ExpectedTeamContribution
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetScaledMetric() float32 {
	if m != nil && m.ScaledMetric != nil {
		return *m.ScaledMetric
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetPreviousRank() uint32 {
	if m != nil && m.PreviousRank != nil {
		return *m.PreviousRank
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetRankChange() int32 {
	if m != nil && m.RankChange != nil {
		return *m.RankChange
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetMmrType() uint32 {
	if m != nil && m.MmrType != nil {
		return *m.MmrType
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetLeaverStatus() uint32 {
	if m != nil && m.LeaverStatus != nil {
		return *m.LeaverStatus
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetGold() uint32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetLastHits() uint32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetDenies() uint32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetGoldPerMin() uint32 {
	if m != nil && m.GoldPerMin != nil {
		return *m.GoldPerMin
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetXpPerMin() uint32 {
	if m != nil && m.XpPerMin != nil {
		return *m.XpPerMin
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetGoldSpent() uint32 {
	if m != nil && m.GoldSpent != nil {
		return *m.GoldSpent
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetHeroDamage() uint32 {
	if m != nil && m.HeroDamage != nil {
		return *m.HeroDamage
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetTowerDamage() uint32 {
	if m != nil && m.TowerDamage != nil {
		return *m.TowerDamage
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetHeroHealing() uint32 {
	if m != nil && m.HeroHealing != nil {
		return *m.HeroHealing
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetTimeLastSeen() uint32 {
	if m != nil && m.TimeLastSeen != nil {
		return *m.TimeLastSeen
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CMsgDOTAMatch_Player) GetSupportAbilityValue() uint32 {
	if m != nil && m.SupportAbilityValue != nil {
		return *m.SupportAbilityValue
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetFeedingDetected() bool {
	if m != nil && m.FeedingDetected != nil {
		return *m.FeedingDetected
	}
	return false
}

func (m *CMsgDOTAMatch_Player) GetSearchRank() uint32 {
	if m != nil && m.SearchRank != nil {
		return *m.SearchRank
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetSearchRankUncertainty() uint32 {
	if m != nil && m.SearchRankUncertainty != nil {
		return *m.SearchRankUncertainty
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetRankUncertaintyChange() int32 {
	if m != nil && m.RankUncertaintyChange != nil {
		return *m.RankUncertaintyChange
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetHeroPlayCount() uint32 {
	if m != nil && m.HeroPlayCount != nil {
		return *m.HeroPlayCount
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetScaledHeroDamage() uint32 {
	if m != nil && m.ScaledHeroDamage != nil {
		return *m.ScaledHeroDamage
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetScaledTowerDamage() uint32 {
	if m != nil && m.ScaledTowerDamage != nil {
		return *m.ScaledTowerDamage
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetScaledHeroHealing() uint32 {
	if m != nil && m.ScaledHeroHealing != nil {
		return *m.ScaledHeroHealing
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetScaledKills() float32 {
	if m != nil && m.ScaledKills != nil {
		return *m.ScaledKills
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetScaledDeaths() float32 {
	if m != nil && m.ScaledDeaths != nil {
		return *m.ScaledDeaths
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetScaledAssists() float32 {
	if m != nil && m.ScaledAssists != nil {
		return *m.ScaledAssists
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetClaimedFarmGold() uint32 {
	if m != nil && m.ClaimedFarmGold != nil {
		return *m.ClaimedFarmGold
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetSupportGold() uint32 {
	if m != nil && m.SupportGold != nil {
		return *m.SupportGold
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetClaimedDenies() uint32 {
	if m != nil && m.ClaimedDenies != nil {
		return *m.ClaimedDenies
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetClaimedMisses() uint32 {
	if m != nil && m.ClaimedMisses != nil {
		return *m.ClaimedMisses
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetMisses() uint32 {
	if m != nil && m.Misses != nil {
		return *m.Misses
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetAbilityUpgrades() []*CMatchPlayerAbilityUpgrade {
	if m != nil {
		return m.AbilityUpgrades
	}
	return nil
}

func (m *CMsgDOTAMatch_Player) GetAdditionalUnitsInventory() []*CMatchAdditionalUnitInventory {
	if m != nil {
		return m.AdditionalUnitsInventory
	}
	return nil
}

func (m *CMsgDOTAMatch_Player) GetPermanentBuffs() []*CMatchPlayerPermanentBuff {
	if m != nil {
		return m.PermanentBuffs
	}
	return nil
}

func (m *CMsgDOTAMatch_Player) GetProName() string {
	if m != nil && m.ProName != nil {
		return *m.ProName
	}
	return ""
}

func (m *CMsgDOTAMatch_Player) GetRealName() string {
	if m != nil && m.RealName != nil {
		return *m.RealName
	}
	return ""
}

func (m *CMsgDOTAMatch_Player) GetCustomGameData() *CMsgDOTAMatch_Player_CustomGameData {
	if m != nil {
		return m.CustomGameData
	}
	return nil
}

func (m *CMsgDOTAMatch_Player) GetActivePlusSubscription() bool {
	if m != nil && m.ActivePlusSubscription != nil {
		return *m.ActivePlusSubscription
	}
	return false
}

func (m *CMsgDOTAMatch_Player) GetNetWorth() uint32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetBotDifficulty() uint32 {
	if m != nil && m.BotDifficulty != nil {
		return *m.BotDifficulty
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetHeroPickOrder() uint32 {
	if m != nil && m.HeroPickOrder != nil {
		return *m.HeroPickOrder
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetHeroWasRandomed() bool {
	if m != nil && m.HeroWasRandomed != nil {
		return *m.HeroWasRandomed
	}
	return false
}

func (m *CMsgDOTAMatch_Player) GetHeroWasDotaPlusSuggestion() bool {
	if m != nil && m.HeroWasDotaPlusSuggestion != nil {
		return *m.HeroWasDotaPlusSuggestion
	}
	return false
}

func (m *CMsgDOTAMatch_Player) GetHeroDamageReceived() []*CMsgDOTAMatch_Player_HeroDamageReceived {
	if m != nil {
		return m.HeroDamageReceived
	}
	return nil
}

func (m *CMsgDOTAMatch_Player) GetHeroDamageDealt() []*CMsgDOTAMatch_Player_HeroDamageReceived {
	if m != nil {
		return m.HeroDamageDealt
	}
	return nil
}

func (m *CMsgDOTAMatch_Player) GetSecondsDead() uint32 {
	if m != nil && m.SecondsDead != nil {
		return *m.SecondsDead
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetGoldLostToDeath() uint32 {
	if m != nil && m.GoldLostToDeath != nil {
		return *m.GoldLostToDeath
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetLaneSelectionFlags() uint32 {
	if m != nil && m.LaneSelectionFlags != nil {
		return *m.LaneSelectionFlags
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetBountyRunes() uint32 {
	if m != nil && m.BountyRunes != nil {
		return *m.BountyRunes
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetOutpostsCaptured() uint32 {
	if m != nil && m.OutpostsCaptured != nil {
		return *m.OutpostsCaptured
	}
	return 0
}

func (m *CMsgDOTAMatch_Player) GetTeamNumber() DOTA_GC_TEAM {
	if m != nil && m.TeamNumber != nil {
		return *m.TeamNumber
	}
	return Default_CMsgDOTAMatch_Player_TeamNumber
}

func (m *CMsgDOTAMatch_Player) GetTeamSlot() uint32 {
	if m != nil && m.TeamSlot != nil {
		return *m.TeamSlot
	}
	return 0
}

type CMsgDOTAMatch_Player_CustomGameData struct {
	DotaTeam             *uint32  `protobuf:"varint,1,opt,name=dota_team,json=dotaTeam" json:"dota_team,omitempty"`
	Winner               *bool    `protobuf:"varint,2,opt,name=winner" json:"winner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAMatch_Player_CustomGameData) Reset()         { *m = CMsgDOTAMatch_Player_CustomGameData{} }
func (m *CMsgDOTAMatch_Player_CustomGameData) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatch_Player_CustomGameData) ProtoMessage()    {}
func (*CMsgDOTAMatch_Player_CustomGameData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{37, 0, 0}
}

func (m *CMsgDOTAMatch_Player_CustomGameData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatch_Player_CustomGameData.Unmarshal(m, b)
}
func (m *CMsgDOTAMatch_Player_CustomGameData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatch_Player_CustomGameData.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAMatch_Player_CustomGameData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatch_Player_CustomGameData.Merge(m, src)
}
func (m *CMsgDOTAMatch_Player_CustomGameData) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatch_Player_CustomGameData.Size(m)
}
func (m *CMsgDOTAMatch_Player_CustomGameData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatch_Player_CustomGameData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatch_Player_CustomGameData proto.InternalMessageInfo

func (m *CMsgDOTAMatch_Player_CustomGameData) GetDotaTeam() uint32 {
	if m != nil && m.DotaTeam != nil {
		return *m.DotaTeam
	}
	return 0
}

func (m *CMsgDOTAMatch_Player_CustomGameData) GetWinner() bool {
	if m != nil && m.Winner != nil {
		return *m.Winner
	}
	return false
}

type CMsgDOTAMatch_Player_HeroDamageReceived struct {
	PreReduction         *uint32                              `protobuf:"varint,1,opt,name=pre_reduction,json=preReduction" json:"pre_reduction,omitempty"`
	PostReduction        *uint32                              `protobuf:"varint,2,opt,name=post_reduction,json=postReduction" json:"post_reduction,omitempty"`
	DamageType           *CMsgDOTAMatch_Player_HeroDamageType `protobuf:"varint,3,opt,name=damage_type,json=damageType,enum=protocol.CMsgDOTAMatch_Player_HeroDamageType,def=0" json:"damage_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *CMsgDOTAMatch_Player_HeroDamageReceived) Reset() {
	*m = CMsgDOTAMatch_Player_HeroDamageReceived{}
}
func (m *CMsgDOTAMatch_Player_HeroDamageReceived) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatch_Player_HeroDamageReceived) ProtoMessage()    {}
func (*CMsgDOTAMatch_Player_HeroDamageReceived) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{37, 0, 1}
}

func (m *CMsgDOTAMatch_Player_HeroDamageReceived) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatch_Player_HeroDamageReceived.Unmarshal(m, b)
}
func (m *CMsgDOTAMatch_Player_HeroDamageReceived) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatch_Player_HeroDamageReceived.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAMatch_Player_HeroDamageReceived) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatch_Player_HeroDamageReceived.Merge(m, src)
}
func (m *CMsgDOTAMatch_Player_HeroDamageReceived) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatch_Player_HeroDamageReceived.Size(m)
}
func (m *CMsgDOTAMatch_Player_HeroDamageReceived) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatch_Player_HeroDamageReceived.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatch_Player_HeroDamageReceived proto.InternalMessageInfo

const Default_CMsgDOTAMatch_Player_HeroDamageReceived_DamageType CMsgDOTAMatch_Player_HeroDamageType = CMsgDOTAMatch_Player_HERO_DAMAGE_PHYSICAL

func (m *CMsgDOTAMatch_Player_HeroDamageReceived) GetPreReduction() uint32 {
	if m != nil && m.PreReduction != nil {
		return *m.PreReduction
	}
	return 0
}

func (m *CMsgDOTAMatch_Player_HeroDamageReceived) GetPostReduction() uint32 {
	if m != nil && m.PostReduction != nil {
		return *m.PostReduction
	}
	return 0
}

func (m *CMsgDOTAMatch_Player_HeroDamageReceived) GetDamageType() CMsgDOTAMatch_Player_HeroDamageType {
	if m != nil && m.DamageType != nil {
		return *m.DamageType
	}
	return Default_CMsgDOTAMatch_Player_HeroDamageReceived_DamageType
}

type CMsgDOTAMatch_BroadcasterInfo struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAMatch_BroadcasterInfo) Reset()         { *m = CMsgDOTAMatch_BroadcasterInfo{} }
func (m *CMsgDOTAMatch_BroadcasterInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatch_BroadcasterInfo) ProtoMessage()    {}
func (*CMsgDOTAMatch_BroadcasterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{37, 1}
}

func (m *CMsgDOTAMatch_BroadcasterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatch_BroadcasterInfo.Unmarshal(m, b)
}
func (m *CMsgDOTAMatch_BroadcasterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatch_BroadcasterInfo.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAMatch_BroadcasterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatch_BroadcasterInfo.Merge(m, src)
}
func (m *CMsgDOTAMatch_BroadcasterInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatch_BroadcasterInfo.Size(m)
}
func (m *CMsgDOTAMatch_BroadcasterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatch_BroadcasterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatch_BroadcasterInfo proto.InternalMessageInfo

func (m *CMsgDOTAMatch_BroadcasterInfo) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAMatch_BroadcasterInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CMsgDOTAMatch_BroadcasterChannel struct {
	CountryCode          *string                          `protobuf:"bytes,1,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Description          *string                          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	BroadcasterInfos     []*CMsgDOTAMatch_BroadcasterInfo `protobuf:"bytes,3,rep,name=broadcaster_infos,json=broadcasterInfos" json:"broadcaster_infos,omitempty"`
	LanguageCode         *string                          `protobuf:"bytes,4,opt,name=language_code,json=languageCode" json:"language_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CMsgDOTAMatch_BroadcasterChannel) Reset()         { *m = CMsgDOTAMatch_BroadcasterChannel{} }
func (m *CMsgDOTAMatch_BroadcasterChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatch_BroadcasterChannel) ProtoMessage()    {}
func (*CMsgDOTAMatch_BroadcasterChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{37, 2}
}

func (m *CMsgDOTAMatch_BroadcasterChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatch_BroadcasterChannel.Unmarshal(m, b)
}
func (m *CMsgDOTAMatch_BroadcasterChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatch_BroadcasterChannel.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAMatch_BroadcasterChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatch_BroadcasterChannel.Merge(m, src)
}
func (m *CMsgDOTAMatch_BroadcasterChannel) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatch_BroadcasterChannel.Size(m)
}
func (m *CMsgDOTAMatch_BroadcasterChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatch_BroadcasterChannel.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatch_BroadcasterChannel proto.InternalMessageInfo

func (m *CMsgDOTAMatch_BroadcasterChannel) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTAMatch_BroadcasterChannel) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *CMsgDOTAMatch_BroadcasterChannel) GetBroadcasterInfos() []*CMsgDOTAMatch_BroadcasterInfo {
	if m != nil {
		return m.BroadcasterInfos
	}
	return nil
}

func (m *CMsgDOTAMatch_BroadcasterChannel) GetLanguageCode() string {
	if m != nil && m.LanguageCode != nil {
		return *m.LanguageCode
	}
	return ""
}

type CMsgDOTAMatch_Coach struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	CoachName            *string  `protobuf:"bytes,2,opt,name=coach_name,json=coachName" json:"coach_name,omitempty"`
	CoachRating          *uint32  `protobuf:"varint,3,opt,name=coach_rating,json=coachRating" json:"coach_rating,omitempty"`
	CoachTeam            *uint32  `protobuf:"varint,4,opt,name=coach_team,json=coachTeam" json:"coach_team,omitempty"`
	CoachPartyId         *uint64  `protobuf:"varint,5,opt,name=coach_party_id,json=coachPartyId" json:"coach_party_id,omitempty"`
	IsPrivateCoach       *bool    `protobuf:"varint,6,opt,name=is_private_coach,json=isPrivateCoach" json:"is_private_coach,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAMatch_Coach) Reset()         { *m = CMsgDOTAMatch_Coach{} }
func (m *CMsgDOTAMatch_Coach) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatch_Coach) ProtoMessage()    {}
func (*CMsgDOTAMatch_Coach) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{37, 3}
}

func (m *CMsgDOTAMatch_Coach) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatch_Coach.Unmarshal(m, b)
}
func (m *CMsgDOTAMatch_Coach) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatch_Coach.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAMatch_Coach) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatch_Coach.Merge(m, src)
}
func (m *CMsgDOTAMatch_Coach) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatch_Coach.Size(m)
}
func (m *CMsgDOTAMatch_Coach) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatch_Coach.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatch_Coach proto.InternalMessageInfo

func (m *CMsgDOTAMatch_Coach) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAMatch_Coach) GetCoachName() string {
	if m != nil && m.CoachName != nil {
		return *m.CoachName
	}
	return ""
}

func (m *CMsgDOTAMatch_Coach) GetCoachRating() uint32 {
	if m != nil && m.CoachRating != nil {
		return *m.CoachRating
	}
	return 0
}

func (m *CMsgDOTAMatch_Coach) GetCoachTeam() uint32 {
	if m != nil && m.CoachTeam != nil {
		return *m.CoachTeam
	}
	return 0
}

func (m *CMsgDOTAMatch_Coach) GetCoachPartyId() uint64 {
	if m != nil && m.CoachPartyId != nil {
		return *m.CoachPartyId
	}
	return 0
}

func (m *CMsgDOTAMatch_Coach) GetIsPrivateCoach() bool {
	if m != nil && m.IsPrivateCoach != nil {
		return *m.IsPrivateCoach
	}
	return false
}

type CMsgDOTAMatch_CustomGameData struct {
	CustomGameId         *uint64  `protobuf:"varint,1,opt,name=custom_game_id,json=customGameId" json:"custom_game_id,omitempty"`
	MapName              *string  `protobuf:"bytes,2,opt,name=map_name,json=mapName" json:"map_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAMatch_CustomGameData) Reset()         { *m = CMsgDOTAMatch_CustomGameData{} }
func (m *CMsgDOTAMatch_CustomGameData) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatch_CustomGameData) ProtoMessage()    {}
func (*CMsgDOTAMatch_CustomGameData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{37, 4}
}

func (m *CMsgDOTAMatch_CustomGameData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatch_CustomGameData.Unmarshal(m, b)
}
func (m *CMsgDOTAMatch_CustomGameData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatch_CustomGameData.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAMatch_CustomGameData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatch_CustomGameData.Merge(m, src)
}
func (m *CMsgDOTAMatch_CustomGameData) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatch_CustomGameData.Size(m)
}
func (m *CMsgDOTAMatch_CustomGameData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatch_CustomGameData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatch_CustomGameData proto.InternalMessageInfo

func (m *CMsgDOTAMatch_CustomGameData) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

func (m *CMsgDOTAMatch_CustomGameData) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

type CMsgPlayerCard struct {
	AccountId            *uint32                        `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	StatModifier         []*CMsgPlayerCard_StatModifier `protobuf:"bytes,2,rep,name=stat_modifier,json=statModifier" json:"stat_modifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CMsgPlayerCard) Reset()         { *m = CMsgPlayerCard{} }
func (m *CMsgPlayerCard) String() string { return proto.CompactTextString(m) }
func (*CMsgPlayerCard) ProtoMessage()    {}
func (*CMsgPlayerCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{38}
}

func (m *CMsgPlayerCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPlayerCard.Unmarshal(m, b)
}
func (m *CMsgPlayerCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPlayerCard.Marshal(b, m, deterministic)
}
func (m *CMsgPlayerCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPlayerCard.Merge(m, src)
}
func (m *CMsgPlayerCard) XXX_Size() int {
	return xxx_messageInfo_CMsgPlayerCard.Size(m)
}
func (m *CMsgPlayerCard) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPlayerCard.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPlayerCard proto.InternalMessageInfo

func (m *CMsgPlayerCard) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgPlayerCard) GetStatModifier() []*CMsgPlayerCard_StatModifier {
	if m != nil {
		return m.StatModifier
	}
	return nil
}

type CMsgPlayerCard_StatModifier struct {
	Stat                 *uint32  `protobuf:"varint,1,opt,name=stat" json:"stat,omitempty"`
	Value                *uint32  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgPlayerCard_StatModifier) Reset()         { *m = CMsgPlayerCard_StatModifier{} }
func (m *CMsgPlayerCard_StatModifier) String() string { return proto.CompactTextString(m) }
func (*CMsgPlayerCard_StatModifier) ProtoMessage()    {}
func (*CMsgPlayerCard_StatModifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{38, 0}
}

func (m *CMsgPlayerCard_StatModifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPlayerCard_StatModifier.Unmarshal(m, b)
}
func (m *CMsgPlayerCard_StatModifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPlayerCard_StatModifier.Marshal(b, m, deterministic)
}
func (m *CMsgPlayerCard_StatModifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPlayerCard_StatModifier.Merge(m, src)
}
func (m *CMsgPlayerCard_StatModifier) XXX_Size() int {
	return xxx_messageInfo_CMsgPlayerCard_StatModifier.Size(m)
}
func (m *CMsgPlayerCard_StatModifier) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPlayerCard_StatModifier.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPlayerCard_StatModifier proto.InternalMessageInfo

func (m *CMsgPlayerCard_StatModifier) GetStat() uint32 {
	if m != nil && m.Stat != nil {
		return *m.Stat
	}
	return 0
}

func (m *CMsgPlayerCard_StatModifier) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type CMsgDOTAFantasyPlayerStats struct {
	PlayerAccountId        *uint32  `protobuf:"varint,1,opt,name=player_account_id,json=playerAccountId" json:"player_account_id,omitempty"`
	MatchId                *uint64  `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	MatchCompleted         *bool    `protobuf:"varint,3,opt,name=match_completed,json=matchCompleted" json:"match_completed,omitempty"`
	TeamId                 *uint32  `protobuf:"varint,4,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	LeagueId               *uint32  `protobuf:"varint,5,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	Delay                  *uint32  `protobuf:"varint,6,opt,name=delay" json:"delay,omitempty"`
	SeriesId               *uint32  `protobuf:"varint,7,opt,name=series_id,json=seriesId" json:"series_id,omitempty"`
	SeriesType             *uint32  `protobuf:"varint,8,opt,name=series_type,json=seriesType" json:"series_type,omitempty"`
	Kills                  *uint32  `protobuf:"varint,10,opt,name=kills" json:"kills,omitempty"`
	Deaths                 *uint32  `protobuf:"varint,11,opt,name=deaths" json:"deaths,omitempty"`
	Cs                     *uint32  `protobuf:"varint,12,opt,name=cs" json:"cs,omitempty"`
	Gpm                    *float32 `protobuf:"fixed32,13,opt,name=gpm" json:"gpm,omitempty"`
	TowerKills             *uint32  `protobuf:"varint,14,opt,name=tower_kills,json=towerKills" json:"tower_kills,omitempty"`
	RoshanKills            *uint32  `protobuf:"varint,15,opt,name=roshan_kills,json=roshanKills" json:"roshan_kills,omitempty"`
	TeamfightParticipation *float32 `protobuf:"fixed32,16,opt,name=teamfight_participation,json=teamfightParticipation" json:"teamfight_participation,omitempty"`
	WardsPlaced            *uint32  `protobuf:"varint,17,opt,name=wards_placed,json=wardsPlaced" json:"wards_placed,omitempty"`
	CampsStacked           *uint32  `protobuf:"varint,18,opt,name=camps_stacked,json=campsStacked" json:"camps_stacked,omitempty"`
	RunesGrabbed           *uint32  `protobuf:"varint,19,opt,name=runes_grabbed,json=runesGrabbed" json:"runes_grabbed,omitempty"`
	FirstBlood             *uint32  `protobuf:"varint,20,opt,name=first_blood,json=firstBlood" json:"first_blood,omitempty"`
	Stuns                  *float32 `protobuf:"fixed32,21,opt,name=stuns" json:"stuns,omitempty"`
	Smokes                 *uint32  `protobuf:"varint,22,opt,name=smokes" json:"smokes,omitempty"`
	NeutralTokens          *uint32  `protobuf:"varint,23,opt,name=neutral_tokens,json=neutralTokens" json:"neutral_tokens,omitempty"`
	Watchers               *uint32  `protobuf:"varint,24,opt,name=watchers" json:"watchers,omitempty"`
	Lotuses                *uint32  `protobuf:"varint,25,opt,name=lotuses" json:"lotuses,omitempty"`
	Tormentors             *uint32  `protobuf:"varint,26,opt,name=tormentors" json:"tormentors,omitempty"`
	CourierKills           *uint32  `protobuf:"varint,27,opt,name=courier_kills,json=courierKills" json:"courier_kills,omitempty"`
	TitleStats             *uint64  `protobuf:"fixed64,28,opt,name=title_stats,json=titleStats" json:"title_stats,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerStats) Reset()         { *m = CMsgDOTAFantasyPlayerStats{} }
func (m *CMsgDOTAFantasyPlayerStats) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerStats) ProtoMessage()    {}
func (*CMsgDOTAFantasyPlayerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{39}
}

func (m *CMsgDOTAFantasyPlayerStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStats.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStats.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerStats.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerStats) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStats.Size(m)
}
func (m *CMsgDOTAFantasyPlayerStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerStats proto.InternalMessageInfo

func (m *CMsgDOTAFantasyPlayerStats) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetMatchCompleted() bool {
	if m != nil && m.MatchCompleted != nil {
		return *m.MatchCompleted
	}
	return false
}

func (m *CMsgDOTAFantasyPlayerStats) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetDelay() uint32 {
	if m != nil && m.Delay != nil {
		return *m.Delay
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetSeriesId() uint32 {
	if m != nil && m.SeriesId != nil {
		return *m.SeriesId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetCs() uint32 {
	if m != nil && m.Cs != nil {
		return *m.Cs
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetGpm() float32 {
	if m != nil && m.Gpm != nil {
		return *m.Gpm
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetTowerKills() uint32 {
	if m != nil && m.TowerKills != nil {
		return *m.TowerKills
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetRoshanKills() uint32 {
	if m != nil && m.RoshanKills != nil {
		return *m.RoshanKills
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetTeamfightParticipation() float32 {
	if m != nil && m.TeamfightParticipation != nil {
		return *m.TeamfightParticipation
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetWardsPlaced() uint32 {
	if m != nil && m.WardsPlaced != nil {
		return *m.WardsPlaced
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetCampsStacked() uint32 {
	if m != nil && m.CampsStacked != nil {
		return *m.CampsStacked
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetRunesGrabbed() uint32 {
	if m != nil && m.RunesGrabbed != nil {
		return *m.RunesGrabbed
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetFirstBlood() uint32 {
	if m != nil && m.FirstBlood != nil {
		return *m.FirstBlood
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetStuns() float32 {
	if m != nil && m.Stuns != nil {
		return *m.Stuns
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetSmokes() uint32 {
	if m != nil && m.Smokes != nil {
		return *m.Smokes
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetNeutralTokens() uint32 {
	if m != nil && m.NeutralTokens != nil {
		return *m.NeutralTokens
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetWatchers() uint32 {
	if m != nil && m.Watchers != nil {
		return *m.Watchers
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetLotuses() uint32 {
	if m != nil && m.Lotuses != nil {
		return *m.Lotuses
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetTormentors() uint32 {
	if m != nil && m.Tormentors != nil {
		return *m.Tormentors
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetCourierKills() uint32 {
	if m != nil && m.CourierKills != nil {
		return *m.CourierKills
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStats) GetTitleStats() uint64 {
	if m != nil && m.TitleStats != nil {
		return *m.TitleStats
	}
	return 0
}

type CMsgDOTAFantasyPlayerMatchStats struct {
	Matches              []*CMsgDOTAFantasyPlayerStats `protobuf:"bytes,1,rep,name=matches" json:"matches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerMatchStats) Reset()         { *m = CMsgDOTAFantasyPlayerMatchStats{} }
func (m *CMsgDOTAFantasyPlayerMatchStats) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerMatchStats) ProtoMessage()    {}
func (*CMsgDOTAFantasyPlayerMatchStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{40}
}

func (m *CMsgDOTAFantasyPlayerMatchStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerMatchStats.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerMatchStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerMatchStats.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerMatchStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerMatchStats.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerMatchStats) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerMatchStats.Size(m)
}
func (m *CMsgDOTAFantasyPlayerMatchStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerMatchStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerMatchStats proto.InternalMessageInfo

func (m *CMsgDOTAFantasyPlayerMatchStats) GetMatches() []*CMsgDOTAFantasyPlayerStats {
	if m != nil {
		return m.Matches
	}
	return nil
}

type CMsgDOTABotDebugInfo struct {
	Bots                 []*CMsgDOTABotDebugInfo_Bot `protobuf:"bytes,1,rep,name=bots" json:"bots,omitempty"`
	DesirePushLaneTop    *float32                    `protobuf:"fixed32,2,opt,name=desire_push_lane_top,json=desirePushLaneTop" json:"desire_push_lane_top,omitempty"`
	DesirePushLaneMid    *float32                    `protobuf:"fixed32,3,opt,name=desire_push_lane_mid,json=desirePushLaneMid" json:"desire_push_lane_mid,omitempty"`
	DesirePushLaneBot    *float32                    `protobuf:"fixed32,4,opt,name=desire_push_lane_bot,json=desirePushLaneBot" json:"desire_push_lane_bot,omitempty"`
	DesireDefendLaneTop  *float32                    `protobuf:"fixed32,5,opt,name=desire_defend_lane_top,json=desireDefendLaneTop" json:"desire_defend_lane_top,omitempty"`
	DesireDefendLaneMid  *float32                    `protobuf:"fixed32,6,opt,name=desire_defend_lane_mid,json=desireDefendLaneMid" json:"desire_defend_lane_mid,omitempty"`
	DesireDefendLaneBot  *float32                    `protobuf:"fixed32,7,opt,name=desire_defend_lane_bot,json=desireDefendLaneBot" json:"desire_defend_lane_bot,omitempty"`
	DesireFarmLaneTop    *float32                    `protobuf:"fixed32,8,opt,name=desire_farm_lane_top,json=desireFarmLaneTop" json:"desire_farm_lane_top,omitempty"`
	DesireFarmLaneMid    *float32                    `protobuf:"fixed32,9,opt,name=desire_farm_lane_mid,json=desireFarmLaneMid" json:"desire_farm_lane_mid,omitempty"`
	DesireFarmLaneBot    *float32                    `protobuf:"fixed32,10,opt,name=desire_farm_lane_bot,json=desireFarmLaneBot" json:"desire_farm_lane_bot,omitempty"`
	DesireFarmRoshan     *float32                    `protobuf:"fixed32,11,opt,name=desire_farm_roshan,json=desireFarmRoshan" json:"desire_farm_roshan,omitempty"`
	ExecutionTime        *float32                    `protobuf:"fixed32,12,opt,name=execution_time,json=executionTime" json:"execution_time,omitempty"`
	RuneStatus           []uint32                    `protobuf:"varint,13,rep,name=rune_status,json=runeStatus" json:"rune_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CMsgDOTABotDebugInfo) Reset()         { *m = CMsgDOTABotDebugInfo{} }
func (m *CMsgDOTABotDebugInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTABotDebugInfo) ProtoMessage()    {}
func (*CMsgDOTABotDebugInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{41}
}

func (m *CMsgDOTABotDebugInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTABotDebugInfo.Unmarshal(m, b)
}
func (m *CMsgDOTABotDebugInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTABotDebugInfo.Marshal(b, m, deterministic)
}
func (m *CMsgDOTABotDebugInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTABotDebugInfo.Merge(m, src)
}
func (m *CMsgDOTABotDebugInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTABotDebugInfo.Size(m)
}
func (m *CMsgDOTABotDebugInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTABotDebugInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTABotDebugInfo proto.InternalMessageInfo

func (m *CMsgDOTABotDebugInfo) GetBots() []*CMsgDOTABotDebugInfo_Bot {
	if m != nil {
		return m.Bots
	}
	return nil
}

func (m *CMsgDOTABotDebugInfo) GetDesirePushLaneTop() float32 {
	if m != nil && m.DesirePushLaneTop != nil {
		return *m.DesirePushLaneTop
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo) GetDesirePushLaneMid() float32 {
	if m != nil && m.DesirePushLaneMid != nil {
		return *m.DesirePushLaneMid
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo) GetDesirePushLaneBot() float32 {
	if m != nil && m.DesirePushLaneBot != nil {
		return *m.DesirePushLaneBot
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo) GetDesireDefendLaneTop() float32 {
	if m != nil && m.DesireDefendLaneTop != nil {
		return *m.DesireDefendLaneTop
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo) GetDesireDefendLaneMid() float32 {
	if m != nil && m.DesireDefendLaneMid != nil {
		return *m.DesireDefendLaneMid
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo) GetDesireDefendLaneBot() float32 {
	if m != nil && m.DesireDefendLaneBot != nil {
		return *m.DesireDefendLaneBot
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo) GetDesireFarmLaneTop() float32 {
	if m != nil && m.DesireFarmLaneTop != nil {
		return *m.DesireFarmLaneTop
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo) GetDesireFarmLaneMid() float32 {
	if m != nil && m.DesireFarmLaneMid != nil {
		return *m.DesireFarmLaneMid
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo) GetDesireFarmLaneBot() float32 {
	if m != nil && m.DesireFarmLaneBot != nil {
		return *m.DesireFarmLaneBot
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo) GetDesireFarmRoshan() float32 {
	if m != nil && m.DesireFarmRoshan != nil {
		return *m.DesireFarmRoshan
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo) GetExecutionTime() float32 {
	if m != nil && m.ExecutionTime != nil {
		return *m.ExecutionTime
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo) GetRuneStatus() []uint32 {
	if m != nil {
		return m.RuneStatus
	}
	return nil
}

type CMsgDOTABotDebugInfo_Bot struct {
	PlayerOwnerId        *int32                           `protobuf:"varint,1,opt,name=player_owner_id,json=playerOwnerId,def=-1" json:"player_owner_id,omitempty"`
	HeroId               *uint32                          `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Difficulty           *uint32                          `protobuf:"varint,3,opt,name=difficulty" json:"difficulty,omitempty"`
	PowerCurrent         *uint32                          `protobuf:"varint,4,opt,name=power_current,json=powerCurrent" json:"power_current,omitempty"`
	PowerMax             *uint32                          `protobuf:"varint,5,opt,name=power_max,json=powerMax" json:"power_max,omitempty"`
	MoveTargetX          *uint32                          `protobuf:"varint,6,opt,name=move_target_x,json=moveTargetX" json:"move_target_x,omitempty"`
	MoveTargetY          *uint32                          `protobuf:"varint,7,opt,name=move_target_y,json=moveTargetY" json:"move_target_y,omitempty"`
	MoveTargetZ          *uint32                          `protobuf:"varint,8,opt,name=move_target_z,json=moveTargetZ" json:"move_target_z,omitempty"`
	ActiveModeId         *uint32                          `protobuf:"varint,9,opt,name=active_mode_id,json=activeModeId" json:"active_mode_id,omitempty"`
	ExecutionTime        *float32                         `protobuf:"fixed32,10,opt,name=execution_time,json=executionTime" json:"execution_time,omitempty"`
	Modes                []*CMsgDOTABotDebugInfo_Bot_Mode `protobuf:"bytes,11,rep,name=modes" json:"modes,omitempty"`
	Action               *CMsgDOTABotDebugInfo_Bot_Action `protobuf:"bytes,12,opt,name=action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CMsgDOTABotDebugInfo_Bot) Reset()         { *m = CMsgDOTABotDebugInfo_Bot{} }
func (m *CMsgDOTABotDebugInfo_Bot) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTABotDebugInfo_Bot) ProtoMessage()    {}
func (*CMsgDOTABotDebugInfo_Bot) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{41, 0}
}

func (m *CMsgDOTABotDebugInfo_Bot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTABotDebugInfo_Bot.Unmarshal(m, b)
}
func (m *CMsgDOTABotDebugInfo_Bot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTABotDebugInfo_Bot.Marshal(b, m, deterministic)
}
func (m *CMsgDOTABotDebugInfo_Bot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTABotDebugInfo_Bot.Merge(m, src)
}
func (m *CMsgDOTABotDebugInfo_Bot) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTABotDebugInfo_Bot.Size(m)
}
func (m *CMsgDOTABotDebugInfo_Bot) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTABotDebugInfo_Bot.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTABotDebugInfo_Bot proto.InternalMessageInfo

const Default_CMsgDOTABotDebugInfo_Bot_PlayerOwnerId int32 = -1

func (m *CMsgDOTABotDebugInfo_Bot) GetPlayerOwnerId() int32 {
	if m != nil && m.PlayerOwnerId != nil {
		return *m.PlayerOwnerId
	}
	return Default_CMsgDOTABotDebugInfo_Bot_PlayerOwnerId
}

func (m *CMsgDOTABotDebugInfo_Bot) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot) GetDifficulty() uint32 {
	if m != nil && m.Difficulty != nil {
		return *m.Difficulty
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot) GetPowerCurrent() uint32 {
	if m != nil && m.PowerCurrent != nil {
		return *m.PowerCurrent
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot) GetPowerMax() uint32 {
	if m != nil && m.PowerMax != nil {
		return *m.PowerMax
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot) GetMoveTargetX() uint32 {
	if m != nil && m.MoveTargetX != nil {
		return *m.MoveTargetX
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot) GetMoveTargetY() uint32 {
	if m != nil && m.MoveTargetY != nil {
		return *m.MoveTargetY
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot) GetMoveTargetZ() uint32 {
	if m != nil && m.MoveTargetZ != nil {
		return *m.MoveTargetZ
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot) GetActiveModeId() uint32 {
	if m != nil && m.ActiveModeId != nil {
		return *m.ActiveModeId
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot) GetExecutionTime() float32 {
	if m != nil && m.ExecutionTime != nil {
		return *m.ExecutionTime
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot) GetModes() []*CMsgDOTABotDebugInfo_Bot_Mode {
	if m != nil {
		return m.Modes
	}
	return nil
}

func (m *CMsgDOTABotDebugInfo_Bot) GetAction() *CMsgDOTABotDebugInfo_Bot_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

type CMsgDOTABotDebugInfo_Bot_Mode struct {
	ModeId               *uint32  `protobuf:"varint,1,opt,name=mode_id,json=modeId" json:"mode_id,omitempty"`
	Desire               *float32 `protobuf:"fixed32,2,opt,name=desire" json:"desire,omitempty"`
	TargetEntity         *int32   `protobuf:"varint,3,opt,name=target_entity,json=targetEntity,def=-1" json:"target_entity,omitempty"`
	TargetX              *uint32  `protobuf:"varint,4,opt,name=target_x,json=targetX" json:"target_x,omitempty"`
	TargetY              *uint32  `protobuf:"varint,5,opt,name=target_y,json=targetY" json:"target_y,omitempty"`
	TargetZ              *uint32  `protobuf:"varint,6,opt,name=target_z,json=targetZ" json:"target_z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTABotDebugInfo_Bot_Mode) Reset()         { *m = CMsgDOTABotDebugInfo_Bot_Mode{} }
func (m *CMsgDOTABotDebugInfo_Bot_Mode) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTABotDebugInfo_Bot_Mode) ProtoMessage()    {}
func (*CMsgDOTABotDebugInfo_Bot_Mode) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{41, 0, 0}
}

func (m *CMsgDOTABotDebugInfo_Bot_Mode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Mode.Unmarshal(m, b)
}
func (m *CMsgDOTABotDebugInfo_Bot_Mode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Mode.Marshal(b, m, deterministic)
}
func (m *CMsgDOTABotDebugInfo_Bot_Mode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Mode.Merge(m, src)
}
func (m *CMsgDOTABotDebugInfo_Bot_Mode) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Mode.Size(m)
}
func (m *CMsgDOTABotDebugInfo_Bot_Mode) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Mode.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Mode proto.InternalMessageInfo

const Default_CMsgDOTABotDebugInfo_Bot_Mode_TargetEntity int32 = -1

func (m *CMsgDOTABotDebugInfo_Bot_Mode) GetModeId() uint32 {
	if m != nil && m.ModeId != nil {
		return *m.ModeId
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot_Mode) GetDesire() float32 {
	if m != nil && m.Desire != nil {
		return *m.Desire
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot_Mode) GetTargetEntity() int32 {
	if m != nil && m.TargetEntity != nil {
		return *m.TargetEntity
	}
	return Default_CMsgDOTABotDebugInfo_Bot_Mode_TargetEntity
}

func (m *CMsgDOTABotDebugInfo_Bot_Mode) GetTargetX() uint32 {
	if m != nil && m.TargetX != nil {
		return *m.TargetX
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot_Mode) GetTargetY() uint32 {
	if m != nil && m.TargetY != nil {
		return *m.TargetY
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot_Mode) GetTargetZ() uint32 {
	if m != nil && m.TargetZ != nil {
		return *m.TargetZ
	}
	return 0
}

type CMsgDOTABotDebugInfo_Bot_Action struct {
	ActionId             *uint32  `protobuf:"varint,1,opt,name=action_id,json=actionId" json:"action_id,omitempty"`
	ActionTarget         *string  `protobuf:"bytes,2,opt,name=action_target,json=actionTarget" json:"action_target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTABotDebugInfo_Bot_Action) Reset()         { *m = CMsgDOTABotDebugInfo_Bot_Action{} }
func (m *CMsgDOTABotDebugInfo_Bot_Action) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTABotDebugInfo_Bot_Action) ProtoMessage()    {}
func (*CMsgDOTABotDebugInfo_Bot_Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{41, 0, 1}
}

func (m *CMsgDOTABotDebugInfo_Bot_Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Action.Unmarshal(m, b)
}
func (m *CMsgDOTABotDebugInfo_Bot_Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Action.Marshal(b, m, deterministic)
}
func (m *CMsgDOTABotDebugInfo_Bot_Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Action.Merge(m, src)
}
func (m *CMsgDOTABotDebugInfo_Bot_Action) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Action.Size(m)
}
func (m *CMsgDOTABotDebugInfo_Bot_Action) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Action.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTABotDebugInfo_Bot_Action proto.InternalMessageInfo

func (m *CMsgDOTABotDebugInfo_Bot_Action) GetActionId() uint32 {
	if m != nil && m.ActionId != nil {
		return *m.ActionId
	}
	return 0
}

func (m *CMsgDOTABotDebugInfo_Bot_Action) GetActionTarget() string {
	if m != nil && m.ActionTarget != nil {
		return *m.ActionTarget
	}
	return ""
}

type CMsgSuccessfulHero struct {
	HeroId               *uint32  `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	WinPercent           *float32 `protobuf:"fixed32,2,opt,name=win_percent,json=winPercent" json:"win_percent,omitempty"`
	LongestStreak        *uint32  `protobuf:"varint,3,opt,name=longest_streak,json=longestStreak" json:"longest_streak,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSuccessfulHero) Reset()         { *m = CMsgSuccessfulHero{} }
func (m *CMsgSuccessfulHero) String() string { return proto.CompactTextString(m) }
func (*CMsgSuccessfulHero) ProtoMessage()    {}
func (*CMsgSuccessfulHero) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{42}
}

func (m *CMsgSuccessfulHero) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSuccessfulHero.Unmarshal(m, b)
}
func (m *CMsgSuccessfulHero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSuccessfulHero.Marshal(b, m, deterministic)
}
func (m *CMsgSuccessfulHero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSuccessfulHero.Merge(m, src)
}
func (m *CMsgSuccessfulHero) XXX_Size() int {
	return xxx_messageInfo_CMsgSuccessfulHero.Size(m)
}
func (m *CMsgSuccessfulHero) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSuccessfulHero.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSuccessfulHero proto.InternalMessageInfo

func (m *CMsgSuccessfulHero) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgSuccessfulHero) GetWinPercent() float32 {
	if m != nil && m.WinPercent != nil {
		return *m.WinPercent
	}
	return 0
}

func (m *CMsgSuccessfulHero) GetLongestStreak() uint32 {
	if m != nil && m.LongestStreak != nil {
		return *m.LongestStreak
	}
	return 0
}

type CMsgRecentMatchInfo struct {
	MatchId              *uint64        `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	GameMode             *DOTA_GameMode `protobuf:"varint,2,opt,name=game_mode,json=gameMode,enum=protocol.DOTA_GameMode,def=0" json:"game_mode,omitempty"`
	Kills                *uint32        `protobuf:"varint,3,opt,name=kills" json:"kills,omitempty"`
	Deaths               *uint32        `protobuf:"varint,4,opt,name=deaths" json:"deaths,omitempty"`
	Assists              *uint32        `protobuf:"varint,5,opt,name=assists" json:"assists,omitempty"`
	Duration             *uint32        `protobuf:"varint,6,opt,name=duration" json:"duration,omitempty"`
	PlayerSlot           *uint32        `protobuf:"varint,7,opt,name=player_slot,json=playerSlot" json:"player_slot,omitempty"`
	MatchOutcome         *EMatchOutcome `protobuf:"varint,8,opt,name=match_outcome,json=matchOutcome,enum=protocol.EMatchOutcome,def=0" json:"match_outcome,omitempty"`
	Timestamp            *uint32        `protobuf:"varint,9,opt,name=timestamp" json:"timestamp,omitempty"`
	LobbyType            *uint32        `protobuf:"varint,10,opt,name=lobby_type,json=lobbyType" json:"lobby_type,omitempty"`
	TeamNumber           *uint32        `protobuf:"varint,11,opt,name=team_number,json=teamNumber" json:"team_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CMsgRecentMatchInfo) Reset()         { *m = CMsgRecentMatchInfo{} }
func (m *CMsgRecentMatchInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgRecentMatchInfo) ProtoMessage()    {}
func (*CMsgRecentMatchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{43}
}

func (m *CMsgRecentMatchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgRecentMatchInfo.Unmarshal(m, b)
}
func (m *CMsgRecentMatchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgRecentMatchInfo.Marshal(b, m, deterministic)
}
func (m *CMsgRecentMatchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgRecentMatchInfo.Merge(m, src)
}
func (m *CMsgRecentMatchInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgRecentMatchInfo.Size(m)
}
func (m *CMsgRecentMatchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgRecentMatchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgRecentMatchInfo proto.InternalMessageInfo

const Default_CMsgRecentMatchInfo_GameMode DOTA_GameMode = DOTA_GameMode_DOTA_GAMEMODE_NONE
const Default_CMsgRecentMatchInfo_MatchOutcome EMatchOutcome = EMatchOutcome_k_EMatchOutcome_Unknown

func (m *CMsgRecentMatchInfo) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgRecentMatchInfo) GetGameMode() DOTA_GameMode {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return Default_CMsgRecentMatchInfo_GameMode
}

func (m *CMsgRecentMatchInfo) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgRecentMatchInfo) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgRecentMatchInfo) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgRecentMatchInfo) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgRecentMatchInfo) GetPlayerSlot() uint32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CMsgRecentMatchInfo) GetMatchOutcome() EMatchOutcome {
	if m != nil && m.MatchOutcome != nil {
		return *m.MatchOutcome
	}
	return Default_CMsgRecentMatchInfo_MatchOutcome
}

func (m *CMsgRecentMatchInfo) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgRecentMatchInfo) GetLobbyType() uint32 {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return 0
}

func (m *CMsgRecentMatchInfo) GetTeamNumber() uint32 {
	if m != nil && m.TeamNumber != nil {
		return *m.TeamNumber
	}
	return 0
}

type CMsgMatchTips struct {
	Tips                 []*CMsgMatchTips_SingleTip `protobuf:"bytes,2,rep,name=tips" json:"tips,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CMsgMatchTips) Reset()         { *m = CMsgMatchTips{} }
func (m *CMsgMatchTips) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchTips) ProtoMessage()    {}
func (*CMsgMatchTips) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{44}
}

func (m *CMsgMatchTips) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgMatchTips.Unmarshal(m, b)
}
func (m *CMsgMatchTips) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgMatchTips.Marshal(b, m, deterministic)
}
func (m *CMsgMatchTips) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgMatchTips.Merge(m, src)
}
func (m *CMsgMatchTips) XXX_Size() int {
	return xxx_messageInfo_CMsgMatchTips.Size(m)
}
func (m *CMsgMatchTips) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgMatchTips.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgMatchTips proto.InternalMessageInfo

func (m *CMsgMatchTips) GetTips() []*CMsgMatchTips_SingleTip {
	if m != nil {
		return m.Tips
	}
	return nil
}

type CMsgMatchTips_SingleTip struct {
	SourceAccountId      *uint32  `protobuf:"varint,1,opt,name=source_account_id,json=sourceAccountId" json:"source_account_id,omitempty"`
	TargetAccountId      *uint32  `protobuf:"varint,2,opt,name=target_account_id,json=targetAccountId" json:"target_account_id,omitempty"`
	TipAmount            *uint32  `protobuf:"varint,3,opt,name=tip_amount,json=tipAmount" json:"tip_amount,omitempty"`
	EventId              *EEvent  `protobuf:"varint,4,opt,name=event_id,json=eventId,enum=protocol.EEvent,def=0" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgMatchTips_SingleTip) Reset()         { *m = CMsgMatchTips_SingleTip{} }
func (m *CMsgMatchTips_SingleTip) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchTips_SingleTip) ProtoMessage()    {}
func (*CMsgMatchTips_SingleTip) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{44, 0}
}

func (m *CMsgMatchTips_SingleTip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgMatchTips_SingleTip.Unmarshal(m, b)
}
func (m *CMsgMatchTips_SingleTip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgMatchTips_SingleTip.Marshal(b, m, deterministic)
}
func (m *CMsgMatchTips_SingleTip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgMatchTips_SingleTip.Merge(m, src)
}
func (m *CMsgMatchTips_SingleTip) XXX_Size() int {
	return xxx_messageInfo_CMsgMatchTips_SingleTip.Size(m)
}
func (m *CMsgMatchTips_SingleTip) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgMatchTips_SingleTip.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgMatchTips_SingleTip proto.InternalMessageInfo

const Default_CMsgMatchTips_SingleTip_EventId EEvent = EEvent_EVENT_ID_NONE

func (m *CMsgMatchTips_SingleTip) GetSourceAccountId() uint32 {
	if m != nil && m.SourceAccountId != nil {
		return *m.SourceAccountId
	}
	return 0
}

func (m *CMsgMatchTips_SingleTip) GetTargetAccountId() uint32 {
	if m != nil && m.TargetAccountId != nil {
		return *m.TargetAccountId
	}
	return 0
}

func (m *CMsgMatchTips_SingleTip) GetTipAmount() uint32 {
	if m != nil && m.TipAmount != nil {
		return *m.TipAmount
	}
	return 0
}

func (m *CMsgMatchTips_SingleTip) GetEventId() EEvent {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return Default_CMsgMatchTips_SingleTip_EventId
}

type CMsgDOTAMatchMinimal struct {
	MatchId              *uint64                        `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	StartTime            *uint32                        `protobuf:"fixed32,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Duration             *uint32                        `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	GameMode             *DOTA_GameMode                 `protobuf:"varint,4,opt,name=game_mode,json=gameMode,enum=protocol.DOTA_GameMode,def=0" json:"game_mode,omitempty"`
	Players              []*CMsgDOTAMatchMinimal_Player `protobuf:"bytes,6,rep,name=players" json:"players,omitempty"`
	Tourney              *CMsgDOTAMatchMinimal_Tourney  `protobuf:"bytes,7,opt,name=tourney" json:"tourney,omitempty"`
	MatchOutcome         *EMatchOutcome                 `protobuf:"varint,8,opt,name=match_outcome,json=matchOutcome,enum=protocol.EMatchOutcome,def=0" json:"match_outcome,omitempty"`
	RadiantScore         *uint32                        `protobuf:"varint,9,opt,name=radiant_score,json=radiantScore" json:"radiant_score,omitempty"`
	DireScore            *uint32                        `protobuf:"varint,10,opt,name=dire_score,json=direScore" json:"dire_score,omitempty"`
	LobbyType            *uint32                        `protobuf:"varint,11,opt,name=lobby_type,json=lobbyType" json:"lobby_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CMsgDOTAMatchMinimal) Reset()         { *m = CMsgDOTAMatchMinimal{} }
func (m *CMsgDOTAMatchMinimal) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatchMinimal) ProtoMessage()    {}
func (*CMsgDOTAMatchMinimal) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{45}
}

func (m *CMsgDOTAMatchMinimal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatchMinimal.Unmarshal(m, b)
}
func (m *CMsgDOTAMatchMinimal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatchMinimal.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAMatchMinimal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatchMinimal.Merge(m, src)
}
func (m *CMsgDOTAMatchMinimal) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatchMinimal.Size(m)
}
func (m *CMsgDOTAMatchMinimal) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatchMinimal.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatchMinimal proto.InternalMessageInfo

const Default_CMsgDOTAMatchMinimal_GameMode DOTA_GameMode = DOTA_GameMode_DOTA_GAMEMODE_NONE
const Default_CMsgDOTAMatchMinimal_MatchOutcome EMatchOutcome = EMatchOutcome_k_EMatchOutcome_Unknown

func (m *CMsgDOTAMatchMinimal) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal) GetGameMode() DOTA_GameMode {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return Default_CMsgDOTAMatchMinimal_GameMode
}

func (m *CMsgDOTAMatchMinimal) GetPlayers() []*CMsgDOTAMatchMinimal_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgDOTAMatchMinimal) GetTourney() *CMsgDOTAMatchMinimal_Tourney {
	if m != nil {
		return m.Tourney
	}
	return nil
}

func (m *CMsgDOTAMatchMinimal) GetMatchOutcome() EMatchOutcome {
	if m != nil && m.MatchOutcome != nil {
		return *m.MatchOutcome
	}
	return Default_CMsgDOTAMatchMinimal_MatchOutcome
}

func (m *CMsgDOTAMatchMinimal) GetRadiantScore() uint32 {
	if m != nil && m.RadiantScore != nil {
		return *m.RadiantScore
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal) GetDireScore() uint32 {
	if m != nil && m.DireScore != nil {
		return *m.DireScore
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal) GetLobbyType() uint32 {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return 0
}

type CMsgDOTAMatchMinimal_Player struct {
	AccountId            *uint32       `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	HeroId               *uint32       `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Kills                *uint32       `protobuf:"varint,3,opt,name=kills" json:"kills,omitempty"`
	Deaths               *uint32       `protobuf:"varint,4,opt,name=deaths" json:"deaths,omitempty"`
	Assists              *uint32       `protobuf:"varint,5,opt,name=assists" json:"assists,omitempty"`
	Items                []int32       `protobuf:"varint,6,rep,name=items" json:"items,omitempty"`
	PlayerSlot           *uint32       `protobuf:"varint,7,opt,name=player_slot,json=playerSlot" json:"player_slot,omitempty"`
	ProName              *string       `protobuf:"bytes,8,opt,name=pro_name,json=proName" json:"pro_name,omitempty"`
	Level                *uint32       `protobuf:"varint,9,opt,name=level" json:"level,omitempty"`
	TeamNumber           *DOTA_GC_TEAM `protobuf:"varint,10,opt,name=team_number,json=teamNumber,enum=protocol.DOTA_GC_TEAM,def=0" json:"team_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CMsgDOTAMatchMinimal_Player) Reset()         { *m = CMsgDOTAMatchMinimal_Player{} }
func (m *CMsgDOTAMatchMinimal_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatchMinimal_Player) ProtoMessage()    {}
func (*CMsgDOTAMatchMinimal_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{45, 0}
}

func (m *CMsgDOTAMatchMinimal_Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Player.Unmarshal(m, b)
}
func (m *CMsgDOTAMatchMinimal_Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Player.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAMatchMinimal_Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatchMinimal_Player.Merge(m, src)
}
func (m *CMsgDOTAMatchMinimal_Player) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Player.Size(m)
}
func (m *CMsgDOTAMatchMinimal_Player) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatchMinimal_Player.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatchMinimal_Player proto.InternalMessageInfo

const Default_CMsgDOTAMatchMinimal_Player_TeamNumber DOTA_GC_TEAM = DOTA_GC_TEAM_DOTA_GC_TEAM_GOOD_GUYS

func (m *CMsgDOTAMatchMinimal_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetItems() []int32 {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CMsgDOTAMatchMinimal_Player) GetPlayerSlot() uint32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetProName() string {
	if m != nil && m.ProName != nil {
		return *m.ProName
	}
	return ""
}

func (m *CMsgDOTAMatchMinimal_Player) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetTeamNumber() DOTA_GC_TEAM {
	if m != nil && m.TeamNumber != nil {
		return *m.TeamNumber
	}
	return Default_CMsgDOTAMatchMinimal_Player_TeamNumber
}

type CMsgDOTAMatchMinimal_Tourney struct {
	LeagueId                     *uint32  `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	SeriesType                   *uint32  `protobuf:"varint,8,opt,name=series_type,json=seriesType" json:"series_type,omitempty"`
	SeriesGame                   *uint32  `protobuf:"varint,9,opt,name=series_game,json=seriesGame" json:"series_game,omitempty"`
	WeekendTourneyTournamentId   *uint32  `protobuf:"varint,10,opt,name=weekend_tourney_tournament_id,json=weekendTourneyTournamentId" json:"weekend_tourney_tournament_id,omitempty"`
	WeekendTourneySeasonTrophyId *uint32  `protobuf:"varint,11,opt,name=weekend_tourney_season_trophy_id,json=weekendTourneySeasonTrophyId" json:"weekend_tourney_season_trophy_id,omitempty"`
	WeekendTourneyDivision       *uint32  `protobuf:"varint,12,opt,name=weekend_tourney_division,json=weekendTourneyDivision" json:"weekend_tourney_division,omitempty"`
	WeekendTourneySkillLevel     *uint32  `protobuf:"varint,13,opt,name=weekend_tourney_skill_level,json=weekendTourneySkillLevel" json:"weekend_tourney_skill_level,omitempty"`
	RadiantTeamId                *uint32  `protobuf:"varint,2,opt,name=radiant_team_id,json=radiantTeamId" json:"radiant_team_id,omitempty"`
	RadiantTeamName              *string  `protobuf:"bytes,3,opt,name=radiant_team_name,json=radiantTeamName" json:"radiant_team_name,omitempty"`
	RadiantTeamLogo              *uint64  `protobuf:"fixed64,4,opt,name=radiant_team_logo,json=radiantTeamLogo" json:"radiant_team_logo,omitempty"`
	RadiantTeamLogoUrl           *string  `protobuf:"bytes,14,opt,name=radiant_team_logo_url,json=radiantTeamLogoUrl" json:"radiant_team_logo_url,omitempty"`
	DireTeamId                   *uint32  `protobuf:"varint,5,opt,name=dire_team_id,json=direTeamId" json:"dire_team_id,omitempty"`
	DireTeamName                 *string  `protobuf:"bytes,6,opt,name=dire_team_name,json=direTeamName" json:"dire_team_name,omitempty"`
	DireTeamLogo                 *uint64  `protobuf:"fixed64,7,opt,name=dire_team_logo,json=direTeamLogo" json:"dire_team_logo,omitempty"`
	DireTeamLogoUrl              *string  `protobuf:"bytes,15,opt,name=dire_team_logo_url,json=direTeamLogoUrl" json:"dire_team_logo_url,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *CMsgDOTAMatchMinimal_Tourney) Reset()         { *m = CMsgDOTAMatchMinimal_Tourney{} }
func (m *CMsgDOTAMatchMinimal_Tourney) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatchMinimal_Tourney) ProtoMessage()    {}
func (*CMsgDOTAMatchMinimal_Tourney) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{45, 1}
}

func (m *CMsgDOTAMatchMinimal_Tourney) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney.Unmarshal(m, b)
}
func (m *CMsgDOTAMatchMinimal_Tourney) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAMatchMinimal_Tourney) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney.Merge(m, src)
}
func (m *CMsgDOTAMatchMinimal_Tourney) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney.Size(m)
}
func (m *CMsgDOTAMatchMinimal_Tourney) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney proto.InternalMessageInfo

func (m *CMsgDOTAMatchMinimal_Tourney) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetSeriesGame() uint32 {
	if m != nil && m.SeriesGame != nil {
		return *m.SeriesGame
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetWeekendTourneyTournamentId() uint32 {
	if m != nil && m.WeekendTourneyTournamentId != nil {
		return *m.WeekendTourneyTournamentId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetWeekendTourneySeasonTrophyId() uint32 {
	if m != nil && m.WeekendTourneySeasonTrophyId != nil {
		return *m.WeekendTourneySeasonTrophyId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetWeekendTourneyDivision() uint32 {
	if m != nil && m.WeekendTourneyDivision != nil {
		return *m.WeekendTourneyDivision
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetWeekendTourneySkillLevel() uint32 {
	if m != nil && m.WeekendTourneySkillLevel != nil {
		return *m.WeekendTourneySkillLevel
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetRadiantTeamId() uint32 {
	if m != nil && m.RadiantTeamId != nil {
		return *m.RadiantTeamId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetRadiantTeamName() string {
	if m != nil && m.RadiantTeamName != nil {
		return *m.RadiantTeamName
	}
	return ""
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetRadiantTeamLogo() uint64 {
	if m != nil && m.RadiantTeamLogo != nil {
		return *m.RadiantTeamLogo
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetRadiantTeamLogoUrl() string {
	if m != nil && m.RadiantTeamLogoUrl != nil {
		return *m.RadiantTeamLogoUrl
	}
	return ""
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetDireTeamId() uint32 {
	if m != nil && m.DireTeamId != nil {
		return *m.DireTeamId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetDireTeamName() string {
	if m != nil && m.DireTeamName != nil {
		return *m.DireTeamName
	}
	return ""
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetDireTeamLogo() uint64 {
	if m != nil && m.DireTeamLogo != nil {
		return *m.DireTeamLogo
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetDireTeamLogoUrl() string {
	if m != nil && m.DireTeamLogoUrl != nil {
		return *m.DireTeamLogoUrl
	}
	return ""
}

type CMsgConsumableUsage struct {
	ItemDef              *uint32  `protobuf:"varint,1,opt,name=item_def,json=itemDef" json:"item_def,omitempty"`
	QuantityChange       *int32   `protobuf:"varint,2,opt,name=quantity_change,json=quantityChange" json:"quantity_change,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgConsumableUsage) Reset()         { *m = CMsgConsumableUsage{} }
func (m *CMsgConsumableUsage) String() string { return proto.CompactTextString(m) }
func (*CMsgConsumableUsage) ProtoMessage()    {}
func (*CMsgConsumableUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{46}
}

func (m *CMsgConsumableUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgConsumableUsage.Unmarshal(m, b)
}
func (m *CMsgConsumableUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgConsumableUsage.Marshal(b, m, deterministic)
}
func (m *CMsgConsumableUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgConsumableUsage.Merge(m, src)
}
func (m *CMsgConsumableUsage) XXX_Size() int {
	return xxx_messageInfo_CMsgConsumableUsage.Size(m)
}
func (m *CMsgConsumableUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgConsumableUsage.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgConsumableUsage proto.InternalMessageInfo

func (m *CMsgConsumableUsage) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

func (m *CMsgConsumableUsage) GetQuantityChange() int32 {
	if m != nil && m.QuantityChange != nil {
		return *m.QuantityChange
	}
	return 0
}

type CMsgMatchConsumableUsage struct {
	PlayerConsumablesUsed []*CMsgMatchConsumableUsage_PlayerUsage `protobuf:"bytes,1,rep,name=player_consumables_used,json=playerConsumablesUsed" json:"player_consumables_used,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                `json:"-"`
	XXX_unrecognized      []byte                                  `json:"-"`
	XXX_sizecache         int32                                   `json:"-"`
}

func (m *CMsgMatchConsumableUsage) Reset()         { *m = CMsgMatchConsumableUsage{} }
func (m *CMsgMatchConsumableUsage) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchConsumableUsage) ProtoMessage()    {}
func (*CMsgMatchConsumableUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{47}
}

func (m *CMsgMatchConsumableUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgMatchConsumableUsage.Unmarshal(m, b)
}
func (m *CMsgMatchConsumableUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgMatchConsumableUsage.Marshal(b, m, deterministic)
}
func (m *CMsgMatchConsumableUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgMatchConsumableUsage.Merge(m, src)
}
func (m *CMsgMatchConsumableUsage) XXX_Size() int {
	return xxx_messageInfo_CMsgMatchConsumableUsage.Size(m)
}
func (m *CMsgMatchConsumableUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgMatchConsumableUsage.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgMatchConsumableUsage proto.InternalMessageInfo

func (m *CMsgMatchConsumableUsage) GetPlayerConsumablesUsed() []*CMsgMatchConsumableUsage_PlayerUsage {
	if m != nil {
		return m.PlayerConsumablesUsed
	}
	return nil
}

type CMsgMatchConsumableUsage_PlayerUsage struct {
	AccountId            *uint32                `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConsumablesUsed      []*CMsgConsumableUsage `protobuf:"bytes,2,rep,name=consumables_used,json=consumablesUsed" json:"consumables_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CMsgMatchConsumableUsage_PlayerUsage) Reset()         { *m = CMsgMatchConsumableUsage_PlayerUsage{} }
func (m *CMsgMatchConsumableUsage_PlayerUsage) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchConsumableUsage_PlayerUsage) ProtoMessage()    {}
func (*CMsgMatchConsumableUsage_PlayerUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{47, 0}
}

func (m *CMsgMatchConsumableUsage_PlayerUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgMatchConsumableUsage_PlayerUsage.Unmarshal(m, b)
}
func (m *CMsgMatchConsumableUsage_PlayerUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgMatchConsumableUsage_PlayerUsage.Marshal(b, m, deterministic)
}
func (m *CMsgMatchConsumableUsage_PlayerUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgMatchConsumableUsage_PlayerUsage.Merge(m, src)
}
func (m *CMsgMatchConsumableUsage_PlayerUsage) XXX_Size() int {
	return xxx_messageInfo_CMsgMatchConsumableUsage_PlayerUsage.Size(m)
}
func (m *CMsgMatchConsumableUsage_PlayerUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgMatchConsumableUsage_PlayerUsage.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgMatchConsumableUsage_PlayerUsage proto.InternalMessageInfo

func (m *CMsgMatchConsumableUsage_PlayerUsage) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgMatchConsumableUsage_PlayerUsage) GetConsumablesUsed() []*CMsgConsumableUsage {
	if m != nil {
		return m.ConsumablesUsed
	}
	return nil
}

type CMsgMatchEventActionGrants struct {
	PlayerGrants         []*CMsgMatchEventActionGrants_PlayerGrants `protobuf:"bytes,1,rep,name=player_grants,json=playerGrants" json:"player_grants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CMsgMatchEventActionGrants) Reset()         { *m = CMsgMatchEventActionGrants{} }
func (m *CMsgMatchEventActionGrants) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchEventActionGrants) ProtoMessage()    {}
func (*CMsgMatchEventActionGrants) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{48}
}

func (m *CMsgMatchEventActionGrants) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgMatchEventActionGrants.Unmarshal(m, b)
}
func (m *CMsgMatchEventActionGrants) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgMatchEventActionGrants.Marshal(b, m, deterministic)
}
func (m *CMsgMatchEventActionGrants) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgMatchEventActionGrants.Merge(m, src)
}
func (m *CMsgMatchEventActionGrants) XXX_Size() int {
	return xxx_messageInfo_CMsgMatchEventActionGrants.Size(m)
}
func (m *CMsgMatchEventActionGrants) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgMatchEventActionGrants.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgMatchEventActionGrants proto.InternalMessageInfo

func (m *CMsgMatchEventActionGrants) GetPlayerGrants() []*CMsgMatchEventActionGrants_PlayerGrants {
	if m != nil {
		return m.PlayerGrants
	}
	return nil
}

type CMsgMatchEventActionGrants_PlayerGrants struct {
	AccountId            *uint32                  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ActionsGranted       []*CMsgPendingEventAward `protobuf:"bytes,3,rep,name=actions_granted,json=actionsGranted" json:"actions_granted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CMsgMatchEventActionGrants_PlayerGrants) Reset() {
	*m = CMsgMatchEventActionGrants_PlayerGrants{}
}
func (m *CMsgMatchEventActionGrants_PlayerGrants) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchEventActionGrants_PlayerGrants) ProtoMessage()    {}
func (*CMsgMatchEventActionGrants_PlayerGrants) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{48, 0}
}

func (m *CMsgMatchEventActionGrants_PlayerGrants) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgMatchEventActionGrants_PlayerGrants.Unmarshal(m, b)
}
func (m *CMsgMatchEventActionGrants_PlayerGrants) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgMatchEventActionGrants_PlayerGrants.Marshal(b, m, deterministic)
}
func (m *CMsgMatchEventActionGrants_PlayerGrants) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgMatchEventActionGrants_PlayerGrants.Merge(m, src)
}
func (m *CMsgMatchEventActionGrants_PlayerGrants) XXX_Size() int {
	return xxx_messageInfo_CMsgMatchEventActionGrants_PlayerGrants.Size(m)
}
func (m *CMsgMatchEventActionGrants_PlayerGrants) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgMatchEventActionGrants_PlayerGrants.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgMatchEventActionGrants_PlayerGrants proto.InternalMessageInfo

func (m *CMsgMatchEventActionGrants_PlayerGrants) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgMatchEventActionGrants_PlayerGrants) GetActionsGranted() []*CMsgPendingEventAward {
	if m != nil {
		return m.ActionsGranted
	}
	return nil
}

type CMsgCustomGameWhitelist struct {
	Version              *uint32  `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	CustomGamesWhitelist []uint64 `protobuf:"varint,2,rep,name=custom_games_whitelist,json=customGamesWhitelist" json:"custom_games_whitelist,omitempty"`
	DisableWhitelist     *bool    `protobuf:"varint,3,opt,name=disable_whitelist,json=disableWhitelist" json:"disable_whitelist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgCustomGameWhitelist) Reset()         { *m = CMsgCustomGameWhitelist{} }
func (m *CMsgCustomGameWhitelist) String() string { return proto.CompactTextString(m) }
func (*CMsgCustomGameWhitelist) ProtoMessage()    {}
func (*CMsgCustomGameWhitelist) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{49}
}

func (m *CMsgCustomGameWhitelist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgCustomGameWhitelist.Unmarshal(m, b)
}
func (m *CMsgCustomGameWhitelist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgCustomGameWhitelist.Marshal(b, m, deterministic)
}
func (m *CMsgCustomGameWhitelist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgCustomGameWhitelist.Merge(m, src)
}
func (m *CMsgCustomGameWhitelist) XXX_Size() int {
	return xxx_messageInfo_CMsgCustomGameWhitelist.Size(m)
}
func (m *CMsgCustomGameWhitelist) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgCustomGameWhitelist.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgCustomGameWhitelist proto.InternalMessageInfo

func (m *CMsgCustomGameWhitelist) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgCustomGameWhitelist) GetCustomGamesWhitelist() []uint64 {
	if m != nil {
		return m.CustomGamesWhitelist
	}
	return nil
}

func (m *CMsgCustomGameWhitelist) GetDisableWhitelist() bool {
	if m != nil && m.DisableWhitelist != nil {
		return *m.DisableWhitelist
	}
	return false
}

type CMsgCustomGameWhitelistForEdit struct {
	WhitelistEntries     []*CMsgCustomGameWhitelistForEdit_WhitelistEntry `protobuf:"bytes,1,rep,name=whitelist_entries,json=whitelistEntries" json:"whitelist_entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *CMsgCustomGameWhitelistForEdit) Reset()         { *m = CMsgCustomGameWhitelistForEdit{} }
func (m *CMsgCustomGameWhitelistForEdit) String() string { return proto.CompactTextString(m) }
func (*CMsgCustomGameWhitelistForEdit) ProtoMessage()    {}
func (*CMsgCustomGameWhitelistForEdit) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{50}
}

func (m *CMsgCustomGameWhitelistForEdit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgCustomGameWhitelistForEdit.Unmarshal(m, b)
}
func (m *CMsgCustomGameWhitelistForEdit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgCustomGameWhitelistForEdit.Marshal(b, m, deterministic)
}
func (m *CMsgCustomGameWhitelistForEdit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgCustomGameWhitelistForEdit.Merge(m, src)
}
func (m *CMsgCustomGameWhitelistForEdit) XXX_Size() int {
	return xxx_messageInfo_CMsgCustomGameWhitelistForEdit.Size(m)
}
func (m *CMsgCustomGameWhitelistForEdit) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgCustomGameWhitelistForEdit.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgCustomGameWhitelistForEdit proto.InternalMessageInfo

func (m *CMsgCustomGameWhitelistForEdit) GetWhitelistEntries() []*CMsgCustomGameWhitelistForEdit_WhitelistEntry {
	if m != nil {
		return m.WhitelistEntries
	}
	return nil
}

type CMsgCustomGameWhitelistForEdit_WhitelistEntry struct {
	CustomGameId         *uint64                    `protobuf:"varint,1,opt,name=custom_game_id,json=customGameId" json:"custom_game_id,omitempty"`
	WhitelistState       *ECustomGameWhitelistState `protobuf:"varint,2,opt,name=whitelist_state,json=whitelistState,enum=protocol.ECustomGameWhitelistState,def=0" json:"whitelist_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CMsgCustomGameWhitelistForEdit_WhitelistEntry) Reset() {
	*m = CMsgCustomGameWhitelistForEdit_WhitelistEntry{}
}
func (m *CMsgCustomGameWhitelistForEdit_WhitelistEntry) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgCustomGameWhitelistForEdit_WhitelistEntry) ProtoMessage() {}
func (*CMsgCustomGameWhitelistForEdit_WhitelistEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{50, 0}
}

func (m *CMsgCustomGameWhitelistForEdit_WhitelistEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgCustomGameWhitelistForEdit_WhitelistEntry.Unmarshal(m, b)
}
func (m *CMsgCustomGameWhitelistForEdit_WhitelistEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgCustomGameWhitelistForEdit_WhitelistEntry.Marshal(b, m, deterministic)
}
func (m *CMsgCustomGameWhitelistForEdit_WhitelistEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgCustomGameWhitelistForEdit_WhitelistEntry.Merge(m, src)
}
func (m *CMsgCustomGameWhitelistForEdit_WhitelistEntry) XXX_Size() int {
	return xxx_messageInfo_CMsgCustomGameWhitelistForEdit_WhitelistEntry.Size(m)
}
func (m *CMsgCustomGameWhitelistForEdit_WhitelistEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgCustomGameWhitelistForEdit_WhitelistEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgCustomGameWhitelistForEdit_WhitelistEntry proto.InternalMessageInfo

const Default_CMsgCustomGameWhitelistForEdit_WhitelistEntry_WhitelistState ECustomGameWhitelistState = ECustomGameWhitelistState_CUSTOM_GAME_WHITELIST_STATE_UNKNOWN

func (m *CMsgCustomGameWhitelistForEdit_WhitelistEntry) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

func (m *CMsgCustomGameWhitelistForEdit_WhitelistEntry) GetWhitelistState() ECustomGameWhitelistState {
	if m != nil && m.WhitelistState != nil {
		return *m.WhitelistState
	}
	return Default_CMsgCustomGameWhitelistForEdit_WhitelistEntry_WhitelistState
}

type CMsgPlayerRecentMatchInfo struct {
	MatchId              *uint64  `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Timestamp            *uint32  `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Duration             *uint32  `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	Win                  *bool    `protobuf:"varint,4,opt,name=win" json:"win,omitempty"`
	HeroId               *uint32  `protobuf:"varint,5,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Kills                *uint32  `protobuf:"varint,6,opt,name=kills" json:"kills,omitempty"`
	Deaths               *uint32  `protobuf:"varint,7,opt,name=deaths" json:"deaths,omitempty"`
	Assists              *uint32  `protobuf:"varint,8,opt,name=assists" json:"assists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgPlayerRecentMatchInfo) Reset()         { *m = CMsgPlayerRecentMatchInfo{} }
func (m *CMsgPlayerRecentMatchInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgPlayerRecentMatchInfo) ProtoMessage()    {}
func (*CMsgPlayerRecentMatchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{51}
}

func (m *CMsgPlayerRecentMatchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPlayerRecentMatchInfo.Unmarshal(m, b)
}
func (m *CMsgPlayerRecentMatchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPlayerRecentMatchInfo.Marshal(b, m, deterministic)
}
func (m *CMsgPlayerRecentMatchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPlayerRecentMatchInfo.Merge(m, src)
}
func (m *CMsgPlayerRecentMatchInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgPlayerRecentMatchInfo.Size(m)
}
func (m *CMsgPlayerRecentMatchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPlayerRecentMatchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPlayerRecentMatchInfo proto.InternalMessageInfo

func (m *CMsgPlayerRecentMatchInfo) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgPlayerRecentMatchInfo) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgPlayerRecentMatchInfo) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgPlayerRecentMatchInfo) GetWin() bool {
	if m != nil && m.Win != nil {
		return *m.Win
	}
	return false
}

func (m *CMsgPlayerRecentMatchInfo) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgPlayerRecentMatchInfo) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgPlayerRecentMatchInfo) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgPlayerRecentMatchInfo) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

type CMsgPlayerMatchRecord struct {
	Wins                 *uint32  `protobuf:"varint,1,opt,name=wins" json:"wins,omitempty"`
	Losses               *uint32  `protobuf:"varint,2,opt,name=losses" json:"losses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgPlayerMatchRecord) Reset()         { *m = CMsgPlayerMatchRecord{} }
func (m *CMsgPlayerMatchRecord) String() string { return proto.CompactTextString(m) }
func (*CMsgPlayerMatchRecord) ProtoMessage()    {}
func (*CMsgPlayerMatchRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{52}
}

func (m *CMsgPlayerMatchRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPlayerMatchRecord.Unmarshal(m, b)
}
func (m *CMsgPlayerMatchRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPlayerMatchRecord.Marshal(b, m, deterministic)
}
func (m *CMsgPlayerMatchRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPlayerMatchRecord.Merge(m, src)
}
func (m *CMsgPlayerMatchRecord) XXX_Size() int {
	return xxx_messageInfo_CMsgPlayerMatchRecord.Size(m)
}
func (m *CMsgPlayerMatchRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPlayerMatchRecord.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPlayerMatchRecord proto.InternalMessageInfo

func (m *CMsgPlayerMatchRecord) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *CMsgPlayerMatchRecord) GetLosses() uint32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

type CMsgPlayerRecentMatchOutcomes struct {
	Outcomes             *uint32  `protobuf:"varint,1,opt,name=outcomes" json:"outcomes,omitempty"`
	MatchCount           *uint32  `protobuf:"varint,2,opt,name=match_count,json=matchCount" json:"match_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgPlayerRecentMatchOutcomes) Reset()         { *m = CMsgPlayerRecentMatchOutcomes{} }
func (m *CMsgPlayerRecentMatchOutcomes) String() string { return proto.CompactTextString(m) }
func (*CMsgPlayerRecentMatchOutcomes) ProtoMessage()    {}
func (*CMsgPlayerRecentMatchOutcomes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{53}
}

func (m *CMsgPlayerRecentMatchOutcomes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPlayerRecentMatchOutcomes.Unmarshal(m, b)
}
func (m *CMsgPlayerRecentMatchOutcomes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPlayerRecentMatchOutcomes.Marshal(b, m, deterministic)
}
func (m *CMsgPlayerRecentMatchOutcomes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPlayerRecentMatchOutcomes.Merge(m, src)
}
func (m *CMsgPlayerRecentMatchOutcomes) XXX_Size() int {
	return xxx_messageInfo_CMsgPlayerRecentMatchOutcomes.Size(m)
}
func (m *CMsgPlayerRecentMatchOutcomes) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPlayerRecentMatchOutcomes.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPlayerRecentMatchOutcomes proto.InternalMessageInfo

func (m *CMsgPlayerRecentMatchOutcomes) GetOutcomes() uint32 {
	if m != nil && m.Outcomes != nil {
		return *m.Outcomes
	}
	return 0
}

func (m *CMsgPlayerRecentMatchOutcomes) GetMatchCount() uint32 {
	if m != nil && m.MatchCount != nil {
		return *m.MatchCount
	}
	return 0
}

type CMsgPlayerRecentCommends struct {
	Commends             *uint32  `protobuf:"varint,1,opt,name=commends" json:"commends,omitempty"`
	MatchCount           *uint32  `protobuf:"varint,2,opt,name=match_count,json=matchCount" json:"match_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgPlayerRecentCommends) Reset()         { *m = CMsgPlayerRecentCommends{} }
func (m *CMsgPlayerRecentCommends) String() string { return proto.CompactTextString(m) }
func (*CMsgPlayerRecentCommends) ProtoMessage()    {}
func (*CMsgPlayerRecentCommends) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{54}
}

func (m *CMsgPlayerRecentCommends) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPlayerRecentCommends.Unmarshal(m, b)
}
func (m *CMsgPlayerRecentCommends) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPlayerRecentCommends.Marshal(b, m, deterministic)
}
func (m *CMsgPlayerRecentCommends) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPlayerRecentCommends.Merge(m, src)
}
func (m *CMsgPlayerRecentCommends) XXX_Size() int {
	return xxx_messageInfo_CMsgPlayerRecentCommends.Size(m)
}
func (m *CMsgPlayerRecentCommends) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPlayerRecentCommends.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPlayerRecentCommends proto.InternalMessageInfo

func (m *CMsgPlayerRecentCommends) GetCommends() uint32 {
	if m != nil && m.Commends != nil {
		return *m.Commends
	}
	return 0
}

func (m *CMsgPlayerRecentCommends) GetMatchCount() uint32 {
	if m != nil && m.MatchCount != nil {
		return *m.MatchCount
	}
	return 0
}

type CMsgPlayerRecentAccomplishments struct {
	RecentOutcomes       *CMsgPlayerRecentMatchOutcomes `protobuf:"bytes,1,opt,name=recent_outcomes,json=recentOutcomes" json:"recent_outcomes,omitempty"`
	TotalRecord          *CMsgPlayerMatchRecord         `protobuf:"bytes,2,opt,name=total_record,json=totalRecord" json:"total_record,omitempty"`
	PredictionStreak     *uint32                        `protobuf:"varint,3,opt,name=prediction_streak,json=predictionStreak" json:"prediction_streak,omitempty"`
	PlusPredictionStreak *uint32                        `protobuf:"varint,4,opt,name=plus_prediction_streak,json=plusPredictionStreak" json:"plus_prediction_streak,omitempty"`
	RecentCommends       *CMsgPlayerRecentCommends      `protobuf:"bytes,5,opt,name=recent_commends,json=recentCommends" json:"recent_commends,omitempty"`
	FirstMatchTimestamp  *uint32                        `protobuf:"varint,6,opt,name=first_match_timestamp,json=firstMatchTimestamp" json:"first_match_timestamp,omitempty"`
	LastMatch            *CMsgPlayerRecentMatchInfo     `protobuf:"bytes,7,opt,name=last_match,json=lastMatch" json:"last_match,omitempty"`
	RecentMvps           *CMsgPlayerRecentMatchOutcomes `protobuf:"bytes,8,opt,name=recent_mvps,json=recentMvps" json:"recent_mvps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CMsgPlayerRecentAccomplishments) Reset()         { *m = CMsgPlayerRecentAccomplishments{} }
func (m *CMsgPlayerRecentAccomplishments) String() string { return proto.CompactTextString(m) }
func (*CMsgPlayerRecentAccomplishments) ProtoMessage()    {}
func (*CMsgPlayerRecentAccomplishments) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{55}
}

func (m *CMsgPlayerRecentAccomplishments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPlayerRecentAccomplishments.Unmarshal(m, b)
}
func (m *CMsgPlayerRecentAccomplishments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPlayerRecentAccomplishments.Marshal(b, m, deterministic)
}
func (m *CMsgPlayerRecentAccomplishments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPlayerRecentAccomplishments.Merge(m, src)
}
func (m *CMsgPlayerRecentAccomplishments) XXX_Size() int {
	return xxx_messageInfo_CMsgPlayerRecentAccomplishments.Size(m)
}
func (m *CMsgPlayerRecentAccomplishments) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPlayerRecentAccomplishments.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPlayerRecentAccomplishments proto.InternalMessageInfo

func (m *CMsgPlayerRecentAccomplishments) GetRecentOutcomes() *CMsgPlayerRecentMatchOutcomes {
	if m != nil {
		return m.RecentOutcomes
	}
	return nil
}

func (m *CMsgPlayerRecentAccomplishments) GetTotalRecord() *CMsgPlayerMatchRecord {
	if m != nil {
		return m.TotalRecord
	}
	return nil
}

func (m *CMsgPlayerRecentAccomplishments) GetPredictionStreak() uint32 {
	if m != nil && m.PredictionStreak != nil {
		return *m.PredictionStreak
	}
	return 0
}

func (m *CMsgPlayerRecentAccomplishments) GetPlusPredictionStreak() uint32 {
	if m != nil && m.PlusPredictionStreak != nil {
		return *m.PlusPredictionStreak
	}
	return 0
}

func (m *CMsgPlayerRecentAccomplishments) GetRecentCommends() *CMsgPlayerRecentCommends {
	if m != nil {
		return m.RecentCommends
	}
	return nil
}

func (m *CMsgPlayerRecentAccomplishments) GetFirstMatchTimestamp() uint32 {
	if m != nil && m.FirstMatchTimestamp != nil {
		return *m.FirstMatchTimestamp
	}
	return 0
}

func (m *CMsgPlayerRecentAccomplishments) GetLastMatch() *CMsgPlayerRecentMatchInfo {
	if m != nil {
		return m.LastMatch
	}
	return nil
}

func (m *CMsgPlayerRecentAccomplishments) GetRecentMvps() *CMsgPlayerRecentMatchOutcomes {
	if m != nil {
		return m.RecentMvps
	}
	return nil
}

type CMsgPlayerHeroRecentAccomplishments struct {
	RecentOutcomes       *CMsgPlayerRecentMatchOutcomes `protobuf:"bytes,1,opt,name=recent_outcomes,json=recentOutcomes" json:"recent_outcomes,omitempty"`
	TotalRecord          *CMsgPlayerMatchRecord         `protobuf:"bytes,2,opt,name=total_record,json=totalRecord" json:"total_record,omitempty"`
	LastMatch            *CMsgPlayerRecentMatchInfo     `protobuf:"bytes,3,opt,name=last_match,json=lastMatch" json:"last_match,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CMsgPlayerHeroRecentAccomplishments) Reset()         { *m = CMsgPlayerHeroRecentAccomplishments{} }
func (m *CMsgPlayerHeroRecentAccomplishments) String() string { return proto.CompactTextString(m) }
func (*CMsgPlayerHeroRecentAccomplishments) ProtoMessage()    {}
func (*CMsgPlayerHeroRecentAccomplishments) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{56}
}

func (m *CMsgPlayerHeroRecentAccomplishments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPlayerHeroRecentAccomplishments.Unmarshal(m, b)
}
func (m *CMsgPlayerHeroRecentAccomplishments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPlayerHeroRecentAccomplishments.Marshal(b, m, deterministic)
}
func (m *CMsgPlayerHeroRecentAccomplishments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPlayerHeroRecentAccomplishments.Merge(m, src)
}
func (m *CMsgPlayerHeroRecentAccomplishments) XXX_Size() int {
	return xxx_messageInfo_CMsgPlayerHeroRecentAccomplishments.Size(m)
}
func (m *CMsgPlayerHeroRecentAccomplishments) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPlayerHeroRecentAccomplishments.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPlayerHeroRecentAccomplishments proto.InternalMessageInfo

func (m *CMsgPlayerHeroRecentAccomplishments) GetRecentOutcomes() *CMsgPlayerRecentMatchOutcomes {
	if m != nil {
		return m.RecentOutcomes
	}
	return nil
}

func (m *CMsgPlayerHeroRecentAccomplishments) GetTotalRecord() *CMsgPlayerMatchRecord {
	if m != nil {
		return m.TotalRecord
	}
	return nil
}

func (m *CMsgPlayerHeroRecentAccomplishments) GetLastMatch() *CMsgPlayerRecentMatchInfo {
	if m != nil {
		return m.LastMatch
	}
	return nil
}

type CMsgRecentAccomplishments struct {
	PlayerAccomplishments *CMsgPlayerRecentAccomplishments     `protobuf:"bytes,1,opt,name=player_accomplishments,json=playerAccomplishments" json:"player_accomplishments,omitempty"`
	HeroAccomplishments   *CMsgPlayerHeroRecentAccomplishments `protobuf:"bytes,2,opt,name=hero_accomplishments,json=heroAccomplishments" json:"hero_accomplishments,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                             `json:"-"`
	XXX_unrecognized      []byte                               `json:"-"`
	XXX_sizecache         int32                                `json:"-"`
}

func (m *CMsgRecentAccomplishments) Reset()         { *m = CMsgRecentAccomplishments{} }
func (m *CMsgRecentAccomplishments) String() string { return proto.CompactTextString(m) }
func (*CMsgRecentAccomplishments) ProtoMessage()    {}
func (*CMsgRecentAccomplishments) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{57}
}

func (m *CMsgRecentAccomplishments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgRecentAccomplishments.Unmarshal(m, b)
}
func (m *CMsgRecentAccomplishments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgRecentAccomplishments.Marshal(b, m, deterministic)
}
func (m *CMsgRecentAccomplishments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgRecentAccomplishments.Merge(m, src)
}
func (m *CMsgRecentAccomplishments) XXX_Size() int {
	return xxx_messageInfo_CMsgRecentAccomplishments.Size(m)
}
func (m *CMsgRecentAccomplishments) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgRecentAccomplishments.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgRecentAccomplishments proto.InternalMessageInfo

func (m *CMsgRecentAccomplishments) GetPlayerAccomplishments() *CMsgPlayerRecentAccomplishments {
	if m != nil {
		return m.PlayerAccomplishments
	}
	return nil
}

func (m *CMsgRecentAccomplishments) GetHeroAccomplishments() *CMsgPlayerHeroRecentAccomplishments {
	if m != nil {
		return m.HeroAccomplishments
	}
	return nil
}

type CMsgServerToGCRequestPlayerRecentAccomplishments struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgServerToGCRequestPlayerRecentAccomplishments) Reset() {
	*m = CMsgServerToGCRequestPlayerRecentAccomplishments{}
}
func (m *CMsgServerToGCRequestPlayerRecentAccomplishments) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCRequestPlayerRecentAccomplishments) ProtoMessage() {}
func (*CMsgServerToGCRequestPlayerRecentAccomplishments) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{58}
}

func (m *CMsgServerToGCRequestPlayerRecentAccomplishments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishments.Unmarshal(m, b)
}
func (m *CMsgServerToGCRequestPlayerRecentAccomplishments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishments.Marshal(b, m, deterministic)
}
func (m *CMsgServerToGCRequestPlayerRecentAccomplishments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishments.Merge(m, src)
}
func (m *CMsgServerToGCRequestPlayerRecentAccomplishments) XXX_Size() int {
	return xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishments.Size(m)
}
func (m *CMsgServerToGCRequestPlayerRecentAccomplishments) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishments.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishments proto.InternalMessageInfo

func (m *CMsgServerToGCRequestPlayerRecentAccomplishments) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgServerToGCRequestPlayerRecentAccomplishments) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse struct {
	Result                *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse,def=0" json:"result,omitempty"`
	PlayerAccomplishments *CMsgRecentAccomplishments                                          `protobuf:"bytes,2,opt,name=player_accomplishments,json=playerAccomplishments" json:"player_accomplishments,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                                            `json:"-"`
	XXX_unrecognized      []byte                                                              `json:"-"`
	XXX_sizecache         int32                                                               `json:"-"`
}

func (m *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse) Reset() {
	*m = CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse{}
}
func (m *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse) ProtoMessage() {}
func (*CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{59}
}

func (m *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse.Unmarshal(m, b)
}
func (m *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse.Marshal(b, m, deterministic)
}
func (m *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse.Merge(m, src)
}
func (m *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse.Size(m)
}
func (m *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse proto.InternalMessageInfo

const Default_CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_Result CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse = CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_k_eInternalError

func (m *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse) GetResult() CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_Result
}

func (m *CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse) GetPlayerAccomplishments() *CMsgRecentAccomplishments {
	if m != nil {
		return m.PlayerAccomplishments
	}
	return nil
}

type CMsgArcanaVoteMatchVotes struct {
	MatchId              *uint32  `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	VoteCount            *uint32  `protobuf:"varint,3,opt,name=vote_count,json=voteCount" json:"vote_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgArcanaVoteMatchVotes) Reset()         { *m = CMsgArcanaVoteMatchVotes{} }
func (m *CMsgArcanaVoteMatchVotes) String() string { return proto.CompactTextString(m) }
func (*CMsgArcanaVoteMatchVotes) ProtoMessage()    {}
func (*CMsgArcanaVoteMatchVotes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{60}
}

func (m *CMsgArcanaVoteMatchVotes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgArcanaVoteMatchVotes.Unmarshal(m, b)
}
func (m *CMsgArcanaVoteMatchVotes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgArcanaVoteMatchVotes.Marshal(b, m, deterministic)
}
func (m *CMsgArcanaVoteMatchVotes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgArcanaVoteMatchVotes.Merge(m, src)
}
func (m *CMsgArcanaVoteMatchVotes) XXX_Size() int {
	return xxx_messageInfo_CMsgArcanaVoteMatchVotes.Size(m)
}
func (m *CMsgArcanaVoteMatchVotes) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgArcanaVoteMatchVotes.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgArcanaVoteMatchVotes proto.InternalMessageInfo

func (m *CMsgArcanaVoteMatchVotes) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgArcanaVoteMatchVotes) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgArcanaVoteMatchVotes) GetVoteCount() uint32 {
	if m != nil && m.VoteCount != nil {
		return *m.VoteCount
	}
	return 0
}

type CMsgGCtoGCAssociatedExploiterAccountInfo struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	NumMatchesToSearch   *uint32  `protobuf:"varint,2,opt,name=num_matches_to_search,json=numMatchesToSearch" json:"num_matches_to_search,omitempty"`
	MinSharedMatchCount  *uint32  `protobuf:"varint,3,opt,name=min_shared_match_count,json=minSharedMatchCount" json:"min_shared_match_count,omitempty"`
	NumAdditionalPlayers *uint32  `protobuf:"varint,4,opt,name=num_additional_players,json=numAdditionalPlayers" json:"num_additional_players,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfo) Reset() {
	*m = CMsgGCtoGCAssociatedExploiterAccountInfo{}
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGCtoGCAssociatedExploiterAccountInfo) ProtoMessage()    {}
func (*CMsgGCtoGCAssociatedExploiterAccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{61}
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfo.Unmarshal(m, b)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfo.Marshal(b, m, deterministic)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfo.Merge(m, src)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfo.Size(m)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfo proto.InternalMessageInfo

func (m *CMsgGCtoGCAssociatedExploiterAccountInfo) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfo) GetNumMatchesToSearch() uint32 {
	if m != nil && m.NumMatchesToSearch != nil {
		return *m.NumMatchesToSearch
	}
	return 0
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfo) GetMinSharedMatchCount() uint32 {
	if m != nil && m.MinSharedMatchCount != nil {
		return *m.MinSharedMatchCount
	}
	return 0
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfo) GetNumAdditionalPlayers() uint32 {
	if m != nil && m.NumAdditionalPlayers != nil {
		return *m.NumAdditionalPlayers
	}
	return 0
}

type CMsgGCtoGCAssociatedExploiterAccountInfoResponse struct {
	Accounts             []*CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                    `json:"-"`
	XXX_unrecognized     []byte                                                      `json:"-"`
	XXX_sizecache        int32                                                       `json:"-"`
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse) Reset() {
	*m = CMsgGCtoGCAssociatedExploiterAccountInfoResponse{}
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCtoGCAssociatedExploiterAccountInfoResponse) ProtoMessage() {}
func (*CMsgGCtoGCAssociatedExploiterAccountInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{62}
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse.Unmarshal(m, b)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse.Marshal(b, m, deterministic)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse.Merge(m, src)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse.Size(m)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse proto.InternalMessageInfo

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse) GetAccounts() []*CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	NumCommonMatches     *uint32  `protobuf:"varint,2,opt,name=num_common_matches,json=numCommonMatches" json:"num_common_matches,omitempty"`
	EarliestCommonMatch  *uint32  `protobuf:"varint,3,opt,name=earliest_common_match,json=earliestCommonMatch" json:"earliest_common_match,omitempty"`
	LatestCommonMatch    *uint32  `protobuf:"varint,4,opt,name=latest_common_match,json=latestCommonMatch" json:"latest_common_match,omitempty"`
	Generation           *uint32  `protobuf:"varint,5,opt,name=generation" json:"generation,omitempty"`
	Persona              *string  `protobuf:"bytes,6,opt,name=persona" json:"persona,omitempty"`
	AlreadyBanned        *bool    `protobuf:"varint,7,opt,name=already_banned,json=alreadyBanned" json:"already_banned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) Reset() {
	*m = CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account{}
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) ProtoMessage() {}
func (*CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{62, 0}
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account.Unmarshal(m, b)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account.Marshal(b, m, deterministic)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account.Merge(m, src)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) XXX_Size() int {
	return xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account.Size(m)
}
func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account proto.InternalMessageInfo

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) GetNumCommonMatches() uint32 {
	if m != nil && m.NumCommonMatches != nil {
		return *m.NumCommonMatches
	}
	return 0
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) GetEarliestCommonMatch() uint32 {
	if m != nil && m.EarliestCommonMatch != nil {
		return *m.EarliestCommonMatch
	}
	return 0
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) GetLatestCommonMatch() uint32 {
	if m != nil && m.LatestCommonMatch != nil {
		return *m.LatestCommonMatch
	}
	return 0
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) GetGeneration() uint32 {
	if m != nil && m.Generation != nil {
		return *m.Generation
	}
	return 0
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) GetPersona() string {
	if m != nil && m.Persona != nil {
		return *m.Persona
	}
	return ""
}

func (m *CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account) GetAlreadyBanned() bool {
	if m != nil && m.AlreadyBanned != nil {
		return *m.AlreadyBanned
	}
	return false
}

type CMsgPullTabsData struct {
	Slots                []*CMsgPullTabsData_Slot    `protobuf:"bytes,1,rep,name=slots" json:"slots,omitempty"`
	Jackpots             []*CMsgPullTabsData_Jackpot `protobuf:"bytes,2,rep,name=jackpots" json:"jackpots,omitempty"`
	LastBoard            *uint32                     `protobuf:"varint,3,opt,name=last_board,json=lastBoard" json:"last_board,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CMsgPullTabsData) Reset()         { *m = CMsgPullTabsData{} }
func (m *CMsgPullTabsData) String() string { return proto.CompactTextString(m) }
func (*CMsgPullTabsData) ProtoMessage()    {}
func (*CMsgPullTabsData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{63}
}

func (m *CMsgPullTabsData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPullTabsData.Unmarshal(m, b)
}
func (m *CMsgPullTabsData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPullTabsData.Marshal(b, m, deterministic)
}
func (m *CMsgPullTabsData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPullTabsData.Merge(m, src)
}
func (m *CMsgPullTabsData) XXX_Size() int {
	return xxx_messageInfo_CMsgPullTabsData.Size(m)
}
func (m *CMsgPullTabsData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPullTabsData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPullTabsData proto.InternalMessageInfo

func (m *CMsgPullTabsData) GetSlots() []*CMsgPullTabsData_Slot {
	if m != nil {
		return m.Slots
	}
	return nil
}

func (m *CMsgPullTabsData) GetJackpots() []*CMsgPullTabsData_Jackpot {
	if m != nil {
		return m.Jackpots
	}
	return nil
}

func (m *CMsgPullTabsData) GetLastBoard() uint32 {
	if m != nil && m.LastBoard != nil {
		return *m.LastBoard
	}
	return 0
}

type CMsgPullTabsData_Slot struct {
	EventId              *uint32  `protobuf:"varint,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	BoardId              *uint32  `protobuf:"varint,2,opt,name=board_id,json=boardId" json:"board_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,3,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	ActionId             *uint32  `protobuf:"varint,4,opt,name=action_id,json=actionId" json:"action_id,omitempty"`
	Redeemed             *bool    `protobuf:"varint,5,opt,name=redeemed" json:"redeemed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgPullTabsData_Slot) Reset()         { *m = CMsgPullTabsData_Slot{} }
func (m *CMsgPullTabsData_Slot) String() string { return proto.CompactTextString(m) }
func (*CMsgPullTabsData_Slot) ProtoMessage()    {}
func (*CMsgPullTabsData_Slot) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{63, 0}
}

func (m *CMsgPullTabsData_Slot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPullTabsData_Slot.Unmarshal(m, b)
}
func (m *CMsgPullTabsData_Slot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPullTabsData_Slot.Marshal(b, m, deterministic)
}
func (m *CMsgPullTabsData_Slot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPullTabsData_Slot.Merge(m, src)
}
func (m *CMsgPullTabsData_Slot) XXX_Size() int {
	return xxx_messageInfo_CMsgPullTabsData_Slot.Size(m)
}
func (m *CMsgPullTabsData_Slot) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPullTabsData_Slot.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPullTabsData_Slot proto.InternalMessageInfo

func (m *CMsgPullTabsData_Slot) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgPullTabsData_Slot) GetBoardId() uint32 {
	if m != nil && m.BoardId != nil {
		return *m.BoardId
	}
	return 0
}

func (m *CMsgPullTabsData_Slot) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgPullTabsData_Slot) GetActionId() uint32 {
	if m != nil && m.ActionId != nil {
		return *m.ActionId
	}
	return 0
}

func (m *CMsgPullTabsData_Slot) GetRedeemed() bool {
	if m != nil && m.Redeemed != nil {
		return *m.Redeemed
	}
	return false
}

type CMsgPullTabsData_Jackpot struct {
	BoardId              *uint32  `protobuf:"varint,1,opt,name=board_id,json=boardId" json:"board_id,omitempty"`
	ActionId             *uint32  `protobuf:"varint,2,opt,name=action_id,json=actionId" json:"action_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,3,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgPullTabsData_Jackpot) Reset()         { *m = CMsgPullTabsData_Jackpot{} }
func (m *CMsgPullTabsData_Jackpot) String() string { return proto.CompactTextString(m) }
func (*CMsgPullTabsData_Jackpot) ProtoMessage()    {}
func (*CMsgPullTabsData_Jackpot) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{63, 1}
}

func (m *CMsgPullTabsData_Jackpot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPullTabsData_Jackpot.Unmarshal(m, b)
}
func (m *CMsgPullTabsData_Jackpot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPullTabsData_Jackpot.Marshal(b, m, deterministic)
}
func (m *CMsgPullTabsData_Jackpot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPullTabsData_Jackpot.Merge(m, src)
}
func (m *CMsgPullTabsData_Jackpot) XXX_Size() int {
	return xxx_messageInfo_CMsgPullTabsData_Jackpot.Size(m)
}
func (m *CMsgPullTabsData_Jackpot) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPullTabsData_Jackpot.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPullTabsData_Jackpot proto.InternalMessageInfo

func (m *CMsgPullTabsData_Jackpot) GetBoardId() uint32 {
	if m != nil && m.BoardId != nil {
		return *m.BoardId
	}
	return 0
}

func (m *CMsgPullTabsData_Jackpot) GetActionId() uint32 {
	if m != nil && m.ActionId != nil {
		return *m.ActionId
	}
	return 0
}

func (m *CMsgPullTabsData_Jackpot) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMsgUnderDraftData struct {
	BenchSlots           []*CMsgUnderDraftData_BenchSlot `protobuf:"bytes,1,rep,name=bench_slots,json=benchSlots" json:"bench_slots,omitempty"`
	ShopSlots            []*CMsgUnderDraftData_ShopSlot  `protobuf:"bytes,2,rep,name=shop_slots,json=shopSlots" json:"shop_slots,omitempty"`
	Gold                 *uint32                         `protobuf:"varint,3,opt,name=gold" json:"gold,omitempty"`
	TotalGold            *uint32                         `protobuf:"varint,4,opt,name=total_gold,json=totalGold" json:"total_gold,omitempty"`
	NotRestorable        *bool                           `protobuf:"varint,5,opt,name=not_restorable,json=notRestorable" json:"not_restorable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CMsgUnderDraftData) Reset()         { *m = CMsgUnderDraftData{} }
func (m *CMsgUnderDraftData) String() string { return proto.CompactTextString(m) }
func (*CMsgUnderDraftData) ProtoMessage()    {}
func (*CMsgUnderDraftData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{64}
}

func (m *CMsgUnderDraftData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgUnderDraftData.Unmarshal(m, b)
}
func (m *CMsgUnderDraftData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgUnderDraftData.Marshal(b, m, deterministic)
}
func (m *CMsgUnderDraftData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgUnderDraftData.Merge(m, src)
}
func (m *CMsgUnderDraftData) XXX_Size() int {
	return xxx_messageInfo_CMsgUnderDraftData.Size(m)
}
func (m *CMsgUnderDraftData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgUnderDraftData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgUnderDraftData proto.InternalMessageInfo

func (m *CMsgUnderDraftData) GetBenchSlots() []*CMsgUnderDraftData_BenchSlot {
	if m != nil {
		return m.BenchSlots
	}
	return nil
}

func (m *CMsgUnderDraftData) GetShopSlots() []*CMsgUnderDraftData_ShopSlot {
	if m != nil {
		return m.ShopSlots
	}
	return nil
}

func (m *CMsgUnderDraftData) GetGold() uint32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *CMsgUnderDraftData) GetTotalGold() uint32 {
	if m != nil && m.TotalGold != nil {
		return *m.TotalGold
	}
	return 0
}

func (m *CMsgUnderDraftData) GetNotRestorable() bool {
	if m != nil && m.NotRestorable != nil {
		return *m.NotRestorable
	}
	return false
}

type CMsgUnderDraftData_BenchSlot struct {
	SlotId               *uint32  `protobuf:"varint,1,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Stars                *uint32  `protobuf:"varint,3,opt,name=stars" json:"stars,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgUnderDraftData_BenchSlot) Reset()         { *m = CMsgUnderDraftData_BenchSlot{} }
func (m *CMsgUnderDraftData_BenchSlot) String() string { return proto.CompactTextString(m) }
func (*CMsgUnderDraftData_BenchSlot) ProtoMessage()    {}
func (*CMsgUnderDraftData_BenchSlot) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{64, 0}
}

func (m *CMsgUnderDraftData_BenchSlot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgUnderDraftData_BenchSlot.Unmarshal(m, b)
}
func (m *CMsgUnderDraftData_BenchSlot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgUnderDraftData_BenchSlot.Marshal(b, m, deterministic)
}
func (m *CMsgUnderDraftData_BenchSlot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgUnderDraftData_BenchSlot.Merge(m, src)
}
func (m *CMsgUnderDraftData_BenchSlot) XXX_Size() int {
	return xxx_messageInfo_CMsgUnderDraftData_BenchSlot.Size(m)
}
func (m *CMsgUnderDraftData_BenchSlot) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgUnderDraftData_BenchSlot.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgUnderDraftData_BenchSlot proto.InternalMessageInfo

func (m *CMsgUnderDraftData_BenchSlot) GetSlotId() uint32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

func (m *CMsgUnderDraftData_BenchSlot) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgUnderDraftData_BenchSlot) GetStars() uint32 {
	if m != nil && m.Stars != nil {
		return *m.Stars
	}
	return 0
}

type CMsgUnderDraftData_ShopSlot struct {
	SlotId               *uint32  `protobuf:"varint,1,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	IsSpecialReward      *bool    `protobuf:"varint,3,opt,name=is_special_reward,json=isSpecialReward" json:"is_special_reward,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgUnderDraftData_ShopSlot) Reset()         { *m = CMsgUnderDraftData_ShopSlot{} }
func (m *CMsgUnderDraftData_ShopSlot) String() string { return proto.CompactTextString(m) }
func (*CMsgUnderDraftData_ShopSlot) ProtoMessage()    {}
func (*CMsgUnderDraftData_ShopSlot) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{64, 1}
}

func (m *CMsgUnderDraftData_ShopSlot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgUnderDraftData_ShopSlot.Unmarshal(m, b)
}
func (m *CMsgUnderDraftData_ShopSlot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgUnderDraftData_ShopSlot.Marshal(b, m, deterministic)
}
func (m *CMsgUnderDraftData_ShopSlot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgUnderDraftData_ShopSlot.Merge(m, src)
}
func (m *CMsgUnderDraftData_ShopSlot) XXX_Size() int {
	return xxx_messageInfo_CMsgUnderDraftData_ShopSlot.Size(m)
}
func (m *CMsgUnderDraftData_ShopSlot) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgUnderDraftData_ShopSlot.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgUnderDraftData_ShopSlot proto.InternalMessageInfo

func (m *CMsgUnderDraftData_ShopSlot) GetSlotId() uint32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

func (m *CMsgUnderDraftData_ShopSlot) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgUnderDraftData_ShopSlot) GetIsSpecialReward() bool {
	if m != nil && m.IsSpecialReward != nil {
		return *m.IsSpecialReward
	}
	return false
}

type CMsgPlayerTitleData struct {
	Title                []uint32 `protobuf:"varint,1,rep,name=title" json:"title,omitempty"`
	EventId              []uint32 `protobuf:"varint,2,rep,name=event_id,json=eventId" json:"event_id,omitempty"`
	Active               *uint32  `protobuf:"varint,3,opt,name=active" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgPlayerTitleData) Reset()         { *m = CMsgPlayerTitleData{} }
func (m *CMsgPlayerTitleData) String() string { return proto.CompactTextString(m) }
func (*CMsgPlayerTitleData) ProtoMessage()    {}
func (*CMsgPlayerTitleData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{65}
}

func (m *CMsgPlayerTitleData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPlayerTitleData.Unmarshal(m, b)
}
func (m *CMsgPlayerTitleData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPlayerTitleData.Marshal(b, m, deterministic)
}
func (m *CMsgPlayerTitleData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPlayerTitleData.Merge(m, src)
}
func (m *CMsgPlayerTitleData) XXX_Size() int {
	return xxx_messageInfo_CMsgPlayerTitleData.Size(m)
}
func (m *CMsgPlayerTitleData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPlayerTitleData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPlayerTitleData proto.InternalMessageInfo

func (m *CMsgPlayerTitleData) GetTitle() []uint32 {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CMsgPlayerTitleData) GetEventId() []uint32 {
	if m != nil {
		return m.EventId
	}
	return nil
}

func (m *CMsgPlayerTitleData) GetActive() uint32 {
	if m != nil && m.Active != nil {
		return *m.Active
	}
	return 0
}

type CMsgDOTATriviaQuestion struct {
	QuestionId           *uint32                      `protobuf:"varint,1,opt,name=question_id,json=questionId" json:"question_id,omitempty"`
	Category             *EDOTATriviaQuestionCategory `protobuf:"varint,2,opt,name=category,enum=protocol.EDOTATriviaQuestionCategory,def=0" json:"category,omitempty"`
	Timestamp            *uint32                      `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	QuestionValue        *string                      `protobuf:"bytes,4,opt,name=question_value,json=questionValue" json:"question_value,omitempty"`
	AnswerValues         []string                     `protobuf:"bytes,5,rep,name=answer_values,json=answerValues" json:"answer_values,omitempty"`
	CorrectAnswerIndex   *uint32                      `protobuf:"varint,6,opt,name=correct_answer_index,json=correctAnswerIndex" json:"correct_answer_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CMsgDOTATriviaQuestion) Reset()         { *m = CMsgDOTATriviaQuestion{} }
func (m *CMsgDOTATriviaQuestion) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATriviaQuestion) ProtoMessage()    {}
func (*CMsgDOTATriviaQuestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{66}
}

func (m *CMsgDOTATriviaQuestion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTATriviaQuestion.Unmarshal(m, b)
}
func (m *CMsgDOTATriviaQuestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTATriviaQuestion.Marshal(b, m, deterministic)
}
func (m *CMsgDOTATriviaQuestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTATriviaQuestion.Merge(m, src)
}
func (m *CMsgDOTATriviaQuestion) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTATriviaQuestion.Size(m)
}
func (m *CMsgDOTATriviaQuestion) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTATriviaQuestion.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTATriviaQuestion proto.InternalMessageInfo

const Default_CMsgDOTATriviaQuestion_Category EDOTATriviaQuestionCategory = EDOTATriviaQuestionCategory_k_EDOTATriviaQuestionCategory_AbilityIcon

func (m *CMsgDOTATriviaQuestion) GetQuestionId() uint32 {
	if m != nil && m.QuestionId != nil {
		return *m.QuestionId
	}
	return 0
}

func (m *CMsgDOTATriviaQuestion) GetCategory() EDOTATriviaQuestionCategory {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return Default_CMsgDOTATriviaQuestion_Category
}

func (m *CMsgDOTATriviaQuestion) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTATriviaQuestion) GetQuestionValue() string {
	if m != nil && m.QuestionValue != nil {
		return *m.QuestionValue
	}
	return ""
}

func (m *CMsgDOTATriviaQuestion) GetAnswerValues() []string {
	if m != nil {
		return m.AnswerValues
	}
	return nil
}

func (m *CMsgDOTATriviaQuestion) GetCorrectAnswerIndex() uint32 {
	if m != nil && m.CorrectAnswerIndex != nil {
		return *m.CorrectAnswerIndex
	}
	return 0
}

type CMsgDOTATriviaQuestionAnswersSummary struct {
	SummaryAvailable     *bool    `protobuf:"varint,1,opt,name=summary_available,json=summaryAvailable" json:"summary_available,omitempty"`
	PickedCount          []uint32 `protobuf:"varint,2,rep,name=picked_count,json=pickedCount" json:"picked_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTATriviaQuestionAnswersSummary) Reset()         { *m = CMsgDOTATriviaQuestionAnswersSummary{} }
func (m *CMsgDOTATriviaQuestionAnswersSummary) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATriviaQuestionAnswersSummary) ProtoMessage()    {}
func (*CMsgDOTATriviaQuestionAnswersSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{67}
}

func (m *CMsgDOTATriviaQuestionAnswersSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTATriviaQuestionAnswersSummary.Unmarshal(m, b)
}
func (m *CMsgDOTATriviaQuestionAnswersSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTATriviaQuestionAnswersSummary.Marshal(b, m, deterministic)
}
func (m *CMsgDOTATriviaQuestionAnswersSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTATriviaQuestionAnswersSummary.Merge(m, src)
}
func (m *CMsgDOTATriviaQuestionAnswersSummary) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTATriviaQuestionAnswersSummary.Size(m)
}
func (m *CMsgDOTATriviaQuestionAnswersSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTATriviaQuestionAnswersSummary.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTATriviaQuestionAnswersSummary proto.InternalMessageInfo

func (m *CMsgDOTATriviaQuestionAnswersSummary) GetSummaryAvailable() bool {
	if m != nil && m.SummaryAvailable != nil {
		return *m.SummaryAvailable
	}
	return false
}

func (m *CMsgDOTATriviaQuestionAnswersSummary) GetPickedCount() []uint32 {
	if m != nil {
		return m.PickedCount
	}
	return nil
}

type CMsgGameDataSpecialValueBonus struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                *float32 `protobuf:"fixed32,2,opt,name=value" json:"value,omitempty"`
	Operation            *uint32  `protobuf:"varint,3,opt,name=operation" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGameDataSpecialValueBonus) Reset()         { *m = CMsgGameDataSpecialValueBonus{} }
func (m *CMsgGameDataSpecialValueBonus) String() string { return proto.CompactTextString(m) }
func (*CMsgGameDataSpecialValueBonus) ProtoMessage()    {}
func (*CMsgGameDataSpecialValueBonus) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{68}
}

func (m *CMsgGameDataSpecialValueBonus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameDataSpecialValueBonus.Unmarshal(m, b)
}
func (m *CMsgGameDataSpecialValueBonus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameDataSpecialValueBonus.Marshal(b, m, deterministic)
}
func (m *CMsgGameDataSpecialValueBonus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameDataSpecialValueBonus.Merge(m, src)
}
func (m *CMsgGameDataSpecialValueBonus) XXX_Size() int {
	return xxx_messageInfo_CMsgGameDataSpecialValueBonus.Size(m)
}
func (m *CMsgGameDataSpecialValueBonus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameDataSpecialValueBonus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameDataSpecialValueBonus proto.InternalMessageInfo

func (m *CMsgGameDataSpecialValueBonus) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGameDataSpecialValueBonus) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *CMsgGameDataSpecialValueBonus) GetOperation() uint32 {
	if m != nil && m.Operation != nil {
		return *m.Operation
	}
	return 0
}

type CMsgGameDataSpecialValues struct {
	Name                 *string                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ValuesFloat          []float32                        `protobuf:"fixed32,2,rep,name=values_float,json=valuesFloat" json:"values_float,omitempty"`
	IsPercentage         *bool                            `protobuf:"varint,4,opt,name=is_percentage,json=isPercentage" json:"is_percentage,omitempty"`
	HeadingLoc           *string                          `protobuf:"bytes,5,opt,name=heading_loc,json=headingLoc" json:"heading_loc,omitempty"`
	Bonuses              []*CMsgGameDataSpecialValueBonus `protobuf:"bytes,6,rep,name=bonuses" json:"bonuses,omitempty"`
	ValuesShard          []float32                        `protobuf:"fixed32,7,rep,name=values_shard,json=valuesShard" json:"values_shard,omitempty"`
	ValuesScepter        []float32                        `protobuf:"fixed32,8,rep,name=values_scepter,json=valuesScepter" json:"values_scepter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CMsgGameDataSpecialValues) Reset()         { *m = CMsgGameDataSpecialValues{} }
func (m *CMsgGameDataSpecialValues) String() string { return proto.CompactTextString(m) }
func (*CMsgGameDataSpecialValues) ProtoMessage()    {}
func (*CMsgGameDataSpecialValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{69}
}

func (m *CMsgGameDataSpecialValues) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameDataSpecialValues.Unmarshal(m, b)
}
func (m *CMsgGameDataSpecialValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameDataSpecialValues.Marshal(b, m, deterministic)
}
func (m *CMsgGameDataSpecialValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameDataSpecialValues.Merge(m, src)
}
func (m *CMsgGameDataSpecialValues) XXX_Size() int {
	return xxx_messageInfo_CMsgGameDataSpecialValues.Size(m)
}
func (m *CMsgGameDataSpecialValues) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameDataSpecialValues.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameDataSpecialValues proto.InternalMessageInfo

func (m *CMsgGameDataSpecialValues) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGameDataSpecialValues) GetValuesFloat() []float32 {
	if m != nil {
		return m.ValuesFloat
	}
	return nil
}

func (m *CMsgGameDataSpecialValues) GetIsPercentage() bool {
	if m != nil && m.IsPercentage != nil {
		return *m.IsPercentage
	}
	return false
}

func (m *CMsgGameDataSpecialValues) GetHeadingLoc() string {
	if m != nil && m.HeadingLoc != nil {
		return *m.HeadingLoc
	}
	return ""
}

func (m *CMsgGameDataSpecialValues) GetBonuses() []*CMsgGameDataSpecialValueBonus {
	if m != nil {
		return m.Bonuses
	}
	return nil
}

func (m *CMsgGameDataSpecialValues) GetValuesShard() []float32 {
	if m != nil {
		return m.ValuesShard
	}
	return nil
}

func (m *CMsgGameDataSpecialValues) GetValuesScepter() []float32 {
	if m != nil {
		return m.ValuesScepter
	}
	return nil
}

type CMsgGameDataAbilityOrItem struct {
	Id                        *int32                       `protobuf:"varint,1,opt,name=id,def=-1" json:"id,omitempty"`
	Name                      *string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameLoc                   *string                      `protobuf:"bytes,5,opt,name=name_loc,json=nameLoc" json:"name_loc,omitempty"`
	DescLoc                   *string                      `protobuf:"bytes,6,opt,name=desc_loc,json=descLoc" json:"desc_loc,omitempty"`
	LoreLoc                   *string                      `protobuf:"bytes,7,opt,name=lore_loc,json=loreLoc" json:"lore_loc,omitempty"`
	NotesLoc                  []string                     `protobuf:"bytes,8,rep,name=notes_loc,json=notesLoc" json:"notes_loc,omitempty"`
	ShardLoc                  *string                      `protobuf:"bytes,9,opt,name=shard_loc,json=shardLoc" json:"shard_loc,omitempty"`
	ScepterLoc                *string                      `protobuf:"bytes,10,opt,name=scepter_loc,json=scepterLoc" json:"scepter_loc,omitempty"`
	Type                      *uint32                      `protobuf:"varint,20,opt,name=type" json:"type,omitempty"`
	Behavior                  *uint64                      `protobuf:"varint,21,opt,name=behavior" json:"behavior,omitempty"`
	TargetTeam                *uint32                      `protobuf:"varint,22,opt,name=target_team,json=targetTeam" json:"target_team,omitempty"`
	TargetType                *uint32                      `protobuf:"varint,23,opt,name=target_type,json=targetType" json:"target_type,omitempty"`
	Flags                     *uint32                      `protobuf:"varint,24,opt,name=flags" json:"flags,omitempty"`
	Damage                    *uint32                      `protobuf:"varint,25,opt,name=damage" json:"damage,omitempty"`
	Immunity                  *uint32                      `protobuf:"varint,26,opt,name=immunity" json:"immunity,omitempty"`
	Dispellable               *uint32                      `protobuf:"varint,27,opt,name=dispellable" json:"dispellable,omitempty"`
	MaxLevel                  *uint32                      `protobuf:"varint,28,opt,name=max_level,json=maxLevel" json:"max_level,omitempty"`
	CastRanges                []uint32                     `protobuf:"varint,30,rep,name=cast_ranges,json=castRanges" json:"cast_ranges,omitempty"`
	CastPoints                []float32                    `protobuf:"fixed32,31,rep,name=cast_points,json=castPoints" json:"cast_points,omitempty"`
	ChannelTimes              []float32                    `protobuf:"fixed32,32,rep,name=channel_times,json=channelTimes" json:"channel_times,omitempty"`
	Cooldowns                 []float32                    `protobuf:"fixed32,33,rep,name=cooldowns" json:"cooldowns,omitempty"`
	Durations                 []float32                    `protobuf:"fixed32,34,rep,name=durations" json:"durations,omitempty"`
	Damages                   []uint32                     `protobuf:"varint,35,rep,name=damages" json:"damages,omitempty"`
	ManaCosts                 []uint32                     `protobuf:"varint,36,rep,name=mana_costs,json=manaCosts" json:"mana_costs,omitempty"`
	GoldCosts                 []uint32                     `protobuf:"varint,37,rep,name=gold_costs,json=goldCosts" json:"gold_costs,omitempty"`
	HealthCosts               []uint32                     `protobuf:"varint,38,rep,name=health_costs,json=healthCosts" json:"health_costs,omitempty"`
	SpecialValues             []*CMsgGameDataSpecialValues `protobuf:"bytes,40,rep,name=special_values,json=specialValues" json:"special_values,omitempty"`
	IsItem                    *bool                        `protobuf:"varint,50,opt,name=is_item,json=isItem" json:"is_item,omitempty"`
	AbilityHasScepter         *bool                        `protobuf:"varint,60,opt,name=ability_has_scepter,json=abilityHasScepter" json:"ability_has_scepter,omitempty"`
	AbilityHasShard           *bool                        `protobuf:"varint,61,opt,name=ability_has_shard,json=abilityHasShard" json:"ability_has_shard,omitempty"`
	AbilityIsGrantedByScepter *bool                        `protobuf:"varint,62,opt,name=ability_is_granted_by_scepter,json=abilityIsGrantedByScepter" json:"ability_is_granted_by_scepter,omitempty"`
	AbilityIsGrantedByShard   *bool                        `protobuf:"varint,63,opt,name=ability_is_granted_by_shard,json=abilityIsGrantedByShard" json:"ability_is_granted_by_shard,omitempty"`
	ItemCost                  *uint32                      `protobuf:"varint,70,opt,name=item_cost,json=itemCost" json:"item_cost,omitempty"`
	ItemInitialCharges        *uint32                      `protobuf:"varint,71,opt,name=item_initial_charges,json=itemInitialCharges" json:"item_initial_charges,omitempty"`
	ItemNeutralTier           *uint32                      `protobuf:"varint,72,opt,name=item_neutral_tier,json=itemNeutralTier" json:"item_neutral_tier,omitempty"`
	ItemStockMax              *uint32                      `protobuf:"varint,73,opt,name=item_stock_max,json=itemStockMax" json:"item_stock_max,omitempty"`
	ItemStockTime             *float32                     `protobuf:"fixed32,74,opt,name=item_stock_time,json=itemStockTime" json:"item_stock_time,omitempty"`
	ItemQuality               *uint32                      `protobuf:"varint,85,opt,name=item_quality,json=itemQuality" json:"item_quality,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                     `json:"-"`
	XXX_unrecognized          []byte                       `json:"-"`
	XXX_sizecache             int32                        `json:"-"`
}

func (m *CMsgGameDataAbilityOrItem) Reset()         { *m = CMsgGameDataAbilityOrItem{} }
func (m *CMsgGameDataAbilityOrItem) String() string { return proto.CompactTextString(m) }
func (*CMsgGameDataAbilityOrItem) ProtoMessage()    {}
func (*CMsgGameDataAbilityOrItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{70}
}

func (m *CMsgGameDataAbilityOrItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameDataAbilityOrItem.Unmarshal(m, b)
}
func (m *CMsgGameDataAbilityOrItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameDataAbilityOrItem.Marshal(b, m, deterministic)
}
func (m *CMsgGameDataAbilityOrItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameDataAbilityOrItem.Merge(m, src)
}
func (m *CMsgGameDataAbilityOrItem) XXX_Size() int {
	return xxx_messageInfo_CMsgGameDataAbilityOrItem.Size(m)
}
func (m *CMsgGameDataAbilityOrItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameDataAbilityOrItem.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameDataAbilityOrItem proto.InternalMessageInfo

const Default_CMsgGameDataAbilityOrItem_Id int32 = -1

func (m *CMsgGameDataAbilityOrItem) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return Default_CMsgGameDataAbilityOrItem_Id
}

func (m *CMsgGameDataAbilityOrItem) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGameDataAbilityOrItem) GetNameLoc() string {
	if m != nil && m.NameLoc != nil {
		return *m.NameLoc
	}
	return ""
}

func (m *CMsgGameDataAbilityOrItem) GetDescLoc() string {
	if m != nil && m.DescLoc != nil {
		return *m.DescLoc
	}
	return ""
}

func (m *CMsgGameDataAbilityOrItem) GetLoreLoc() string {
	if m != nil && m.LoreLoc != nil {
		return *m.LoreLoc
	}
	return ""
}

func (m *CMsgGameDataAbilityOrItem) GetNotesLoc() []string {
	if m != nil {
		return m.NotesLoc
	}
	return nil
}

func (m *CMsgGameDataAbilityOrItem) GetShardLoc() string {
	if m != nil && m.ShardLoc != nil {
		return *m.ShardLoc
	}
	return ""
}

func (m *CMsgGameDataAbilityOrItem) GetScepterLoc() string {
	if m != nil && m.ScepterLoc != nil {
		return *m.ScepterLoc
	}
	return ""
}

func (m *CMsgGameDataAbilityOrItem) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetBehavior() uint64 {
	if m != nil && m.Behavior != nil {
		return *m.Behavior
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetTargetTeam() uint32 {
	if m != nil && m.TargetTeam != nil {
		return *m.TargetTeam
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetTargetType() uint32 {
	if m != nil && m.TargetType != nil {
		return *m.TargetType
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetDamage() uint32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetImmunity() uint32 {
	if m != nil && m.Immunity != nil {
		return *m.Immunity
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetDispellable() uint32 {
	if m != nil && m.Dispellable != nil {
		return *m.Dispellable
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetMaxLevel() uint32 {
	if m != nil && m.MaxLevel != nil {
		return *m.MaxLevel
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetCastRanges() []uint32 {
	if m != nil {
		return m.CastRanges
	}
	return nil
}

func (m *CMsgGameDataAbilityOrItem) GetCastPoints() []float32 {
	if m != nil {
		return m.CastPoints
	}
	return nil
}

func (m *CMsgGameDataAbilityOrItem) GetChannelTimes() []float32 {
	if m != nil {
		return m.ChannelTimes
	}
	return nil
}

func (m *CMsgGameDataAbilityOrItem) GetCooldowns() []float32 {
	if m != nil {
		return m.Cooldowns
	}
	return nil
}

func (m *CMsgGameDataAbilityOrItem) GetDurations() []float32 {
	if m != nil {
		return m.Durations
	}
	return nil
}

func (m *CMsgGameDataAbilityOrItem) GetDamages() []uint32 {
	if m != nil {
		return m.Damages
	}
	return nil
}

func (m *CMsgGameDataAbilityOrItem) GetManaCosts() []uint32 {
	if m != nil {
		return m.ManaCosts
	}
	return nil
}

func (m *CMsgGameDataAbilityOrItem) GetGoldCosts() []uint32 {
	if m != nil {
		return m.GoldCosts
	}
	return nil
}

func (m *CMsgGameDataAbilityOrItem) GetHealthCosts() []uint32 {
	if m != nil {
		return m.HealthCosts
	}
	return nil
}

func (m *CMsgGameDataAbilityOrItem) GetSpecialValues() []*CMsgGameDataSpecialValues {
	if m != nil {
		return m.SpecialValues
	}
	return nil
}

func (m *CMsgGameDataAbilityOrItem) GetIsItem() bool {
	if m != nil && m.IsItem != nil {
		return *m.IsItem
	}
	return false
}

func (m *CMsgGameDataAbilityOrItem) GetAbilityHasScepter() bool {
	if m != nil && m.AbilityHasScepter != nil {
		return *m.AbilityHasScepter
	}
	return false
}

func (m *CMsgGameDataAbilityOrItem) GetAbilityHasShard() bool {
	if m != nil && m.AbilityHasShard != nil {
		return *m.AbilityHasShard
	}
	return false
}

func (m *CMsgGameDataAbilityOrItem) GetAbilityIsGrantedByScepter() bool {
	if m != nil && m.AbilityIsGrantedByScepter != nil {
		return *m.AbilityIsGrantedByScepter
	}
	return false
}

func (m *CMsgGameDataAbilityOrItem) GetAbilityIsGrantedByShard() bool {
	if m != nil && m.AbilityIsGrantedByShard != nil {
		return *m.AbilityIsGrantedByShard
	}
	return false
}

func (m *CMsgGameDataAbilityOrItem) GetItemCost() uint32 {
	if m != nil && m.ItemCost != nil {
		return *m.ItemCost
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetItemInitialCharges() uint32 {
	if m != nil && m.ItemInitialCharges != nil {
		return *m.ItemInitialCharges
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetItemNeutralTier() uint32 {
	if m != nil && m.ItemNeutralTier != nil {
		return *m.ItemNeutralTier
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetItemStockMax() uint32 {
	if m != nil && m.ItemStockMax != nil {
		return *m.ItemStockMax
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetItemStockTime() float32 {
	if m != nil && m.ItemStockTime != nil {
		return *m.ItemStockTime
	}
	return 0
}

func (m *CMsgGameDataAbilityOrItem) GetItemQuality() uint32 {
	if m != nil && m.ItemQuality != nil {
		return *m.ItemQuality
	}
	return 0
}

type CMsgGameDataHero struct {
	Id                   *uint32                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name                 *string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	OrderId              *uint32                      `protobuf:"varint,3,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	NameLoc              *string                      `protobuf:"bytes,5,opt,name=name_loc,json=nameLoc" json:"name_loc,omitempty"`
	BioLoc               *string                      `protobuf:"bytes,6,opt,name=bio_loc,json=bioLoc" json:"bio_loc,omitempty"`
	HypeLoc              *string                      `protobuf:"bytes,7,opt,name=hype_loc,json=hypeLoc" json:"hype_loc,omitempty"`
	NpeDescLoc           *string                      `protobuf:"bytes,8,opt,name=npe_desc_loc,json=npeDescLoc" json:"npe_desc_loc,omitempty"`
	StrBase              *uint32                      `protobuf:"varint,10,opt,name=str_base,json=strBase" json:"str_base,omitempty"`
	StrGain              *float32                     `protobuf:"fixed32,11,opt,name=str_gain,json=strGain" json:"str_gain,omitempty"`
	AgiBase              *uint32                      `protobuf:"varint,12,opt,name=agi_base,json=agiBase" json:"agi_base,omitempty"`
	AgiGain              *float32                     `protobuf:"fixed32,13,opt,name=agi_gain,json=agiGain" json:"agi_gain,omitempty"`
	IntBase              *uint32                      `protobuf:"varint,14,opt,name=int_base,json=intBase" json:"int_base,omitempty"`
	IntGain              *float32                     `protobuf:"fixed32,15,opt,name=int_gain,json=intGain" json:"int_gain,omitempty"`
	PrimaryAttr          *uint32                      `protobuf:"varint,20,opt,name=primary_attr,json=primaryAttr" json:"primary_attr,omitempty"`
	Complexity           *uint32                      `protobuf:"varint,21,opt,name=complexity" json:"complexity,omitempty"`
	AttackCapability     *uint32                      `protobuf:"varint,22,opt,name=attack_capability,json=attackCapability" json:"attack_capability,omitempty"`
	RoleLevels           []uint32                     `protobuf:"varint,23,rep,name=role_levels,json=roleLevels" json:"role_levels,omitempty"`
	DamageMin            *int32                       `protobuf:"varint,24,opt,name=damage_min,json=damageMin" json:"damage_min,omitempty"`
	DamageMax            *int32                       `protobuf:"varint,25,opt,name=damage_max,json=damageMax" json:"damage_max,omitempty"`
	AttackRate           *float32                     `protobuf:"fixed32,26,opt,name=attack_rate,json=attackRate" json:"attack_rate,omitempty"`
	AttackRange          *uint32                      `protobuf:"varint,27,opt,name=attack_range,json=attackRange" json:"attack_range,omitempty"`
	ProjectileSpeed      *uint32                      `protobuf:"varint,28,opt,name=projectile_speed,json=projectileSpeed" json:"projectile_speed,omitempty"`
	Armor                *float32                     `protobuf:"fixed32,29,opt,name=armor" json:"armor,omitempty"`
	MagicResistance      *uint32                      `protobuf:"varint,30,opt,name=magic_resistance,json=magicResistance" json:"magic_resistance,omitempty"`
	MovementSpeed        *uint32                      `protobuf:"varint,31,opt,name=movement_speed,json=movementSpeed" json:"movement_speed,omitempty"`
	TurnRate             *float32                     `protobuf:"fixed32,32,opt,name=turn_rate,json=turnRate" json:"turn_rate,omitempty"`
	SightRangeDay        *uint32                      `protobuf:"varint,33,opt,name=sight_range_day,json=sightRangeDay" json:"sight_range_day,omitempty"`
	SightRangeNight      *uint32                      `protobuf:"varint,34,opt,name=sight_range_night,json=sightRangeNight" json:"sight_range_night,omitempty"`
	MaxHealth            *uint32                      `protobuf:"varint,35,opt,name=max_health,json=maxHealth" json:"max_health,omitempty"`
	HealthRegen          *float32                     `protobuf:"fixed32,36,opt,name=health_regen,json=healthRegen" json:"health_regen,omitempty"`
	MaxMana              *uint32                      `protobuf:"varint,37,opt,name=max_mana,json=maxMana" json:"max_mana,omitempty"`
	ManaRegen            *float32                     `protobuf:"fixed32,38,opt,name=mana_regen,json=manaRegen" json:"mana_regen,omitempty"`
	Abilities            []*CMsgGameDataAbilityOrItem `protobuf:"bytes,40,rep,name=abilities" json:"abilities,omitempty"`
	Talents              []*CMsgGameDataAbilityOrItem `protobuf:"bytes,41,rep,name=talents" json:"talents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CMsgGameDataHero) Reset()         { *m = CMsgGameDataHero{} }
func (m *CMsgGameDataHero) String() string { return proto.CompactTextString(m) }
func (*CMsgGameDataHero) ProtoMessage()    {}
func (*CMsgGameDataHero) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{71}
}

func (m *CMsgGameDataHero) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameDataHero.Unmarshal(m, b)
}
func (m *CMsgGameDataHero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameDataHero.Marshal(b, m, deterministic)
}
func (m *CMsgGameDataHero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameDataHero.Merge(m, src)
}
func (m *CMsgGameDataHero) XXX_Size() int {
	return xxx_messageInfo_CMsgGameDataHero.Size(m)
}
func (m *CMsgGameDataHero) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameDataHero.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameDataHero proto.InternalMessageInfo

func (m *CMsgGameDataHero) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgGameDataHero) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGameDataHero) GetOrderId() uint32 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *CMsgGameDataHero) GetNameLoc() string {
	if m != nil && m.NameLoc != nil {
		return *m.NameLoc
	}
	return ""
}

func (m *CMsgGameDataHero) GetBioLoc() string {
	if m != nil && m.BioLoc != nil {
		return *m.BioLoc
	}
	return ""
}

func (m *CMsgGameDataHero) GetHypeLoc() string {
	if m != nil && m.HypeLoc != nil {
		return *m.HypeLoc
	}
	return ""
}

func (m *CMsgGameDataHero) GetNpeDescLoc() string {
	if m != nil && m.NpeDescLoc != nil {
		return *m.NpeDescLoc
	}
	return ""
}

func (m *CMsgGameDataHero) GetStrBase() uint32 {
	if m != nil && m.StrBase != nil {
		return *m.StrBase
	}
	return 0
}

func (m *CMsgGameDataHero) GetStrGain() float32 {
	if m != nil && m.StrGain != nil {
		return *m.StrGain
	}
	return 0
}

func (m *CMsgGameDataHero) GetAgiBase() uint32 {
	if m != nil && m.AgiBase != nil {
		return *m.AgiBase
	}
	return 0
}

func (m *CMsgGameDataHero) GetAgiGain() float32 {
	if m != nil && m.AgiGain != nil {
		return *m.AgiGain
	}
	return 0
}

func (m *CMsgGameDataHero) GetIntBase() uint32 {
	if m != nil && m.IntBase != nil {
		return *m.IntBase
	}
	return 0
}

func (m *CMsgGameDataHero) GetIntGain() float32 {
	if m != nil && m.IntGain != nil {
		return *m.IntGain
	}
	return 0
}

func (m *CMsgGameDataHero) GetPrimaryAttr() uint32 {
	if m != nil && m.PrimaryAttr != nil {
		return *m.PrimaryAttr
	}
	return 0
}

func (m *CMsgGameDataHero) GetComplexity() uint32 {
	if m != nil && m.Complexity != nil {
		return *m.Complexity
	}
	return 0
}

func (m *CMsgGameDataHero) GetAttackCapability() uint32 {
	if m != nil && m.AttackCapability != nil {
		return *m.AttackCapability
	}
	return 0
}

func (m *CMsgGameDataHero) GetRoleLevels() []uint32 {
	if m != nil {
		return m.RoleLevels
	}
	return nil
}

func (m *CMsgGameDataHero) GetDamageMin() int32 {
	if m != nil && m.DamageMin != nil {
		return *m.DamageMin
	}
	return 0
}

func (m *CMsgGameDataHero) GetDamageMax() int32 {
	if m != nil && m.DamageMax != nil {
		return *m.DamageMax
	}
	return 0
}

func (m *CMsgGameDataHero) GetAttackRate() float32 {
	if m != nil && m.AttackRate != nil {
		return *m.AttackRate
	}
	return 0
}

func (m *CMsgGameDataHero) GetAttackRange() uint32 {
	if m != nil && m.AttackRange != nil {
		return *m.AttackRange
	}
	return 0
}

func (m *CMsgGameDataHero) GetProjectileSpeed() uint32 {
	if m != nil && m.ProjectileSpeed != nil {
		return *m.ProjectileSpeed
	}
	return 0
}

func (m *CMsgGameDataHero) GetArmor() float32 {
	if m != nil && m.Armor != nil {
		return *m.Armor
	}
	return 0
}

func (m *CMsgGameDataHero) GetMagicResistance() uint32 {
	if m != nil && m.MagicResistance != nil {
		return *m.MagicResistance
	}
	return 0
}

func (m *CMsgGameDataHero) GetMovementSpeed() uint32 {
	if m != nil && m.MovementSpeed != nil {
		return *m.MovementSpeed
	}
	return 0
}

func (m *CMsgGameDataHero) GetTurnRate() float32 {
	if m != nil && m.TurnRate != nil {
		return *m.TurnRate
	}
	return 0
}

func (m *CMsgGameDataHero) GetSightRangeDay() uint32 {
	if m != nil && m.SightRangeDay != nil {
		return *m.SightRangeDay
	}
	return 0
}

func (m *CMsgGameDataHero) GetSightRangeNight() uint32 {
	if m != nil && m.SightRangeNight != nil {
		return *m.SightRangeNight
	}
	return 0
}

func (m *CMsgGameDataHero) GetMaxHealth() uint32 {
	if m != nil && m.MaxHealth != nil {
		return *m.MaxHealth
	}
	return 0
}

func (m *CMsgGameDataHero) GetHealthRegen() float32 {
	if m != nil && m.HealthRegen != nil {
		return *m.HealthRegen
	}
	return 0
}

func (m *CMsgGameDataHero) GetMaxMana() uint32 {
	if m != nil && m.MaxMana != nil {
		return *m.MaxMana
	}
	return 0
}

func (m *CMsgGameDataHero) GetManaRegen() float32 {
	if m != nil && m.ManaRegen != nil {
		return *m.ManaRegen
	}
	return 0
}

func (m *CMsgGameDataHero) GetAbilities() []*CMsgGameDataAbilityOrItem {
	if m != nil {
		return m.Abilities
	}
	return nil
}

func (m *CMsgGameDataHero) GetTalents() []*CMsgGameDataAbilityOrItem {
	if m != nil {
		return m.Talents
	}
	return nil
}

type CMsgGameDataAbilities struct {
	Abilities            []*CMsgGameDataAbilityOrItem `protobuf:"bytes,1,rep,name=abilities" json:"abilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CMsgGameDataAbilities) Reset()         { *m = CMsgGameDataAbilities{} }
func (m *CMsgGameDataAbilities) String() string { return proto.CompactTextString(m) }
func (*CMsgGameDataAbilities) ProtoMessage()    {}
func (*CMsgGameDataAbilities) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{72}
}

func (m *CMsgGameDataAbilities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameDataAbilities.Unmarshal(m, b)
}
func (m *CMsgGameDataAbilities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameDataAbilities.Marshal(b, m, deterministic)
}
func (m *CMsgGameDataAbilities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameDataAbilities.Merge(m, src)
}
func (m *CMsgGameDataAbilities) XXX_Size() int {
	return xxx_messageInfo_CMsgGameDataAbilities.Size(m)
}
func (m *CMsgGameDataAbilities) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameDataAbilities.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameDataAbilities proto.InternalMessageInfo

func (m *CMsgGameDataAbilities) GetAbilities() []*CMsgGameDataAbilityOrItem {
	if m != nil {
		return m.Abilities
	}
	return nil
}

type CMsgGameDataItems struct {
	Items                []*CMsgGameDataAbilityOrItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CMsgGameDataItems) Reset()         { *m = CMsgGameDataItems{} }
func (m *CMsgGameDataItems) String() string { return proto.CompactTextString(m) }
func (*CMsgGameDataItems) ProtoMessage()    {}
func (*CMsgGameDataItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{73}
}

func (m *CMsgGameDataItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameDataItems.Unmarshal(m, b)
}
func (m *CMsgGameDataItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameDataItems.Marshal(b, m, deterministic)
}
func (m *CMsgGameDataItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameDataItems.Merge(m, src)
}
func (m *CMsgGameDataItems) XXX_Size() int {
	return xxx_messageInfo_CMsgGameDataItems.Size(m)
}
func (m *CMsgGameDataItems) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameDataItems.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameDataItems proto.InternalMessageInfo

func (m *CMsgGameDataItems) GetItems() []*CMsgGameDataAbilityOrItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type CMsgGameDataHeroes struct {
	Heroes               []*CMsgGameDataHero `protobuf:"bytes,1,rep,name=heroes" json:"heroes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CMsgGameDataHeroes) Reset()         { *m = CMsgGameDataHeroes{} }
func (m *CMsgGameDataHeroes) String() string { return proto.CompactTextString(m) }
func (*CMsgGameDataHeroes) ProtoMessage()    {}
func (*CMsgGameDataHeroes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{74}
}

func (m *CMsgGameDataHeroes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameDataHeroes.Unmarshal(m, b)
}
func (m *CMsgGameDataHeroes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameDataHeroes.Marshal(b, m, deterministic)
}
func (m *CMsgGameDataHeroes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameDataHeroes.Merge(m, src)
}
func (m *CMsgGameDataHeroes) XXX_Size() int {
	return xxx_messageInfo_CMsgGameDataHeroes.Size(m)
}
func (m *CMsgGameDataHeroes) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameDataHeroes.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameDataHeroes proto.InternalMessageInfo

func (m *CMsgGameDataHeroes) GetHeroes() []*CMsgGameDataHero {
	if m != nil {
		return m.Heroes
	}
	return nil
}

type CMsgGameDataHeroList struct {
	Heroes               []*CMsgGameDataHeroList_HeroInfo `protobuf:"bytes,1,rep,name=heroes" json:"heroes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CMsgGameDataHeroList) Reset()         { *m = CMsgGameDataHeroList{} }
func (m *CMsgGameDataHeroList) String() string { return proto.CompactTextString(m) }
func (*CMsgGameDataHeroList) ProtoMessage()    {}
func (*CMsgGameDataHeroList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{75}
}

func (m *CMsgGameDataHeroList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameDataHeroList.Unmarshal(m, b)
}
func (m *CMsgGameDataHeroList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameDataHeroList.Marshal(b, m, deterministic)
}
func (m *CMsgGameDataHeroList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameDataHeroList.Merge(m, src)
}
func (m *CMsgGameDataHeroList) XXX_Size() int {
	return xxx_messageInfo_CMsgGameDataHeroList.Size(m)
}
func (m *CMsgGameDataHeroList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameDataHeroList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameDataHeroList proto.InternalMessageInfo

func (m *CMsgGameDataHeroList) GetHeroes() []*CMsgGameDataHeroList_HeroInfo {
	if m != nil {
		return m.Heroes
	}
	return nil
}

type CMsgGameDataHeroList_HeroInfo struct {
	Id                   *uint32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameLoc              *string  `protobuf:"bytes,3,opt,name=name_loc,json=nameLoc" json:"name_loc,omitempty"`
	NameEnglishLoc       *string  `protobuf:"bytes,4,opt,name=name_english_loc,json=nameEnglishLoc" json:"name_english_loc,omitempty"`
	PrimaryAttr          *uint32  `protobuf:"varint,5,opt,name=primary_attr,json=primaryAttr" json:"primary_attr,omitempty"`
	Complexity           *uint32  `protobuf:"varint,6,opt,name=complexity" json:"complexity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGameDataHeroList_HeroInfo) Reset()         { *m = CMsgGameDataHeroList_HeroInfo{} }
func (m *CMsgGameDataHeroList_HeroInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGameDataHeroList_HeroInfo) ProtoMessage()    {}
func (*CMsgGameDataHeroList_HeroInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{75, 0}
}

func (m *CMsgGameDataHeroList_HeroInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameDataHeroList_HeroInfo.Unmarshal(m, b)
}
func (m *CMsgGameDataHeroList_HeroInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameDataHeroList_HeroInfo.Marshal(b, m, deterministic)
}
func (m *CMsgGameDataHeroList_HeroInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameDataHeroList_HeroInfo.Merge(m, src)
}
func (m *CMsgGameDataHeroList_HeroInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgGameDataHeroList_HeroInfo.Size(m)
}
func (m *CMsgGameDataHeroList_HeroInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameDataHeroList_HeroInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameDataHeroList_HeroInfo proto.InternalMessageInfo

func (m *CMsgGameDataHeroList_HeroInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgGameDataHeroList_HeroInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGameDataHeroList_HeroInfo) GetNameLoc() string {
	if m != nil && m.NameLoc != nil {
		return *m.NameLoc
	}
	return ""
}

func (m *CMsgGameDataHeroList_HeroInfo) GetNameEnglishLoc() string {
	if m != nil && m.NameEnglishLoc != nil {
		return *m.NameEnglishLoc
	}
	return ""
}

func (m *CMsgGameDataHeroList_HeroInfo) GetPrimaryAttr() uint32 {
	if m != nil && m.PrimaryAttr != nil {
		return *m.PrimaryAttr
	}
	return 0
}

func (m *CMsgGameDataHeroList_HeroInfo) GetComplexity() uint32 {
	if m != nil && m.Complexity != nil {
		return *m.Complexity
	}
	return 0
}

type CMsgGameDataItemAbilityList struct {
	Itemabilities        []*CMsgGameDataItemAbilityList_ItemAbilityInfo `protobuf:"bytes,1,rep,name=itemabilities" json:"itemabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *CMsgGameDataItemAbilityList) Reset()         { *m = CMsgGameDataItemAbilityList{} }
func (m *CMsgGameDataItemAbilityList) String() string { return proto.CompactTextString(m) }
func (*CMsgGameDataItemAbilityList) ProtoMessage()    {}
func (*CMsgGameDataItemAbilityList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{76}
}

func (m *CMsgGameDataItemAbilityList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameDataItemAbilityList.Unmarshal(m, b)
}
func (m *CMsgGameDataItemAbilityList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameDataItemAbilityList.Marshal(b, m, deterministic)
}
func (m *CMsgGameDataItemAbilityList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameDataItemAbilityList.Merge(m, src)
}
func (m *CMsgGameDataItemAbilityList) XXX_Size() int {
	return xxx_messageInfo_CMsgGameDataItemAbilityList.Size(m)
}
func (m *CMsgGameDataItemAbilityList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameDataItemAbilityList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameDataItemAbilityList proto.InternalMessageInfo

func (m *CMsgGameDataItemAbilityList) GetItemabilities() []*CMsgGameDataItemAbilityList_ItemAbilityInfo {
	if m != nil {
		return m.Itemabilities
	}
	return nil
}

type CMsgGameDataItemAbilityList_ItemAbilityInfo struct {
	Id                   *int32   `protobuf:"varint,1,opt,name=id,def=-1" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameLoc              *string  `protobuf:"bytes,3,opt,name=name_loc,json=nameLoc" json:"name_loc,omitempty"`
	NameEnglishLoc       *string  `protobuf:"bytes,4,opt,name=name_english_loc,json=nameEnglishLoc" json:"name_english_loc,omitempty"`
	NeutralItemTier      *int32   `protobuf:"varint,5,opt,name=neutral_item_tier,json=neutralItemTier" json:"neutral_item_tier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) Reset() {
	*m = CMsgGameDataItemAbilityList_ItemAbilityInfo{}
}
func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGameDataItemAbilityList_ItemAbilityInfo) ProtoMessage() {}
func (*CMsgGameDataItemAbilityList_ItemAbilityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{76, 0}
}

func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameDataItemAbilityList_ItemAbilityInfo.Unmarshal(m, b)
}
func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameDataItemAbilityList_ItemAbilityInfo.Marshal(b, m, deterministic)
}
func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameDataItemAbilityList_ItemAbilityInfo.Merge(m, src)
}
func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgGameDataItemAbilityList_ItemAbilityInfo.Size(m)
}
func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameDataItemAbilityList_ItemAbilityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameDataItemAbilityList_ItemAbilityInfo proto.InternalMessageInfo

const Default_CMsgGameDataItemAbilityList_ItemAbilityInfo_Id int32 = -1

func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return Default_CMsgGameDataItemAbilityList_ItemAbilityInfo_Id
}

func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) GetNameLoc() string {
	if m != nil && m.NameLoc != nil {
		return *m.NameLoc
	}
	return ""
}

func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) GetNameEnglishLoc() string {
	if m != nil && m.NameEnglishLoc != nil {
		return *m.NameEnglishLoc
	}
	return ""
}

func (m *CMsgGameDataItemAbilityList_ItemAbilityInfo) GetNeutralItemTier() int32 {
	if m != nil && m.NeutralItemTier != nil {
		return *m.NeutralItemTier
	}
	return 0
}

type CMsgLobbyAbilityDraftData struct {
	ShuffleDraftOrder    *bool    `protobuf:"varint,1,opt,name=shuffle_draft_order,json=shuffleDraftOrder" json:"shuffle_draft_order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgLobbyAbilityDraftData) Reset()         { *m = CMsgLobbyAbilityDraftData{} }
func (m *CMsgLobbyAbilityDraftData) String() string { return proto.CompactTextString(m) }
func (*CMsgLobbyAbilityDraftData) ProtoMessage()    {}
func (*CMsgLobbyAbilityDraftData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{77}
}

func (m *CMsgLobbyAbilityDraftData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgLobbyAbilityDraftData.Unmarshal(m, b)
}
func (m *CMsgLobbyAbilityDraftData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgLobbyAbilityDraftData.Marshal(b, m, deterministic)
}
func (m *CMsgLobbyAbilityDraftData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgLobbyAbilityDraftData.Merge(m, src)
}
func (m *CMsgLobbyAbilityDraftData) XXX_Size() int {
	return xxx_messageInfo_CMsgLobbyAbilityDraftData.Size(m)
}
func (m *CMsgLobbyAbilityDraftData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgLobbyAbilityDraftData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgLobbyAbilityDraftData proto.InternalMessageInfo

func (m *CMsgLobbyAbilityDraftData) GetShuffleDraftOrder() bool {
	if m != nil && m.ShuffleDraftOrder != nil {
		return *m.ShuffleDraftOrder
	}
	return false
}

type CSOEconItemDropRateBonus struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ExpirationDate       *uint32  `protobuf:"fixed32,2,opt,name=expiration_date,json=expirationDate" json:"expiration_date,omitempty"`
	Bonus                *float32 `protobuf:"fixed32,3,opt,name=bonus" json:"bonus,omitempty"`
	BonusCount           *uint32  `protobuf:"varint,4,opt,name=bonus_count,json=bonusCount" json:"bonus_count,omitempty"`
	ItemId               *uint64  `protobuf:"varint,5,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	DefIndex             *uint32  `protobuf:"varint,6,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	SecondsLeft          *uint32  `protobuf:"varint,7,opt,name=seconds_left,json=secondsLeft" json:"seconds_left,omitempty"`
	BoosterType          *uint32  `protobuf:"varint,8,opt,name=booster_type,json=boosterType" json:"booster_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSOEconItemDropRateBonus) Reset()         { *m = CSOEconItemDropRateBonus{} }
func (m *CSOEconItemDropRateBonus) String() string { return proto.CompactTextString(m) }
func (*CSOEconItemDropRateBonus) ProtoMessage()    {}
func (*CSOEconItemDropRateBonus) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{78}
}

func (m *CSOEconItemDropRateBonus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSOEconItemDropRateBonus.Unmarshal(m, b)
}
func (m *CSOEconItemDropRateBonus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSOEconItemDropRateBonus.Marshal(b, m, deterministic)
}
func (m *CSOEconItemDropRateBonus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSOEconItemDropRateBonus.Merge(m, src)
}
func (m *CSOEconItemDropRateBonus) XXX_Size() int {
	return xxx_messageInfo_CSOEconItemDropRateBonus.Size(m)
}
func (m *CSOEconItemDropRateBonus) XXX_DiscardUnknown() {
	xxx_messageInfo_CSOEconItemDropRateBonus.DiscardUnknown(m)
}

var xxx_messageInfo_CSOEconItemDropRateBonus proto.InternalMessageInfo

func (m *CSOEconItemDropRateBonus) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSOEconItemDropRateBonus) GetExpirationDate() uint32 {
	if m != nil && m.ExpirationDate != nil {
		return *m.ExpirationDate
	}
	return 0
}

func (m *CSOEconItemDropRateBonus) GetBonus() float32 {
	if m != nil && m.Bonus != nil {
		return *m.Bonus
	}
	return 0
}

func (m *CSOEconItemDropRateBonus) GetBonusCount() uint32 {
	if m != nil && m.BonusCount != nil {
		return *m.BonusCount
	}
	return 0
}

func (m *CSOEconItemDropRateBonus) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CSOEconItemDropRateBonus) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CSOEconItemDropRateBonus) GetSecondsLeft() uint32 {
	if m != nil && m.SecondsLeft != nil {
		return *m.SecondsLeft
	}
	return 0
}

func (m *CSOEconItemDropRateBonus) GetBoosterType() uint32 {
	if m != nil && m.BoosterType != nil {
		return *m.BoosterType
	}
	return 0
}

type CSOEconItemTournamentPassport struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	LeagueId             *uint32  `protobuf:"varint,2,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	ItemId               *uint64  `protobuf:"varint,3,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	OriginalPurchaserId  *uint32  `protobuf:"varint,4,opt,name=original_purchaser_id,json=originalPurchaserId" json:"original_purchaser_id,omitempty"`
	PassportsBought      *uint32  `protobuf:"varint,5,opt,name=passports_bought,json=passportsBought" json:"passports_bought,omitempty"`
	Version              *uint32  `protobuf:"varint,6,opt,name=version" json:"version,omitempty"`
	DefIndex             *uint32  `protobuf:"varint,7,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	RewardFlags          *uint32  `protobuf:"varint,8,opt,name=reward_flags,json=rewardFlags" json:"reward_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSOEconItemTournamentPassport) Reset()         { *m = CSOEconItemTournamentPassport{} }
func (m *CSOEconItemTournamentPassport) String() string { return proto.CompactTextString(m) }
func (*CSOEconItemTournamentPassport) ProtoMessage()    {}
func (*CSOEconItemTournamentPassport) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{79}
}

func (m *CSOEconItemTournamentPassport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSOEconItemTournamentPassport.Unmarshal(m, b)
}
func (m *CSOEconItemTournamentPassport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSOEconItemTournamentPassport.Marshal(b, m, deterministic)
}
func (m *CSOEconItemTournamentPassport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSOEconItemTournamentPassport.Merge(m, src)
}
func (m *CSOEconItemTournamentPassport) XXX_Size() int {
	return xxx_messageInfo_CSOEconItemTournamentPassport.Size(m)
}
func (m *CSOEconItemTournamentPassport) XXX_DiscardUnknown() {
	xxx_messageInfo_CSOEconItemTournamentPassport.DiscardUnknown(m)
}

var xxx_messageInfo_CSOEconItemTournamentPassport proto.InternalMessageInfo

func (m *CSOEconItemTournamentPassport) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSOEconItemTournamentPassport) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CSOEconItemTournamentPassport) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CSOEconItemTournamentPassport) GetOriginalPurchaserId() uint32 {
	if m != nil && m.OriginalPurchaserId != nil {
		return *m.OriginalPurchaserId
	}
	return 0
}

func (m *CSOEconItemTournamentPassport) GetPassportsBought() uint32 {
	if m != nil && m.PassportsBought != nil {
		return *m.PassportsBought
	}
	return 0
}

func (m *CSOEconItemTournamentPassport) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CSOEconItemTournamentPassport) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CSOEconItemTournamentPassport) GetRewardFlags() uint32 {
	if m != nil && m.RewardFlags != nil {
		return *m.RewardFlags
	}
	return 0
}

type CMsgStickerbookSticker struct {
	ItemDefId            *uint32  `protobuf:"varint,1,opt,name=item_def_id,json=itemDefId" json:"item_def_id,omitempty"`
	StickerNum           *uint32  `protobuf:"varint,2,opt,name=sticker_num,json=stickerNum" json:"sticker_num,omitempty"`
	Quality              *uint32  `protobuf:"varint,3,opt,name=quality" json:"quality,omitempty"`
	PositionX            *float32 `protobuf:"fixed32,4,opt,name=position_x,json=positionX" json:"position_x,omitempty"`
	PositionY            *float32 `protobuf:"fixed32,5,opt,name=position_y,json=positionY" json:"position_y,omitempty"`
	PositionZ            *float32 `protobuf:"fixed32,8,opt,name=position_z,json=positionZ" json:"position_z,omitempty"`
	Rotation             *float32 `protobuf:"fixed32,6,opt,name=rotation" json:"rotation,omitempty"`
	Scale                *float32 `protobuf:"fixed32,7,opt,name=scale" json:"scale,omitempty"`
	SourceItemId         *uint64  `protobuf:"varint,9,opt,name=source_item_id,json=sourceItemId" json:"source_item_id,omitempty"`
	DepthBias            *uint32  `protobuf:"varint,10,opt,name=depth_bias,json=depthBias" json:"depth_bias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgStickerbookSticker) Reset()         { *m = CMsgStickerbookSticker{} }
func (m *CMsgStickerbookSticker) String() string { return proto.CompactTextString(m) }
func (*CMsgStickerbookSticker) ProtoMessage()    {}
func (*CMsgStickerbookSticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{80}
}

func (m *CMsgStickerbookSticker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgStickerbookSticker.Unmarshal(m, b)
}
func (m *CMsgStickerbookSticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgStickerbookSticker.Marshal(b, m, deterministic)
}
func (m *CMsgStickerbookSticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgStickerbookSticker.Merge(m, src)
}
func (m *CMsgStickerbookSticker) XXX_Size() int {
	return xxx_messageInfo_CMsgStickerbookSticker.Size(m)
}
func (m *CMsgStickerbookSticker) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgStickerbookSticker.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgStickerbookSticker proto.InternalMessageInfo

func (m *CMsgStickerbookSticker) GetItemDefId() uint32 {
	if m != nil && m.ItemDefId != nil {
		return *m.ItemDefId
	}
	return 0
}

func (m *CMsgStickerbookSticker) GetStickerNum() uint32 {
	if m != nil && m.StickerNum != nil {
		return *m.StickerNum
	}
	return 0
}

func (m *CMsgStickerbookSticker) GetQuality() uint32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *CMsgStickerbookSticker) GetPositionX() float32 {
	if m != nil && m.PositionX != nil {
		return *m.PositionX
	}
	return 0
}

func (m *CMsgStickerbookSticker) GetPositionY() float32 {
	if m != nil && m.PositionY != nil {
		return *m.PositionY
	}
	return 0
}

func (m *CMsgStickerbookSticker) GetPositionZ() float32 {
	if m != nil && m.PositionZ != nil {
		return *m.PositionZ
	}
	return 0
}

func (m *CMsgStickerbookSticker) GetRotation() float32 {
	if m != nil && m.Rotation != nil {
		return *m.Rotation
	}
	return 0
}

func (m *CMsgStickerbookSticker) GetScale() float32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return 0
}

func (m *CMsgStickerbookSticker) GetSourceItemId() uint64 {
	if m != nil && m.SourceItemId != nil {
		return *m.SourceItemId
	}
	return 0
}

func (m *CMsgStickerbookSticker) GetDepthBias() uint32 {
	if m != nil && m.DepthBias != nil {
		return *m.DepthBias
	}
	return 0
}

type CMsgStickerbookPage struct {
	PageNum              *uint32                   `protobuf:"varint,1,opt,name=page_num,json=pageNum" json:"page_num,omitempty"`
	EventId              *EEvent                   `protobuf:"varint,2,opt,name=event_id,json=eventId,enum=protocol.EEvent,def=0" json:"event_id,omitempty"`
	TeamId               *uint32                   `protobuf:"varint,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Stickers             []*CMsgStickerbookSticker `protobuf:"bytes,4,rep,name=stickers" json:"stickers,omitempty"`
	PageType             *EStickerbookPageType     `protobuf:"varint,5,opt,name=page_type,json=pageType,enum=protocol.EStickerbookPageType,def=0" json:"page_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CMsgStickerbookPage) Reset()         { *m = CMsgStickerbookPage{} }
func (m *CMsgStickerbookPage) String() string { return proto.CompactTextString(m) }
func (*CMsgStickerbookPage) ProtoMessage()    {}
func (*CMsgStickerbookPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{81}
}

func (m *CMsgStickerbookPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgStickerbookPage.Unmarshal(m, b)
}
func (m *CMsgStickerbookPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgStickerbookPage.Marshal(b, m, deterministic)
}
func (m *CMsgStickerbookPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgStickerbookPage.Merge(m, src)
}
func (m *CMsgStickerbookPage) XXX_Size() int {
	return xxx_messageInfo_CMsgStickerbookPage.Size(m)
}
func (m *CMsgStickerbookPage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgStickerbookPage.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgStickerbookPage proto.InternalMessageInfo

const Default_CMsgStickerbookPage_EventId EEvent = EEvent_EVENT_ID_NONE
const Default_CMsgStickerbookPage_PageType EStickerbookPageType = EStickerbookPageType_STICKER_PAGE_GENERIC

func (m *CMsgStickerbookPage) GetPageNum() uint32 {
	if m != nil && m.PageNum != nil {
		return *m.PageNum
	}
	return 0
}

func (m *CMsgStickerbookPage) GetEventId() EEvent {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return Default_CMsgStickerbookPage_EventId
}

func (m *CMsgStickerbookPage) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgStickerbookPage) GetStickers() []*CMsgStickerbookSticker {
	if m != nil {
		return m.Stickers
	}
	return nil
}

func (m *CMsgStickerbookPage) GetPageType() EStickerbookPageType {
	if m != nil && m.PageType != nil {
		return *m.PageType
	}
	return Default_CMsgStickerbookPage_PageType
}

type CMsgStickerbookTeamPageOrderSequence struct {
	PageNumbers          []uint32 `protobuf:"varint,1,rep,name=page_numbers,json=pageNumbers" json:"page_numbers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgStickerbookTeamPageOrderSequence) Reset()         { *m = CMsgStickerbookTeamPageOrderSequence{} }
func (m *CMsgStickerbookTeamPageOrderSequence) String() string { return proto.CompactTextString(m) }
func (*CMsgStickerbookTeamPageOrderSequence) ProtoMessage()    {}
func (*CMsgStickerbookTeamPageOrderSequence) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{82}
}

func (m *CMsgStickerbookTeamPageOrderSequence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgStickerbookTeamPageOrderSequence.Unmarshal(m, b)
}
func (m *CMsgStickerbookTeamPageOrderSequence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgStickerbookTeamPageOrderSequence.Marshal(b, m, deterministic)
}
func (m *CMsgStickerbookTeamPageOrderSequence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgStickerbookTeamPageOrderSequence.Merge(m, src)
}
func (m *CMsgStickerbookTeamPageOrderSequence) XXX_Size() int {
	return xxx_messageInfo_CMsgStickerbookTeamPageOrderSequence.Size(m)
}
func (m *CMsgStickerbookTeamPageOrderSequence) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgStickerbookTeamPageOrderSequence.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgStickerbookTeamPageOrderSequence proto.InternalMessageInfo

func (m *CMsgStickerbookTeamPageOrderSequence) GetPageNumbers() []uint32 {
	if m != nil {
		return m.PageNumbers
	}
	return nil
}

type CMsgStickerbook struct {
	Pages                 []*CMsgStickerbookPage                `protobuf:"bytes,1,rep,name=pages" json:"pages,omitempty"`
	TeamPageOrderSequence *CMsgStickerbookTeamPageOrderSequence `protobuf:"bytes,2,opt,name=team_page_order_sequence,json=teamPageOrderSequence" json:"team_page_order_sequence,omitempty"`
	FavoritePageNum       *uint32                               `protobuf:"varint,3,opt,name=favorite_page_num,json=favoritePageNum" json:"favorite_page_num,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                              `json:"-"`
	XXX_unrecognized      []byte                                `json:"-"`
	XXX_sizecache         int32                                 `json:"-"`
}

func (m *CMsgStickerbook) Reset()         { *m = CMsgStickerbook{} }
func (m *CMsgStickerbook) String() string { return proto.CompactTextString(m) }
func (*CMsgStickerbook) ProtoMessage()    {}
func (*CMsgStickerbook) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{83}
}

func (m *CMsgStickerbook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgStickerbook.Unmarshal(m, b)
}
func (m *CMsgStickerbook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgStickerbook.Marshal(b, m, deterministic)
}
func (m *CMsgStickerbook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgStickerbook.Merge(m, src)
}
func (m *CMsgStickerbook) XXX_Size() int {
	return xxx_messageInfo_CMsgStickerbook.Size(m)
}
func (m *CMsgStickerbook) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgStickerbook.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgStickerbook proto.InternalMessageInfo

func (m *CMsgStickerbook) GetPages() []*CMsgStickerbookPage {
	if m != nil {
		return m.Pages
	}
	return nil
}

func (m *CMsgStickerbook) GetTeamPageOrderSequence() *CMsgStickerbookTeamPageOrderSequence {
	if m != nil {
		return m.TeamPageOrderSequence
	}
	return nil
}

func (m *CMsgStickerbook) GetFavoritePageNum() uint32 {
	if m != nil && m.FavoritePageNum != nil {
		return *m.FavoritePageNum
	}
	return 0
}

type CMsgStickerHero struct {
	HeroId               *uint32  `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	ItemDefId            *uint32  `protobuf:"varint,2,opt,name=item_def_id,json=itemDefId" json:"item_def_id,omitempty"`
	Quality              *uint32  `protobuf:"varint,3,opt,name=quality" json:"quality,omitempty"`
	SourceItemId         *uint64  `protobuf:"varint,4,opt,name=source_item_id,json=sourceItemId" json:"source_item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgStickerHero) Reset()         { *m = CMsgStickerHero{} }
func (m *CMsgStickerHero) String() string { return proto.CompactTextString(m) }
func (*CMsgStickerHero) ProtoMessage()    {}
func (*CMsgStickerHero) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{84}
}

func (m *CMsgStickerHero) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgStickerHero.Unmarshal(m, b)
}
func (m *CMsgStickerHero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgStickerHero.Marshal(b, m, deterministic)
}
func (m *CMsgStickerHero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgStickerHero.Merge(m, src)
}
func (m *CMsgStickerHero) XXX_Size() int {
	return xxx_messageInfo_CMsgStickerHero.Size(m)
}
func (m *CMsgStickerHero) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgStickerHero.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgStickerHero proto.InternalMessageInfo

func (m *CMsgStickerHero) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgStickerHero) GetItemDefId() uint32 {
	if m != nil && m.ItemDefId != nil {
		return *m.ItemDefId
	}
	return 0
}

func (m *CMsgStickerHero) GetQuality() uint32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *CMsgStickerHero) GetSourceItemId() uint64 {
	if m != nil && m.SourceItemId != nil {
		return *m.SourceItemId
	}
	return 0
}

type CMsgStickerHeroes struct {
	Heroes               []*CMsgStickerHero `protobuf:"bytes,1,rep,name=heroes" json:"heroes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CMsgStickerHeroes) Reset()         { *m = CMsgStickerHeroes{} }
func (m *CMsgStickerHeroes) String() string { return proto.CompactTextString(m) }
func (*CMsgStickerHeroes) ProtoMessage()    {}
func (*CMsgStickerHeroes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{85}
}

func (m *CMsgStickerHeroes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgStickerHeroes.Unmarshal(m, b)
}
func (m *CMsgStickerHeroes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgStickerHeroes.Marshal(b, m, deterministic)
}
func (m *CMsgStickerHeroes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgStickerHeroes.Merge(m, src)
}
func (m *CMsgStickerHeroes) XXX_Size() int {
	return xxx_messageInfo_CMsgStickerHeroes.Size(m)
}
func (m *CMsgStickerHeroes) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgStickerHeroes.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgStickerHeroes proto.InternalMessageInfo

func (m *CMsgStickerHeroes) GetHeroes() []*CMsgStickerHero {
	if m != nil {
		return m.Heroes
	}
	return nil
}

type CMsgHeroRoleStats struct {
	LaneSelectionFlags   *uint32  `protobuf:"varint,1,opt,name=lane_selection_flags,json=laneSelectionFlags" json:"lane_selection_flags,omitempty"`
	MatchCount           *uint32  `protobuf:"varint,2,opt,name=match_count,json=matchCount" json:"match_count,omitempty"`
	WinCount             *uint32  `protobuf:"varint,3,opt,name=win_count,json=winCount" json:"win_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgHeroRoleStats) Reset()         { *m = CMsgHeroRoleStats{} }
func (m *CMsgHeroRoleStats) String() string { return proto.CompactTextString(m) }
func (*CMsgHeroRoleStats) ProtoMessage()    {}
func (*CMsgHeroRoleStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{86}
}

func (m *CMsgHeroRoleStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgHeroRoleStats.Unmarshal(m, b)
}
func (m *CMsgHeroRoleStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgHeroRoleStats.Marshal(b, m, deterministic)
}
func (m *CMsgHeroRoleStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgHeroRoleStats.Merge(m, src)
}
func (m *CMsgHeroRoleStats) XXX_Size() int {
	return xxx_messageInfo_CMsgHeroRoleStats.Size(m)
}
func (m *CMsgHeroRoleStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgHeroRoleStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgHeroRoleStats proto.InternalMessageInfo

func (m *CMsgHeroRoleStats) GetLaneSelectionFlags() uint32 {
	if m != nil && m.LaneSelectionFlags != nil {
		return *m.LaneSelectionFlags
	}
	return 0
}

func (m *CMsgHeroRoleStats) GetMatchCount() uint32 {
	if m != nil && m.MatchCount != nil {
		return *m.MatchCount
	}
	return 0
}

func (m *CMsgHeroRoleStats) GetWinCount() uint32 {
	if m != nil && m.WinCount != nil {
		return *m.WinCount
	}
	return 0
}

type CMsgHeroRoleHeroStats struct {
	HeroId               *uint32              `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	RoleStats            []*CMsgHeroRoleStats `protobuf:"bytes,2,rep,name=role_stats,json=roleStats" json:"role_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CMsgHeroRoleHeroStats) Reset()         { *m = CMsgHeroRoleHeroStats{} }
func (m *CMsgHeroRoleHeroStats) String() string { return proto.CompactTextString(m) }
func (*CMsgHeroRoleHeroStats) ProtoMessage()    {}
func (*CMsgHeroRoleHeroStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{87}
}

func (m *CMsgHeroRoleHeroStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgHeroRoleHeroStats.Unmarshal(m, b)
}
func (m *CMsgHeroRoleHeroStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgHeroRoleHeroStats.Marshal(b, m, deterministic)
}
func (m *CMsgHeroRoleHeroStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgHeroRoleHeroStats.Merge(m, src)
}
func (m *CMsgHeroRoleHeroStats) XXX_Size() int {
	return xxx_messageInfo_CMsgHeroRoleHeroStats.Size(m)
}
func (m *CMsgHeroRoleHeroStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgHeroRoleHeroStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgHeroRoleHeroStats proto.InternalMessageInfo

func (m *CMsgHeroRoleHeroStats) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgHeroRoleHeroStats) GetRoleStats() []*CMsgHeroRoleStats {
	if m != nil {
		return m.RoleStats
	}
	return nil
}

type CMsgHeroRoleRankStats struct {
	RankTier             *uint32                  `protobuf:"varint,1,opt,name=rank_tier,json=rankTier" json:"rank_tier,omitempty"`
	HeroStats            []*CMsgHeroRoleHeroStats `protobuf:"bytes,2,rep,name=hero_stats,json=heroStats" json:"hero_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CMsgHeroRoleRankStats) Reset()         { *m = CMsgHeroRoleRankStats{} }
func (m *CMsgHeroRoleRankStats) String() string { return proto.CompactTextString(m) }
func (*CMsgHeroRoleRankStats) ProtoMessage()    {}
func (*CMsgHeroRoleRankStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{88}
}

func (m *CMsgHeroRoleRankStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgHeroRoleRankStats.Unmarshal(m, b)
}
func (m *CMsgHeroRoleRankStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgHeroRoleRankStats.Marshal(b, m, deterministic)
}
func (m *CMsgHeroRoleRankStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgHeroRoleRankStats.Merge(m, src)
}
func (m *CMsgHeroRoleRankStats) XXX_Size() int {
	return xxx_messageInfo_CMsgHeroRoleRankStats.Size(m)
}
func (m *CMsgHeroRoleRankStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgHeroRoleRankStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgHeroRoleRankStats proto.InternalMessageInfo

func (m *CMsgHeroRoleRankStats) GetRankTier() uint32 {
	if m != nil && m.RankTier != nil {
		return *m.RankTier
	}
	return 0
}

func (m *CMsgHeroRoleRankStats) GetHeroStats() []*CMsgHeroRoleHeroStats {
	if m != nil {
		return m.HeroStats
	}
	return nil
}

type CMsgHeroRoleAllRanksStats struct {
	StartTimestamp       *uint32                  `protobuf:"varint,1,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	EndTimestamp         *uint32                  `protobuf:"varint,2,opt,name=end_timestamp,json=endTimestamp" json:"end_timestamp,omitempty"`
	RankStats            []*CMsgHeroRoleRankStats `protobuf:"bytes,3,rep,name=rank_stats,json=rankStats" json:"rank_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CMsgHeroRoleAllRanksStats) Reset()         { *m = CMsgHeroRoleAllRanksStats{} }
func (m *CMsgHeroRoleAllRanksStats) String() string { return proto.CompactTextString(m) }
func (*CMsgHeroRoleAllRanksStats) ProtoMessage()    {}
func (*CMsgHeroRoleAllRanksStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{89}
}

func (m *CMsgHeroRoleAllRanksStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgHeroRoleAllRanksStats.Unmarshal(m, b)
}
func (m *CMsgHeroRoleAllRanksStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgHeroRoleAllRanksStats.Marshal(b, m, deterministic)
}
func (m *CMsgHeroRoleAllRanksStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgHeroRoleAllRanksStats.Merge(m, src)
}
func (m *CMsgHeroRoleAllRanksStats) XXX_Size() int {
	return xxx_messageInfo_CMsgHeroRoleAllRanksStats.Size(m)
}
func (m *CMsgHeroRoleAllRanksStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgHeroRoleAllRanksStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgHeroRoleAllRanksStats proto.InternalMessageInfo

func (m *CMsgHeroRoleAllRanksStats) GetStartTimestamp() uint32 {
	if m != nil && m.StartTimestamp != nil {
		return *m.StartTimestamp
	}
	return 0
}

func (m *CMsgHeroRoleAllRanksStats) GetEndTimestamp() uint32 {
	if m != nil && m.EndTimestamp != nil {
		return *m.EndTimestamp
	}
	return 0
}

func (m *CMsgHeroRoleAllRanksStats) GetRankStats() []*CMsgHeroRoleRankStats {
	if m != nil {
		return m.RankStats
	}
	return nil
}

type CMsgMapStatsSnapshot struct {
	Timestamp            *uint32  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	LotusesGained        *uint64  `protobuf:"varint,2,opt,name=lotuses_gained,json=lotusesGained" json:"lotuses_gained,omitempty"`
	WisdomRunesGained    *uint64  `protobuf:"varint,3,opt,name=wisdom_runes_gained,json=wisdomRunesGained" json:"wisdom_runes_gained,omitempty"`
	RoshanKillsDay       *uint64  `protobuf:"varint,4,opt,name=roshan_kills_day,json=roshanKillsDay" json:"roshan_kills_day,omitempty"`
	RoshanKillsNight     *uint64  `protobuf:"varint,5,opt,name=roshan_kills_night,json=roshanKillsNight" json:"roshan_kills_night,omitempty"`
	PortalsUsed          *uint64  `protobuf:"varint,6,opt,name=portals_used,json=portalsUsed" json:"portals_used,omitempty"`
	WatchersTaken        *uint64  `protobuf:"varint,7,opt,name=watchers_taken,json=watchersTaken" json:"watchers_taken,omitempty"`
	TormentorKills       *uint64  `protobuf:"varint,8,opt,name=tormentor_kills,json=tormentorKills" json:"tormentor_kills,omitempty"`
	OutpostsCaptured     *uint64  `protobuf:"varint,9,opt,name=outposts_captured,json=outpostsCaptured" json:"outposts_captured,omitempty"`
	ShieldRunesGained    *uint64  `protobuf:"varint,10,opt,name=shield_runes_gained,json=shieldRunesGained" json:"shield_runes_gained,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgMapStatsSnapshot) Reset()         { *m = CMsgMapStatsSnapshot{} }
func (m *CMsgMapStatsSnapshot) String() string { return proto.CompactTextString(m) }
func (*CMsgMapStatsSnapshot) ProtoMessage()    {}
func (*CMsgMapStatsSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{90}
}

func (m *CMsgMapStatsSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgMapStatsSnapshot.Unmarshal(m, b)
}
func (m *CMsgMapStatsSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgMapStatsSnapshot.Marshal(b, m, deterministic)
}
func (m *CMsgMapStatsSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgMapStatsSnapshot.Merge(m, src)
}
func (m *CMsgMapStatsSnapshot) XXX_Size() int {
	return xxx_messageInfo_CMsgMapStatsSnapshot.Size(m)
}
func (m *CMsgMapStatsSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgMapStatsSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgMapStatsSnapshot proto.InternalMessageInfo

func (m *CMsgMapStatsSnapshot) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgMapStatsSnapshot) GetLotusesGained() uint64 {
	if m != nil && m.LotusesGained != nil {
		return *m.LotusesGained
	}
	return 0
}

func (m *CMsgMapStatsSnapshot) GetWisdomRunesGained() uint64 {
	if m != nil && m.WisdomRunesGained != nil {
		return *m.WisdomRunesGained
	}
	return 0
}

func (m *CMsgMapStatsSnapshot) GetRoshanKillsDay() uint64 {
	if m != nil && m.RoshanKillsDay != nil {
		return *m.RoshanKillsDay
	}
	return 0
}

func (m *CMsgMapStatsSnapshot) GetRoshanKillsNight() uint64 {
	if m != nil && m.RoshanKillsNight != nil {
		return *m.RoshanKillsNight
	}
	return 0
}

func (m *CMsgMapStatsSnapshot) GetPortalsUsed() uint64 {
	if m != nil && m.PortalsUsed != nil {
		return *m.PortalsUsed
	}
	return 0
}

func (m *CMsgMapStatsSnapshot) GetWatchersTaken() uint64 {
	if m != nil && m.WatchersTaken != nil {
		return *m.WatchersTaken
	}
	return 0
}

func (m *CMsgMapStatsSnapshot) GetTormentorKills() uint64 {
	if m != nil && m.TormentorKills != nil {
		return *m.TormentorKills
	}
	return 0
}

func (m *CMsgMapStatsSnapshot) GetOutpostsCaptured() uint64 {
	if m != nil && m.OutpostsCaptured != nil {
		return *m.OutpostsCaptured
	}
	return 0
}

func (m *CMsgMapStatsSnapshot) GetShieldRunesGained() uint64 {
	if m != nil && m.ShieldRunesGained != nil {
		return *m.ShieldRunesGained
	}
	return 0
}

type CMsgGlobalMapStats struct {
	Current              *CMsgMapStatsSnapshot `protobuf:"bytes,1,opt,name=current" json:"current,omitempty"`
	WindowStart          *CMsgMapStatsSnapshot `protobuf:"bytes,2,opt,name=window_start,json=windowStart" json:"window_start,omitempty"`
	WindowEnd            *CMsgMapStatsSnapshot `protobuf:"bytes,3,opt,name=window_end,json=windowEnd" json:"window_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CMsgGlobalMapStats) Reset()         { *m = CMsgGlobalMapStats{} }
func (m *CMsgGlobalMapStats) String() string { return proto.CompactTextString(m) }
func (*CMsgGlobalMapStats) ProtoMessage()    {}
func (*CMsgGlobalMapStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{91}
}

func (m *CMsgGlobalMapStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGlobalMapStats.Unmarshal(m, b)
}
func (m *CMsgGlobalMapStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGlobalMapStats.Marshal(b, m, deterministic)
}
func (m *CMsgGlobalMapStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGlobalMapStats.Merge(m, src)
}
func (m *CMsgGlobalMapStats) XXX_Size() int {
	return xxx_messageInfo_CMsgGlobalMapStats.Size(m)
}
func (m *CMsgGlobalMapStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGlobalMapStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGlobalMapStats proto.InternalMessageInfo

func (m *CMsgGlobalMapStats) GetCurrent() *CMsgMapStatsSnapshot {
	if m != nil {
		return m.Current
	}
	return nil
}

func (m *CMsgGlobalMapStats) GetWindowStart() *CMsgMapStatsSnapshot {
	if m != nil {
		return m.WindowStart
	}
	return nil
}

func (m *CMsgGlobalMapStats) GetWindowEnd() *CMsgMapStatsSnapshot {
	if m != nil {
		return m.WindowEnd
	}
	return nil
}

type CMsgTrackedStat struct {
	TrackedStatId        *uint32  `protobuf:"varint,1,opt,name=tracked_stat_id,json=trackedStatId" json:"tracked_stat_id,omitempty"`
	TrackedStatValue     *int32   `protobuf:"varint,2,opt,name=tracked_stat_value,json=trackedStatValue" json:"tracked_stat_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgTrackedStat) Reset()         { *m = CMsgTrackedStat{} }
func (m *CMsgTrackedStat) String() string { return proto.CompactTextString(m) }
func (*CMsgTrackedStat) ProtoMessage()    {}
func (*CMsgTrackedStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a0b43d4fa15eff, []int{92}
}

func (m *CMsgTrackedStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgTrackedStat.Unmarshal(m, b)
}
func (m *CMsgTrackedStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgTrackedStat.Marshal(b, m, deterministic)
}
func (m *CMsgTrackedStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgTrackedStat.Merge(m, src)
}
func (m *CMsgTrackedStat) XXX_Size() int {
	return xxx_messageInfo_CMsgTrackedStat.Size(m)
}
func (m *CMsgTrackedStat) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgTrackedStat.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgTrackedStat proto.InternalMessageInfo

func (m *CMsgTrackedStat) GetTrackedStatId() uint32 {
	if m != nil && m.TrackedStatId != nil {
		return *m.TrackedStatId
	}
	return 0
}

func (m *CMsgTrackedStat) GetTrackedStatValue() int32 {
	if m != nil && m.TrackedStatValue != nil {
		return *m.TrackedStatValue
	}
	return 0
}

func init() {
	proto.RegisterEnum("protocol.ESpecialPingValue", ESpecialPingValue_name, ESpecialPingValue_value)
	proto.RegisterEnum("protocol.EDOTAGCSessionNeed", EDOTAGCSessionNeed_name, EDOTAGCSessionNeed_value)
	proto.RegisterEnum("protocol.EDOTAMatchPlayerTimeCustomStat", EDOTAMatchPlayerTimeCustomStat_name, EDOTAMatchPlayerTimeCustomStat_value)
	proto.RegisterEnum("protocol.DOTA_TournamentEvents", DOTA_TournamentEvents_name, DOTA_TournamentEvents_value)
	proto.RegisterEnum("protocol.EBroadcastTimelineEvent", EBroadcastTimelineEvent_name, EBroadcastTimelineEvent_value)
	proto.RegisterEnum("protocol.ECustomGameWhitelistState", ECustomGameWhitelistState_name, ECustomGameWhitelistState_value)
	proto.RegisterEnum("protocol.EDOTATriviaQuestionCategory", EDOTATriviaQuestionCategory_name, EDOTATriviaQuestionCategory_value)
	proto.RegisterEnum("protocol.EOverwatchConviction", EOverwatchConviction_name, EOverwatchConviction_value)
	proto.RegisterEnum("protocol.EHeroRelicRarity", EHeroRelicRarity_name, EHeroRelicRarity_value)
	proto.RegisterEnum("protocol.EStickerbookAuditAction", EStickerbookAuditAction_name, EStickerbookAuditAction_value)
	proto.RegisterEnum("protocol.EStickerbookPageType", EStickerbookPageType_name, EStickerbookPageType_value)
	proto.RegisterEnum("protocol.CMsgDOTAProfileCard_EStatID", CMsgDOTAProfileCard_EStatID_name, CMsgDOTAProfileCard_EStatID_value)
	proto.RegisterEnum("protocol.CMsgGCRerollPlayerChallengeResponse_EResult", CMsgGCRerollPlayerChallengeResponse_EResult_name, CMsgGCRerollPlayerChallengeResponse_EResult_value)
	proto.RegisterEnum("protocol.CMsgDOTARealtimeGameStats_GraphDataEStat", CMsgDOTARealtimeGameStats_GraphDataEStat_name, CMsgDOTARealtimeGameStats_GraphDataEStat_value)
	proto.RegisterEnum("protocol.CMsgDOTARealtimeGameStats_GraphDataELocation", CMsgDOTARealtimeGameStats_GraphDataELocation_name, CMsgDOTARealtimeGameStats_GraphDataELocation_value)
	proto.RegisterEnum("protocol.CMsgInGamePrediction_ERawValueTypeT", CMsgInGamePrediction_ERawValueTypeT_name, CMsgInGamePrediction_ERawValueTypeT_value)
	proto.RegisterEnum("protocol.CMsgInGamePrediction_EPredictionType", CMsgInGamePrediction_EPredictionType_name, CMsgInGamePrediction_EPredictionType_value)
	proto.RegisterEnum("protocol.CMsgInGamePrediction_EResolutionTypeT", CMsgInGamePrediction_EResolutionTypeT_name, CMsgInGamePrediction_EResolutionTypeT_value)
	proto.RegisterEnum("protocol.CMsgInGamePrediction_ERandomSelectionGroupT", CMsgInGamePrediction_ERandomSelectionGroupT_name, CMsgInGamePrediction_ERandomSelectionGroupT_value)
	proto.RegisterEnum("protocol.CMsgDOTASeasonPredictions_Prediction_EPredictionType", CMsgDOTASeasonPredictions_Prediction_EPredictionType_name, CMsgDOTASeasonPredictions_Prediction_EPredictionType_value)
	proto.RegisterEnum("protocol.CMsgDOTASeasonPredictions_Prediction_EAnswerType", CMsgDOTASeasonPredictions_Prediction_EAnswerType_name, CMsgDOTASeasonPredictions_Prediction_EAnswerType_value)
	proto.RegisterEnum("protocol.CMsgDOTAMatch_ReplayState", CMsgDOTAMatch_ReplayState_name, CMsgDOTAMatch_ReplayState_value)
	proto.RegisterEnum("protocol.CMsgDOTAMatch_Player_HeroDamageType", CMsgDOTAMatch_Player_HeroDamageType_name, CMsgDOTAMatch_Player_HeroDamageType_value)
	proto.RegisterEnum("protocol.CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse", CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse_name, CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse_EResponse_value)
	proto.RegisterType((*CSODOTAGameAccountClient)(nil), "protocol.CSODOTAGameAccountClient")
	proto.RegisterType((*CSODOTAGameAccountClient_RoleHandicap)(nil), "protocol.CSODOTAGameAccountClient.RoleHandicap")
	proto.RegisterType((*CSODOTAGameAccountPlus)(nil), "protocol.CSODOTAGameAccountPlus")
	proto.RegisterType((*CMsgLobbyFeaturedGamemodeProgress)(nil), "protocol.CMsgLobbyFeaturedGamemodeProgress")
	proto.RegisterType((*CMsgLobbyFeaturedGamemodeProgress_AccountProgress)(nil), "protocol.CMsgLobbyFeaturedGamemodeProgress.AccountProgress")
	proto.RegisterType((*CMsgBattleCupVictory)(nil), "protocol.CMsgBattleCupVictory")
	proto.RegisterType((*CMsgLobbyBattleCupVictoryList)(nil), "protocol.CMsgLobbyBattleCupVictoryList")
	proto.RegisterType((*CMsgDOTABroadcastNotification)(nil), "protocol.CMsgDOTABroadcastNotification")
	proto.RegisterType((*CProtoItemHeroStatue)(nil), "protocol.CProtoItemHeroStatue")
	proto.RegisterType((*CMatchPlayerAbilityUpgrade)(nil), "protocol.CMatchPlayerAbilityUpgrade")
	proto.RegisterType((*CMatchPlayerTimedCustomStat)(nil), "protocol.CMatchPlayerTimedCustomStat")
	proto.RegisterType((*CMatchPlayerTimedStats)(nil), "protocol.CMatchPlayerTimedStats")
	proto.RegisterType((*CMatchTeamTimedStats)(nil), "protocol.CMatchTeamTimedStats")
	proto.RegisterType((*CMatchAdditionalUnitInventory)(nil), "protocol.CMatchAdditionalUnitInventory")
	proto.RegisterType((*CMatchPlayerPermanentBuff)(nil), "protocol.CMatchPlayerPermanentBuff")
	proto.RegisterType((*CMatchHeroSelectEvent)(nil), "protocol.CMatchHeroSelectEvent")
	proto.RegisterType((*CMatchClip)(nil), "protocol.CMatchClip")
	proto.RegisterType((*CPartySearchClientParty)(nil), "protocol.CPartySearchClientParty")
	proto.RegisterType((*CMsgDOTAHasItemQuery)(nil), "protocol.CMsgDOTAHasItemQuery")
	proto.RegisterType((*CMsgDOTAHasItemResponse)(nil), "protocol.CMsgDOTAHasItemResponse")
	proto.RegisterType((*CMsgGCGetPlayerCardItemInfo)(nil), "protocol.CMsgGCGetPlayerCardItemInfo")
	proto.RegisterType((*CMsgGCGetPlayerCardItemInfoResponse)(nil), "protocol.CMsgGCGetPlayerCardItemInfoResponse")
	proto.RegisterType((*CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo)(nil), "protocol.CMsgGCGetPlayerCardItemInfoResponse.PlayerCardInfo")
	proto.RegisterType((*CSODOTAMapLocationState)(nil), "protocol.CSODOTAMapLocationState")
	proto.RegisterType((*CMsgLeagueAdminList)(nil), "protocol.CMsgLeagueAdminList")
	proto.RegisterType((*CMsgDOTAProfileCard)(nil), "protocol.CMsgDOTAProfileCard")
	proto.RegisterType((*CMsgDOTAProfileCard_Slot)(nil), "protocol.CMsgDOTAProfileCard.Slot")
	proto.RegisterType((*CMsgDOTAProfileCard_Slot_Trophy)(nil), "protocol.CMsgDOTAProfileCard.Slot.Trophy")
	proto.RegisterType((*CMsgDOTAProfileCard_Slot_Stat)(nil), "protocol.CMsgDOTAProfileCard.Slot.Stat")
	proto.RegisterType((*CMsgDOTAProfileCard_Slot_Item)(nil), "protocol.CMsgDOTAProfileCard.Slot.Item")
	proto.RegisterType((*CMsgDOTAProfileCard_Slot_Hero)(nil), "protocol.CMsgDOTAProfileCard.Slot.Hero")
	proto.RegisterType((*CMsgDOTAProfileCard_Slot_Emoticon)(nil), "protocol.CMsgDOTAProfileCard.Slot.Emoticon")
	proto.RegisterType((*CMsgDOTAProfileCard_Slot_Team)(nil), "protocol.CMsgDOTAProfileCard.Slot.Team")
	proto.RegisterType((*CSODOTAPlayerChallenge)(nil), "protocol.CSODOTAPlayerChallenge")
	proto.RegisterType((*CMsgClientToGCRerollPlayerChallenge)(nil), "protocol.CMsgClientToGCRerollPlayerChallenge")
	proto.RegisterType((*CMsgGCRerollPlayerChallengeResponse)(nil), "protocol.CMsgGCRerollPlayerChallengeResponse")
	proto.RegisterType((*CMsgGCTopCustomGamesList)(nil), "protocol.CMsgGCTopCustomGamesList")
	proto.RegisterType((*CMsgDOTARealtimeGameStats)(nil), "protocol.CMsgDOTARealtimeGameStats")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_TeamDetails)(nil), "protocol.CMsgDOTARealtimeGameStats.TeamDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_ItemDetails)(nil), "protocol.CMsgDOTARealtimeGameStats.ItemDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_AbilityDetails)(nil), "protocol.CMsgDOTARealtimeGameStats.AbilityDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_HeroToHeroStats)(nil), "protocol.CMsgDOTARealtimeGameStats.HeroToHeroStats")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_AbilityList)(nil), "protocol.CMsgDOTARealtimeGameStats.AbilityList")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_PlayerDetails)(nil), "protocol.CMsgDOTARealtimeGameStats.PlayerDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_BuildingDetails)(nil), "protocol.CMsgDOTARealtimeGameStats.BuildingDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_KillDetails)(nil), "protocol.CMsgDOTARealtimeGameStats.KillDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_BroadcasterDetails)(nil), "protocol.CMsgDOTARealtimeGameStats.BroadcasterDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_PickBanDetails)(nil), "protocol.CMsgDOTARealtimeGameStats.PickBanDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_MatchDetails)(nil), "protocol.CMsgDOTARealtimeGameStats.MatchDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_GraphData)(nil), "protocol.CMsgDOTARealtimeGameStats.GraphData")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_GraphData_LocationStats)(nil), "protocol.CMsgDOTARealtimeGameStats.GraphData.LocationStats")
	proto.RegisterType((*CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats)(nil), "protocol.CMsgDOTARealtimeGameStats.GraphData.TeamLocationStats")
	proto.RegisterType((*CMsgDOTARealtimeGameStatsTerse)(nil), "protocol.CMsgDOTARealtimeGameStatsTerse")
	proto.RegisterType((*CMsgDOTARealtimeGameStatsTerse_TeamDetails)(nil), "protocol.CMsgDOTARealtimeGameStatsTerse.TeamDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStatsTerse_PlayerDetails)(nil), "protocol.CMsgDOTARealtimeGameStatsTerse.PlayerDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStatsTerse_BuildingDetails)(nil), "protocol.CMsgDOTARealtimeGameStatsTerse.BuildingDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStatsTerse_PickBanDetails)(nil), "protocol.CMsgDOTARealtimeGameStatsTerse.PickBanDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStatsTerse_MatchDetails)(nil), "protocol.CMsgDOTARealtimeGameStatsTerse.MatchDetails")
	proto.RegisterType((*CMsgDOTARealtimeGameStatsTerse_GraphData)(nil), "protocol.CMsgDOTARealtimeGameStatsTerse.GraphData")
	proto.RegisterType((*CMsgDOTABroadcastTimelineEvent)(nil), "protocol.CMsgDOTABroadcastTimelineEvent")
	proto.RegisterType((*CMsgGCToClientMatchGroupsVersion)(nil), "protocol.CMsgGCToClientMatchGroupsVersion")
	proto.RegisterType((*CMsgDOTASDOHeroStatsHistory)(nil), "protocol.CMsgDOTASDOHeroStatsHistory")
	proto.RegisterType((*CMsgPredictionChoice)(nil), "protocol.CMsgPredictionChoice")
	proto.RegisterType((*CMsgInGamePrediction)(nil), "protocol.CMsgInGamePrediction")
	proto.RegisterType((*CMsgInGamePrediction_QueryKeyValues)(nil), "protocol.CMsgInGamePrediction.QueryKeyValues")
	proto.RegisterType((*CMsgDOTASeasonPredictions)(nil), "protocol.CMsgDOTASeasonPredictions")
	proto.RegisterType((*CMsgDOTASeasonPredictions_Prediction)(nil), "protocol.CMsgDOTASeasonPredictions.Prediction")
	proto.RegisterType((*CMsgDOTASeasonPredictions_Prediction_Answers)(nil), "protocol.CMsgDOTASeasonPredictions.Prediction.Answers")
	proto.RegisterType((*CMsgAvailablePredictions)(nil), "protocol.CMsgAvailablePredictions")
	proto.RegisterType((*CMsgAvailablePredictions_MatchPrediction)(nil), "protocol.CMsgAvailablePredictions.MatchPrediction")
	proto.RegisterType((*CMsgLeagueWatchedGames)(nil), "protocol.CMsgLeagueWatchedGames")
	proto.RegisterType((*CMsgLeagueWatchedGames_Series)(nil), "protocol.CMsgLeagueWatchedGames.Series")
	proto.RegisterType((*CMsgLeagueWatchedGames_League)(nil), "protocol.CMsgLeagueWatchedGames.League")
	proto.RegisterType((*CMsgDOTAMatch)(nil), "protocol.CMsgDOTAMatch")
	proto.RegisterType((*CMsgDOTAMatch_Player)(nil), "protocol.CMsgDOTAMatch.Player")
	proto.RegisterType((*CMsgDOTAMatch_Player_CustomGameData)(nil), "protocol.CMsgDOTAMatch.Player.CustomGameData")
	proto.RegisterType((*CMsgDOTAMatch_Player_HeroDamageReceived)(nil), "protocol.CMsgDOTAMatch.Player.HeroDamageReceived")
	proto.RegisterType((*CMsgDOTAMatch_BroadcasterInfo)(nil), "protocol.CMsgDOTAMatch.BroadcasterInfo")
	proto.RegisterType((*CMsgDOTAMatch_BroadcasterChannel)(nil), "protocol.CMsgDOTAMatch.BroadcasterChannel")
	proto.RegisterType((*CMsgDOTAMatch_Coach)(nil), "protocol.CMsgDOTAMatch.Coach")
	proto.RegisterType((*CMsgDOTAMatch_CustomGameData)(nil), "protocol.CMsgDOTAMatch.CustomGameData")
	proto.RegisterType((*CMsgPlayerCard)(nil), "protocol.CMsgPlayerCard")
	proto.RegisterType((*CMsgPlayerCard_StatModifier)(nil), "protocol.CMsgPlayerCard.StatModifier")
	proto.RegisterType((*CMsgDOTAFantasyPlayerStats)(nil), "protocol.CMsgDOTAFantasyPlayerStats")
	proto.RegisterType((*CMsgDOTAFantasyPlayerMatchStats)(nil), "protocol.CMsgDOTAFantasyPlayerMatchStats")
	proto.RegisterType((*CMsgDOTABotDebugInfo)(nil), "protocol.CMsgDOTABotDebugInfo")
	proto.RegisterType((*CMsgDOTABotDebugInfo_Bot)(nil), "protocol.CMsgDOTABotDebugInfo.Bot")
	proto.RegisterType((*CMsgDOTABotDebugInfo_Bot_Mode)(nil), "protocol.CMsgDOTABotDebugInfo.Bot.Mode")
	proto.RegisterType((*CMsgDOTABotDebugInfo_Bot_Action)(nil), "protocol.CMsgDOTABotDebugInfo.Bot.Action")
	proto.RegisterType((*CMsgSuccessfulHero)(nil), "protocol.CMsgSuccessfulHero")
	proto.RegisterType((*CMsgRecentMatchInfo)(nil), "protocol.CMsgRecentMatchInfo")
	proto.RegisterType((*CMsgMatchTips)(nil), "protocol.CMsgMatchTips")
	proto.RegisterType((*CMsgMatchTips_SingleTip)(nil), "protocol.CMsgMatchTips.SingleTip")
	proto.RegisterType((*CMsgDOTAMatchMinimal)(nil), "protocol.CMsgDOTAMatchMinimal")
	proto.RegisterType((*CMsgDOTAMatchMinimal_Player)(nil), "protocol.CMsgDOTAMatchMinimal.Player")
	proto.RegisterType((*CMsgDOTAMatchMinimal_Tourney)(nil), "protocol.CMsgDOTAMatchMinimal.Tourney")
	proto.RegisterType((*CMsgConsumableUsage)(nil), "protocol.CMsgConsumableUsage")
	proto.RegisterType((*CMsgMatchConsumableUsage)(nil), "protocol.CMsgMatchConsumableUsage")
	proto.RegisterType((*CMsgMatchConsumableUsage_PlayerUsage)(nil), "protocol.CMsgMatchConsumableUsage.PlayerUsage")
	proto.RegisterType((*CMsgMatchEventActionGrants)(nil), "protocol.CMsgMatchEventActionGrants")
	proto.RegisterType((*CMsgMatchEventActionGrants_PlayerGrants)(nil), "protocol.CMsgMatchEventActionGrants.PlayerGrants")
	proto.RegisterType((*CMsgCustomGameWhitelist)(nil), "protocol.CMsgCustomGameWhitelist")
	proto.RegisterType((*CMsgCustomGameWhitelistForEdit)(nil), "protocol.CMsgCustomGameWhitelistForEdit")
	proto.RegisterType((*CMsgCustomGameWhitelistForEdit_WhitelistEntry)(nil), "protocol.CMsgCustomGameWhitelistForEdit.WhitelistEntry")
	proto.RegisterType((*CMsgPlayerRecentMatchInfo)(nil), "protocol.CMsgPlayerRecentMatchInfo")
	proto.RegisterType((*CMsgPlayerMatchRecord)(nil), "protocol.CMsgPlayerMatchRecord")
	proto.RegisterType((*CMsgPlayerRecentMatchOutcomes)(nil), "protocol.CMsgPlayerRecentMatchOutcomes")
	proto.RegisterType((*CMsgPlayerRecentCommends)(nil), "protocol.CMsgPlayerRecentCommends")
	proto.RegisterType((*CMsgPlayerRecentAccomplishments)(nil), "protocol.CMsgPlayerRecentAccomplishments")
	proto.RegisterType((*CMsgPlayerHeroRecentAccomplishments)(nil), "protocol.CMsgPlayerHeroRecentAccomplishments")
	proto.RegisterType((*CMsgRecentAccomplishments)(nil), "protocol.CMsgRecentAccomplishments")
	proto.RegisterType((*CMsgServerToGCRequestPlayerRecentAccomplishments)(nil), "protocol.CMsgServerToGCRequestPlayerRecentAccomplishments")
	proto.RegisterType((*CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse)(nil), "protocol.CMsgServerToGCRequestPlayerRecentAccomplishmentsResponse")
	proto.RegisterType((*CMsgArcanaVoteMatchVotes)(nil), "protocol.CMsgArcanaVoteMatchVotes")
	proto.RegisterType((*CMsgGCtoGCAssociatedExploiterAccountInfo)(nil), "protocol.CMsgGCtoGCAssociatedExploiterAccountInfo")
	proto.RegisterType((*CMsgGCtoGCAssociatedExploiterAccountInfoResponse)(nil), "protocol.CMsgGCtoGCAssociatedExploiterAccountInfoResponse")
	proto.RegisterType((*CMsgGCtoGCAssociatedExploiterAccountInfoResponse_Account)(nil), "protocol.CMsgGCtoGCAssociatedExploiterAccountInfoResponse.Account")
	proto.RegisterType((*CMsgPullTabsData)(nil), "protocol.CMsgPullTabsData")
	proto.RegisterType((*CMsgPullTabsData_Slot)(nil), "protocol.CMsgPullTabsData.Slot")
	proto.RegisterType((*CMsgPullTabsData_Jackpot)(nil), "protocol.CMsgPullTabsData.Jackpot")
	proto.RegisterType((*CMsgUnderDraftData)(nil), "protocol.CMsgUnderDraftData")
	proto.RegisterType((*CMsgUnderDraftData_BenchSlot)(nil), "protocol.CMsgUnderDraftData.BenchSlot")
	proto.RegisterType((*CMsgUnderDraftData_ShopSlot)(nil), "protocol.CMsgUnderDraftData.ShopSlot")
	proto.RegisterType((*CMsgPlayerTitleData)(nil), "protocol.CMsgPlayerTitleData")
	proto.RegisterType((*CMsgDOTATriviaQuestion)(nil), "protocol.CMsgDOTATriviaQuestion")
	proto.RegisterType((*CMsgDOTATriviaQuestionAnswersSummary)(nil), "protocol.CMsgDOTATriviaQuestionAnswersSummary")
	proto.RegisterType((*CMsgGameDataSpecialValueBonus)(nil), "protocol.CMsgGameDataSpecialValueBonus")
	proto.RegisterType((*CMsgGameDataSpecialValues)(nil), "protocol.CMsgGameDataSpecialValues")
	proto.RegisterType((*CMsgGameDataAbilityOrItem)(nil), "protocol.CMsgGameDataAbilityOrItem")
	proto.RegisterType((*CMsgGameDataHero)(nil), "protocol.CMsgGameDataHero")
	proto.RegisterType((*CMsgGameDataAbilities)(nil), "protocol.CMsgGameDataAbilities")
	proto.RegisterType((*CMsgGameDataItems)(nil), "protocol.CMsgGameDataItems")
	proto.RegisterType((*CMsgGameDataHeroes)(nil), "protocol.CMsgGameDataHeroes")
	proto.RegisterType((*CMsgGameDataHeroList)(nil), "protocol.CMsgGameDataHeroList")
	proto.RegisterType((*CMsgGameDataHeroList_HeroInfo)(nil), "protocol.CMsgGameDataHeroList.HeroInfo")
	proto.RegisterType((*CMsgGameDataItemAbilityList)(nil), "protocol.CMsgGameDataItemAbilityList")
	proto.RegisterType((*CMsgGameDataItemAbilityList_ItemAbilityInfo)(nil), "protocol.CMsgGameDataItemAbilityList.ItemAbilityInfo")
	proto.RegisterType((*CMsgLobbyAbilityDraftData)(nil), "protocol.CMsgLobbyAbilityDraftData")
	proto.RegisterType((*CSOEconItemDropRateBonus)(nil), "protocol.CSOEconItemDropRateBonus")
	proto.RegisterType((*CSOEconItemTournamentPassport)(nil), "protocol.CSOEconItemTournamentPassport")
	proto.RegisterType((*CMsgStickerbookSticker)(nil), "protocol.CMsgStickerbookSticker")
	proto.RegisterType((*CMsgStickerbookPage)(nil), "protocol.CMsgStickerbookPage")
	proto.RegisterType((*CMsgStickerbookTeamPageOrderSequence)(nil), "protocol.CMsgStickerbookTeamPageOrderSequence")
	proto.RegisterType((*CMsgStickerbook)(nil), "protocol.CMsgStickerbook")
	proto.RegisterType((*CMsgStickerHero)(nil), "protocol.CMsgStickerHero")
	proto.RegisterType((*CMsgStickerHeroes)(nil), "protocol.CMsgStickerHeroes")
	proto.RegisterType((*CMsgHeroRoleStats)(nil), "protocol.CMsgHeroRoleStats")
	proto.RegisterType((*CMsgHeroRoleHeroStats)(nil), "protocol.CMsgHeroRoleHeroStats")
	proto.RegisterType((*CMsgHeroRoleRankStats)(nil), "protocol.CMsgHeroRoleRankStats")
	proto.RegisterType((*CMsgHeroRoleAllRanksStats)(nil), "protocol.CMsgHeroRoleAllRanksStats")
	proto.RegisterType((*CMsgMapStatsSnapshot)(nil), "protocol.CMsgMapStatsSnapshot")
	proto.RegisterType((*CMsgGlobalMapStats)(nil), "protocol.CMsgGlobalMapStats")
	proto.RegisterType((*CMsgTrackedStat)(nil), "protocol.CMsgTrackedStat")
}

func init() {
	proto.RegisterFile("dota_gcmessages_common.proto", fileDescriptor_c7a0b43d4fa15eff)
}

var fileDescriptor_c7a0b43d4fa15eff = []byte{
	// 16477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0xbd, 0x59, 0x8c, 0x24, 0xd9,
	0x96, 0x20, 0x54, 0xee, 0xb1, 0xb9, 0x1f, 0x8f, 0xc5, 0xc2, 0x22, 0x17, 0x4f, 0xcf, 0xca, 0xcd,
	0x73, 0xa9, 0xac, 0xac, 0xaa, 0xa8, 0xca, 0xa8, 0xe5, 0xd5, 0xcb, 0x7e, 0xaf, 0xde, 0x8b, 0xc5,
	0x33, 0x33, 0x2a, 0x63, 0x2b, 0x0b, 0xcf, 0xca, 0x57, 0xf5, 0xfa, 0x8d, 0xf5, 0x0d, 0xb7, 0x1b,
	0xee, 0xf6, 0xc2, 0xdc, 0xcc, 0xcb, 0xcc, 0x3c, 0x96, 0x87, 0xc4, 0x00, 0x23, 0x06, 0x04, 0x1a,
	0x44, 0x7f, 0xcc, 0x80, 0x68, 0xf8, 0x64, 0xe0, 0x21, 0x21, 0xc1, 0x40, 0xf3, 0x81, 0x60, 0x10,
	0x42, 0x30, 0x6c, 0x1f, 0x30, 0xea, 0x11, 0x12, 0x7c, 0x20, 0x0d, 0x12, 0x2d, 0x81, 0x10, 0x08,
	0x06, 0x24, 0xe6, 0x83, 0x46, 0xf7, 0x9c, 0x73, 0x6d, 0xf1, 0x25, 0x22, 0xaa, 0xba, 0x69, 0x31,
	0xf1, 0x13, 0x7e, 0xcf, 0x72, 0xed, 0xee, 0xf7, 0x9c, 0x73, 0xcf, 0x3d, 0x17, 0xde, 0x76, 0x82,
	0x58, 0xd8, 0xed, 0x56, 0x57, 0x46, 0x91, 0x68, 0xcb, 0xc8, 0x6e, 0x05, 0xdd, 0x6e, 0xe0, 0x2f,
	0xf7, 0xc2, 0x20, 0x0e, 0xcc, 0x12, 0xfe, 0x6b, 0x05, 0x5e, 0x6d, 0x29, 0x8a, 0xa5, 0xe8, 0x6a,
	0x2a, 0x42, 0xd7, 0xae, 0xb5, 0x5b, 0x91, 0x73, 0x94, 0xe1, 0x66, 0xf8, 0x75, 0xcc, 0x34, 0xea,
	0x88, 0x50, 0x3a, 0xb6, 0xf4, 0xfb, 0x5d, 0x46, 0xd4, 0xff, 0xd5, 0xeb, 0x50, 0x5d, 0xdf, 0xdf,
	0xdd, 0xd8, 0x6d, 0xae, 0xbe, 0x10, 0x5d, 0xb9, 0xda, 0x6a, 0x05, 0x7d, 0x3f, 0x5e, 0xf7, 0x5c,
	0xe9, 0xc7, 0xe6, 0x7d, 0x00, 0x41, 0x00, 0xdb, 0x75, 0xaa, 0x85, 0xbb, 0x85, 0xc7, 0x73, 0x6b,
	0x93, 0xff, 0xc8, 0x5f, 0xbf, 0x55, 0xb0, 0xca, 0x0c, 0xdf, 0x74, 0x4c, 0x13, 0x26, 0x4f, 0x5c,
	0x3f, 0xaa, 0x4e, 0x28, 0xb4, 0x85, 0xbf, 0xcd, 0x6b, 0x30, 0xed, 0x05, 0x51, 0x24, 0xa3, 0xea,
	0x24, 0x42, 0x39, 0x65, 0xce, 0x43, 0xf1, 0xb4, 0x57, 0x9d, 0x45, 0x58, 0xf1, 0xb4, 0x67, 0x5e,
	0x81, 0x29, 0x4f, 0x1e, 0x4b, 0xaf, 0x3a, 0x87, 0x20, 0x4a, 0x98, 0xf7, 0x61, 0xce, 0xf5, 0xdd,
	0xd8, 0x15, 0x9e, 0x1d, 0x1d, 0xb9, 0x9e, 0x57, 0x9d, 0x47, 0xec, 0x2c, 0x03, 0xf7, 0x15, 0xcc,
	0xbc, 0x07, 0xb3, 0x9e, 0x14, 0xc7, 0x32, 0xb4, 0xb1, 0x20, 0xd5, 0x05, 0xa4, 0xa9, 0x10, 0x6c,
	0x5d, 0x81, 0xcc, 0x4f, 0xe0, 0x5a, 0x24, 0x5b, 0x81, 0xef, 0x88, 0xf0, 0xcc, 0xce, 0x11, 0x3f,
	0x43, 0xe2, 0x2b, 0x09, 0x76, 0x2b, 0xc3, 0xf5, 0x29, 0x5c, 0xf7, 0x82, 0x13, 0xbb, 0x17, 0xba,
	0x41, 0xe8, 0xc6, 0x67, 0x76, 0xdf, 0x8f, 0x5d, 0xcf, 0x76, 0x44, 0x2c, 0xab, 0x26, 0xb1, 0x79,
	0xc1, 0xc9, 0x1e, 0x63, 0x5f, 0x2b, 0xe4, 0x86, 0x88, 0xa5, 0xf9, 0x05, 0xbc, 0xdd, 0x0b, 0xe5,
	0xb1, 0xf4, 0x63, 0x3b, 0x96, 0xa7, 0xb1, 0xdd, 0xea, 0x88, 0x38, 0xcb, 0x7b, 0x05, 0x79, 0xab,
	0x4c, 0xd3, 0x94, 0xa7, 0xf1, 0x7a, 0x47, 0xc4, 0x29, 0xff, 0x8f, 0x40, 0xe3, 0xec, 0xe3, 0xc0,
	0x6d, 0xc9, 0x2c, 0xef, 0x55, 0xe4, 0xbd, 0xca, 0xf8, 0xaf, 0x15, 0x3a, 0x65, 0x7c, 0x05, 0xf7,
	0x35, 0x63, 0xaf, 0x7f, 0xe0, 0xb9, 0xad, 0xd1, 0xdf, 0xff, 0x1a, 0xf3, 0xb8, 0xcd, 0xa4, 0x7b,
	0x48, 0x39, 0x5c, 0x8a, 0x4d, 0xa8, 0xeb, 0xcc, 0x7c, 0x79, 0x62, 0xf7, 0x3c, 0x71, 0xa6, 0x1a,
	0x6d, 0x20, 0xaf, 0xdf, 0x60, 0x5e, 0xb7, 0x98, 0x72, 0x47, 0x9e, 0xec, 0x21, 0xdd, 0x50, 0x85,
	0x3c, 0x11, 0xc5, 0xb6, 0x38, 0x10, 0xbe, 0x13, 0xf8, 0xd2, 0xb1, 0xdb, 0xa2, 0x2b, 0x29, 0x83,
	0x6b, 0x54, 0x21, 0x85, 0x5f, 0xd5, 0x68, 0x35, 0xfc, 0x90, 0xf1, 0x4b, 0xa8, 0x23, 0x63, 0xda,
	0x77, 0xa3, 0xb2, 0xf8, 0x1d, 0xaa, 0x8f, 0xa2, 0xdc, 0xd7, 0x84, 0xc3, 0x79, 0x7d, 0x04, 0x57,
	0xb8, 0xe3, 0x7b, 0xd2, 0x17, 0x5e, 0x7c, 0xc6, 0x03, 0xe0, 0x3a, 0x72, 0x9b, 0x84, 0xdb, 0x23,
	0x14, 0x75, 0xff, 0x0a, 0x5c, 0x6d, 0x05, 0xdd, 0x9e, 0x27, 0x63, 0xfd, 0xb9, 0x28, 0x0e, 0xa5,
	0x38, 0xaa, 0x56, 0x91, 0x65, 0x29, 0x41, 0xaa, 0x6f, 0xec, 0x23, 0xca, 0xfc, 0x29, 0xdc, 0xd4,
	0xf3, 0xc4, 0x71, 0x23, 0x71, 0xe0, 0x49, 0x27, 0xdb, 0x5c, 0x8f, 0xa8, 0xeb, 0x99, 0x64, 0x83,
	0x29, 0xd2, 0x96, 0xfa, 0x04, 0xae, 0x0d, 0xb1, 0x53, 0x31, 0xdf, 0xa1, 0x01, 0x37, 0xc0, 0x49,
	0x05, 0xfd, 0x31, 0xdc, 0xe8, 0x8a, 0xb8, 0xd5, 0x19, 0xf9, 0xc9, 0x77, 0x91, 0xf1, 0x1a, 0x12,
	0x0c, 0x7f, 0xf0, 0x23, 0xb8, 0x32, 0xc0, 0x4a, 0x9f, 0x7b, 0x42, 0xad, 0x92, 0xe3, 0xa2, 0x8f,
	0x6d, 0xc0, 0xad, 0xa8, 0xd3, 0x8f, 0x9d, 0xe0, 0xc4, 0xf7, 0xc4, 0x49, 0x2c, 0xc3, 0xae, 0xeb,
	0x8b, 0x58, 0xc6, 0x6e, 0x57, 0x46, 0xb1, 0xe8, 0xf6, 0xaa, 0x1f, 0xd2, 0x90, 0x38, 0x97, 0xc8,
	0xfc, 0x19, 0xbc, 0x9d, 0x9b, 0x5a, 0xaa, 0x79, 0x23, 0x3b, 0x94, 0x5d, 0xe1, 0xfa, 0xae, 0xdf,
	0xae, 0x7e, 0x84, 0x99, 0xdc, 0xc8, 0xcc, 0x2f, 0xd5, 0xc8, 0x91, 0xa5, 0x09, 0xcc, 0xf7, 0x60,
	0x31, 0x94, 0xad, 0xb0, 0xef, 0xc6, 0x5d, 0x35, 0x44, 0x69, 0xed, 0xf8, 0x11, 0x72, 0x19, 0x19,
	0xc4, 0x16, 0x2e, 0x23, 0x2b, 0x70, 0xb5, 0x23, 0x22, 0x1c, 0xc7, 0x7e, 0x10, 0xbb, 0x87, 0x6e,
	0x4b, 0xc4, 0x6e, 0xe0, 0x47, 0xd5, 0xcf, 0xef, 0x16, 0x1e, 0x97, 0xac, 0xa5, 0x8e, 0x88, 0x76,
	0xe4, 0xc9, 0x4e, 0x16, 0x65, 0x3e, 0x82, 0x05, 0x37, 0x52, 0x6b, 0x45, 0xbb, 0x2f, 0x6d, 0xe1,
	0x74, 0x5d, 0xbf, 0xfa, 0x63, 0xa4, 0x9e, 0x73, 0xa3, 0x2d, 0x84, 0xae, 0x2a, 0xa0, 0xb9, 0x0c,
	0x4b, 0x2d, 0x11, 0xf5, 0x85, 0xc7, 0x75, 0xc0, 0x89, 0xe2, 0x54, 0x7f, 0x82, 0x45, 0x59, 0x24,
	0x14, 0x96, 0x1d, 0x67, 0x86, 0x63, 0xae, 0xc2, 0xad, 0x28, 0xf0, 0x02, 0xb5, 0x96, 0xf7, 0x64,
	0xec, 0xc6, 0xee, 0xb1, 0xcc, 0x73, 0xfe, 0x14, 0x39, 0x6b, 0x8a, 0x68, 0x3d, 0xa5, 0xc9, 0x66,
	0xb1, 0x0e, 0xb7, 0x7b, 0x22, 0xc4, 0x11, 0x3c, 0x26, 0x8f, 0x2f, 0x30, 0x8f, 0x9b, 0x48, 0x35,
	0x26, 0x93, 0x4f, 0xe1, 0x3a, 0x97, 0xfb, 0xe9, 0xf1, 0xd3, 0x3c, 0xf7, 0x2a, 0x8d, 0x35, 0x42,
	0x3f, 0x3d, 0x7e, 0x9a, 0x65, 0x7b, 0x06, 0xb5, 0x56, 0x3f, 0x0c, 0x6d, 0xe1, 0x79, 0x76, 0x47,
	0x86, 0x81, 0x5a, 0x11, 0x3c, 0x4f, 0xfa, 0x6d, 0xa9, 0x36, 0x86, 0x75, 0x1a, 0x6c, 0x8a, 0x62,
	0xd5, 0xf3, 0x5e, 0xca, 0x30, 0x58, 0xd7, 0xe8, 0x4d, 0xc7, 0x7c, 0x0c, 0x86, 0xfa, 0x82, 0xad,
	0x86, 0x81, 0xdd, 0x0b, 0x5c, 0x3f, 0x8e, 0xaa, 0x1b, 0xc8, 0x31, 0xaf, 0xe0, 0x4d, 0xb7, 0x2b,
	0xf7, 0x10, 0xaa, 0xd6, 0x7d, 0x3d, 0x0f, 0x0e, 0x3d, 0xd1, 0x8e, 0xaa, 0x0d, 0x5a, 0xf7, 0x19,
	0xf8, 0x5c, 0xc1, 0x54, 0x0f, 0xa5, 0xd9, 0xd1, 0x00, 0x78, 0x8e, 0x64, 0x73, 0x3a, 0x37, 0xea,
	0x7d, 0xb5, 0x2c, 0xd2, 0xea, 0x75, 0x20, 0x3b, 0xe2, 0xd8, 0x0d, 0x42, 0x3b, 0x92, 0xdf, 0xd9,
	0x7e, 0xbf, 0x6b, 0xe3, 0xea, 0x12, 0xca, 0x5e, 0x10, 0xc6, 0xd5, 0x17, 0xbc, 0x2c, 0x22, 0xe9,
	0x1a, 0x53, 0xee, 0xcb, 0xef, 0x76, 0xfa, 0xdd, 0x2d, 0x11, 0xc5, 0x16, 0x52, 0x99, 0x2f, 0xe1,
	0xde, 0x50, 0x66, 0xad, 0x20, 0x94, 0xb9, 0xac, 0x5e, 0xf2, 0xaa, 0x98, 0xcf, 0x4a, 0x91, 0x65,
	0x72, 0xda, 0x80, 0x3b, 0x83, 0x39, 0x11, 0xbb, 0x1d, 0x78, 0x8e, 0x9a, 0xbb, 0xa2, 0xba, 0x89,
	0x03, 0xee, 0x66, 0x3e, 0x1f, 0x62, 0xdf, 0xf5, 0x9c, 0x0d, 0x11, 0x0b, 0x35, 0xfc, 0xe2, 0xa0,
	0x1f, 0xfa, 0xf2, 0x8c, 0x76, 0x48, 0x6e, 0x88, 0x2f, 0x69, 0xf8, 0x31, 0x0a, 0xf7, 0x49, 0x6a,
	0x8c, 0x4d, 0xb8, 0xa7, 0xe9, 0x43, 0xd9, 0xc2, 0xad, 0x42, 0x84, 0xb1, 0xdb, 0x72, 0x7b, 0x38,
	0xee, 0x69, 0xcd, 0x78, 0x4d, 0x4d, 0xc1, 0x84, 0x16, 0xd2, 0xed, 0x65, 0xc9, 0xf4, 0xb2, 0x2e,
	0xfc, 0x56, 0x27, 0x50, 0x82, 0x44, 0xaf, 0x13, 0xf8, 0x52, 0x35, 0xe9, 0x81, 0x0c, 0xd5, 0x40,
	0xf8, 0xc5, 0xdd, 0xc2, 0xe3, 0x49, 0xeb, 0xaa, 0xc6, 0xef, 0x29, 0xf4, 0x0e, 0x62, 0x37, 0x1d,
	0xd5, 0x86, 0xa1, 0xf0, 0x8f, 0xa4, 0x63, 0xe3, 0xfa, 0xd2, 0x15, 0x47, 0xae, 0xdf, 0xb6, 0x0f,
	0x84, 0x9f, 0x5d, 0xb7, 0xbe, 0xa1, 0x36, 0x24, 0xc2, 0xed, 0x94, 0x6e, 0x4d, 0xf8, 0xe9, 0xf2,
	0xf5, 0x1e, 0x98, 0x5c, 0x0b, 0x5c, 0x9f, 0x71, 0x24, 0x3c, 0xad, 0x7e, 0x8b, 0xac, 0x0b, 0x84,
	0x51, 0x83, 0x57, 0x8d, 0x85, 0xa7, 0x23, 0x89, 0x57, 0xaa, 0xbf, 0x1c, 0x45, 0xbc, 0x32, 0x92,
	0xf8, 0xe3, 0xea, 0xef, 0x8e, 0x22, 0xfe, 0x58, 0xad, 0xa2, 0x87, 0xe2, 0x58, 0x2d, 0x53, 0xd2,
	0x56, 0xa2, 0x98, 0xdd, 0x13, 0xad, 0x23, 0xe9, 0x54, 0xdb, 0xd8, 0x0a, 0xa6, 0xc6, 0x35, 0xa5,
	0xe8, 0xee, 0x21, 0xc6, 0x7c, 0x3f, 0xc9, 0x9e, 0xfb, 0x5c, 0x7d, 0xa0, 0xda, 0x49, 0xd6, 0x2f,
	0xe9, 0xf3, 0x30, 0x51, 0x1f, 0x50, 0x43, 0xa5, 0xd5, 0x8f, 0xe2, 0xa0, 0xcb, 0xbb, 0xde, 0x88,
	0x65, 0xde, 0xa5, 0x19, 0x4f, 0x64, 0xb8, 0xe9, 0x0d, 0xad, 0xf5, 0xef, 0xe2, 0x92, 0xa9, 0xbe,
	0x79, 0xe2, 0xfa, 0xba, 0xad, 0x7e, 0x4d, 0xf3, 0x8f, 0x10, 0x6f, 0x5c, 0x9f, 0x9a, 0x6a, 0x04,
	0xe9, 0x4a, 0xf5, 0x68, 0x04, 0xe9, 0xca, 0x28, 0xd2, 0x8f, 0xab, 0xde, 0x08, 0xd2, 0x8f, 0x95,
	0xa0, 0xd6, 0x0a, 0x44, 0xab, 0x63, 0x87, 0x22, 0x56, 0x8b, 0x7c, 0x97, 0x04, 0x35, 0x84, 0x59,
	0x08, 0x52, 0x24, 0xdf, 0xf5, 0x65, 0x3f, 0x59, 0x1e, 0x42, 0x22, 0x41, 0x18, 0xaf, 0x0d, 0x5f,
	0xc3, 0x7c, 0x18, 0x78, 0xd2, 0xee, 0x08, 0xdf, 0x71, 0x5b, 0xa2, 0x17, 0x55, 0xa3, 0xbb, 0x13,
	0x8f, 0x2b, 0x2b, 0x1f, 0x2e, 0x6b, 0x81, 0x78, 0x79, 0x9c, 0x18, 0xbb, 0x6c, 0x05, 0x9e, 0x7c,
	0xc9, 0x7c, 0xd6, 0x5c, 0x98, 0x49, 0x45, 0xe6, 0xc7, 0x70, 0x8d, 0xc4, 0x9d, 0x6e, 0xe0, 0x48,
	0x3d, 0x39, 0xb0, 0x5b, 0x4e, 0x69, 0xbf, 0x47, 0xec, 0x76, 0xe0, 0x48, 0x9a, 0x10, 0xd8, 0x33,
	0x9f, 0xc0, 0xb5, 0x6e, 0x57, 0x4d, 0xdc, 0x96, 0xf0, 0xdc, 0x83, 0x90, 0xe6, 0x10, 0x32, 0x9d,
	0xd1, 0x22, 0xda, 0xed, 0x86, 0x56, 0x16, 0xa9, 0xb8, 0x6a, 0x5f, 0xc0, 0x6c, 0xb6, 0x24, 0x4a,
	0x70, 0x56, 0x65, 0x21, 0xb9, 0xda, 0xc2, 0xdf, 0x66, 0x0d, 0x4a, 0xba, 0x86, 0xd5, 0xe2, 0xdd,
	0xc2, 0xe3, 0xa2, 0x95, 0xa4, 0xeb, 0x7f, 0x5c, 0x84, 0x6b, 0xc3, 0x75, 0xdc, 0xf3, 0xfa, 0xd1,
	0xe5, 0x04, 0xf5, 0x65, 0x58, 0x0a, 0x42, 0xb7, 0xed, 0xfa, 0x4a, 0xae, 0x8e, 0x45, 0x18, 0xd3,
	0x18, 0x2a, 0xd2, 0xa2, 0xa1, 0x51, 0xfb, 0x0a, 0x83, 0x23, 0xe7, 0x16, 0x40, 0xcf, 0xeb, 0x47,
	0xbc, 0x16, 0x93, 0x78, 0x5f, 0x56, 0x10, 0x5a, 0x88, 0xef, 0x40, 0x05, 0xd1, 0x51, 0x2c, 0xe2,
	0xbe, 0x16, 0xf4, 0x91, 0x63, 0x1f, 0x21, 0x6a, 0xb4, 0xf7, 0x42, 0xd9, 0x13, 0xae, 0x43, 0x03,
	0x04, 0xbf, 0x59, 0x9d, 0xa2, 0xd1, 0xce, 0x18, 0xd5, 0x30, 0xf8, 0x45, 0x35, 0x9b, 0x72, 0xd4,
	0x07, 0xc2, 0x13, 0x7e, 0x4b, 0x56, 0xa7, 0x49, 0x26, 0xc9, 0xd0, 0xaf, 0x11, 0xc6, 0x7c, 0x02,
	0x8b, 0xbe, 0x92, 0x74, 0x7b, 0xe2, 0x0c, 0xa5, 0x01, 0xac, 0xcd, 0xcc, 0xdd, 0xc2, 0xe3, 0x19,
	0x6b, 0x41, 0x21, 0xf6, 0x08, 0x8e, 0x75, 0x79, 0x1f, 0x4c, 0x54, 0x97, 0x6c, 0xd1, 0x0e, 0xa5,
	0x44, 0x72, 0xd7, 0xa9, 0x96, 0xee, 0x16, 0x1e, 0x4f, 0x5b, 0x06, 0x62, 0x56, 0x35, 0x62, 0xd3,
	0xa9, 0xff, 0x6f, 0x05, 0xb8, 0xb7, 0xbe, 0x1d, 0xb5, 0xb7, 0x82, 0x83, 0x83, 0xb3, 0xe7, 0x52,
	0xc4, 0xfd, 0x90, 0xe4, 0x3d, 0x35, 0x48, 0xf6, 0xc2, 0xa0, 0x1d, 0xca, 0x28, 0x32, 0xdf, 0x40,
	0x89, 0x1b, 0x37, 0xaa, 0x16, 0x70, 0x30, 0xfe, 0x4e, 0x66, 0x30, 0x5e, 0xc4, 0xbe, 0xac, 0xfb,
	0x8f, 0xd3, 0x56, 0x92, 0x59, 0x2d, 0x84, 0x85, 0x01, 0xa4, 0xea, 0x8b, 0xc1, 0x0e, 0xce, 0x76,
	0xed, 0x7d, 0x98, 0x53, 0xbb, 0x2f, 0x2a, 0x0f, 0xc2, 0xeb, 0xeb, 0x4e, 0x9d, 0x65, 0xe0, 0xd7,
	0x0a, 0x66, 0xde, 0x84, 0x72, 0x57, 0x9c, 0x32, 0x01, 0x75, 0x67, 0xa9, 0x2b, 0x4e, 0x11, 0x59,
	0xff, 0xeb, 0x45, 0xb8, 0xa2, 0xca, 0xbc, 0x26, 0xe2, 0xd8, 0x93, 0xeb, 0xfd, 0xde, 0xd7, 0x6e,
	0x2b, 0x0e, 0xc2, 0xb3, 0x8b, 0xbe, 0x7c, 0x03, 0x4a, 0x6a, 0x05, 0xc8, 0x8c, 0xa4, 0x99, 0x13,
	0x97, 0x76, 0x8a, 0x3b, 0x50, 0x39, 0x16, 0x9e, 0xcb, 0x0b, 0x16, 0x7f, 0x11, 0x10, 0x84, 0xcb,
	0x93, 0x22, 0xc8, 0xee, 0x5e, 0x3c, 0x82, 0xa2, 0x74, 0xdb, 0xba, 0x0f, 0x73, 0xb8, 0x1b, 0x09,
	0xdd, 0x61, 0x34, 0x78, 0x66, 0x53, 0xe0, 0xa6, 0xa3, 0x72, 0x71, 0xdc, 0x63, 0x37, 0x52, 0x73,
	0xd0, 0x75, 0x78, 0xbc, 0x80, 0x06, 0x6d, 0x3a, 0xe6, 0x75, 0x98, 0xc1, 0xae, 0x77, 0x1d, 0x1c,
	0x1d, 0x73, 0xd6, 0xb4, 0x4a, 0x6e, 0x3a, 0x4a, 0x4b, 0x65, 0xd9, 0xbe, 0x44, 0x70, 0x4a, 0xa9,
	0x86, 0x8a, 0xc3, 0xa0, 0xd7, 0x39, 0x53, 0x2c, 0x65, 0x6a, 0x28, 0x02, 0x6c, 0x3a, 0xf5, 0x6f,
	0xe0, 0x56, 0xd2, 0xb7, 0x83, 0x8d, 0xb5, 0xe5, 0x46, 0xb1, 0xf9, 0x39, 0xa8, 0x16, 0xf0, 0x65,
	0xa8, 0x47, 0xc5, 0xed, 0xfc, 0xa8, 0x18, 0x64, 0xb2, 0x34, 0x79, 0xfd, 0xc7, 0x94, 0xb5, 0x9a,
	0xe0, 0x6b, 0x61, 0x20, 0x9c, 0x96, 0x88, 0xe2, 0xac, 0x78, 0x6a, 0x56, 0x61, 0x86, 0xf5, 0x7a,
	0xec, 0x88, 0xb2, 0xa5, 0x93, 0xf5, 0x7f, 0x4e, 0x75, 0xdf, 0x9e, 0xfa, 0xcc, 0x66, 0x2c, 0xbb,
	0x4a, 0x04, 0xc3, 0x49, 0x28, 0x55, 0xe5, 0x51, 0x60, 0x4b, 0xfa, 0x6e, 0x5a, 0x25, 0x69, 0x35,
	0xa0, 0x99, 0x6b, 0xcb, 0xc3, 0x43, 0xd9, 0x8a, 0x6d, 0xd7, 0x77, 0xe4, 0xa9, 0x5e, 0x0d, 0x08,
	0xd5, 0x40, 0xcc, 0xa6, 0x42, 0xa8, 0xbe, 0x88, 0xe4, 0x77, 0x7d, 0xe9, 0xb7, 0xa4, 0xad, 0xda,
	0x1e, 0xfb, 0xb3, 0x6c, 0xcd, 0x6a, 0xe0, 0x8e, 0xe8, 0x4a, 0xa5, 0xcf, 0xb7, 0xce, 0x5a, 0x9e,
	0xc4, 0xbe, 0x2c, 0x5a, 0x94, 0x50, 0x8b, 0xda, 0x89, 0x14, 0xa1, 0xda, 0x98, 0xaa, 0x53, 0x77,
	0x27, 0x54, 0x73, 0xea, 0xb4, 0x79, 0x17, 0x2a, 0xae, 0x1f, 0xb5, 0x42, 0xb7, 0xa7, 0x6a, 0x88,
	0xbd, 0x57, 0xb6, 0xb2, 0x20, 0x95, 0x67, 0x14, 0x9f, 0x79, 0x6a, 0x6a, 0x2b, 0x56, 0x4a, 0x98,
	0xef, 0xc0, 0x42, 0x66, 0x68, 0x38, 0x61, 0xd0, 0xc3, 0x4e, 0x2c, 0x59, 0xf3, 0x29, 0x78, 0x23,
	0x0c, 0x7a, 0xf5, 0x1d, 0xa8, 0xad, 0xa3, 0x20, 0x41, 0x3a, 0xea, 0xea, 0x81, 0xeb, 0x29, 0xbd,
	0xbd, 0xd7, 0x0e, 0x85, 0x23, 0xcd, 0xb7, 0x61, 0x46, 0x10, 0x04, 0x9b, 0x67, 0xea, 0x59, 0xf1,
	0x83, 0xa7, 0x96, 0x06, 0xa9, 0x15, 0x1a, 0x57, 0x75, 0x6a, 0x14, 0xfc, 0x5d, 0xff, 0x6d, 0x01,
	0x6e, 0x66, 0x33, 0x54, 0x2b, 0x92, 0xb3, 0x8e, 0x1b, 0xb0, 0x6a, 0x72, 0x33, 0x86, 0x49, 0xd5,
	0x78, 0xc8, 0x33, 0xbf, 0xf2, 0x38, 0xed, 0xfb, 0x86, 0xea, 0xd7, 0x01, 0xc6, 0x94, 0xef, 0xd9,
	0x67, 0x47, 0x36, 0x52, 0xd8, 0x63, 0x49, 0xec, 0x97, 0x7b, 0x96, 0x6c, 0x4b, 0xff, 0xb5, 0xef,
	0xc8, 0xb0, 0xf9, 0xb4, 0x19, 0x9c, 0xc8, 0x30, 0xb2, 0xf0, 0x6b, 0xaa, 0x91, 0xd2, 0x79, 0x5d,
	0xb4, 0x28, 0x51, 0xff, 0xf7, 0x2b, 0x70, 0x6d, 0xa8, 0xac, 0x2a, 0xab, 0x28, 0xa9, 0x5a, 0x21,
	0xad, 0x9a, 0xca, 0x44, 0xcd, 0xbd, 0x88, 0xeb, 0x4b, 0x09, 0x35, 0x4b, 0x1c, 0x29, 0xe2, 0x8e,
	0xde, 0x02, 0x38, 0xa5, 0x06, 0xa3, 0x88, 0x22, 0x37, 0x8a, 0xf5, 0xda, 0xaf, 0x93, 0x6a, 0xfe,
	0xf8, 0x32, 0xb6, 0x4f, 0x82, 0x30, 0xee, 0xf0, 0x94, 0x2d, 0xf9, 0x32, 0x7e, 0xa3, 0xd2, 0x6c,
	0x02, 0x9a, 0x4e, 0x4c, 0x40, 0x37, 0xa1, 0x8c, 0x42, 0x74, 0xc7, 0x8d, 0x23, 0x9e, 0x9f, 0x25,
	0x05, 0x78, 0xe9, 0xc6, 0xfc, 0x6d, 0xdf, 0x95, 0x91, 0x9e, 0xa1, 0x94, 0x52, 0x3a, 0xc5, 0x81,
	0x5a, 0x80, 0xce, 0xec, 0xb0, 0xef, 0x4b, 0xbb, 0x1d, 0x78, 0x7a, 0xa2, 0xce, 0x13, 0xdc, 0xea,
	0xfb, 0xf2, 0x45, 0xe0, 0x39, 0x4a, 0x5c, 0x0d, 0x85, 0xd2, 0x53, 0x5a, 0xa1, 0x94, 0x3d, 0xbb,
	0x4f, 0xfd, 0x4e, 0x1c, 0x40, 0x56, 0x08, 0xc4, 0xaf, 0x2b, 0x34, 0x8f, 0x0a, 0x64, 0xfc, 0x0c,
	0xae, 0x07, 0x07, 0x91, 0x0c, 0x8f, 0x65, 0x68, 0x9f, 0x88, 0xd0, 0x89, 0x6c, 0x47, 0xaa, 0xff,
	0xd2, 0xa9, 0x56, 0x88, 0x4f, 0xa3, 0xdf, 0x28, 0xec, 0x06, 0x23, 0xd5, 0x3e, 0x16, 0x4a, 0xcf,
	0x55, 0x83, 0x1b, 0xbf, 0x62, 0x4b, 0x11, 0xfa, 0xd2, 0x61, 0xa3, 0x97, 0xa9, 0x71, 0xea, 0x1b,
	0x0d, 0xc4, 0xa8, 0x99, 0x88, 0x84, 0x5e, 0x10, 0x45, 0x36, 0xdb, 0x54, 0xa4, 0xc3, 0x26, 0xb1,
	0x45, 0x85, 0xda, 0x0a, 0xa2, 0x68, 0x4f, 0x23, 0xcc, 0x07, 0x30, 0x8f, 0x53, 0x1a, 0x97, 0x4e,
	0xac, 0x08, 0xdb, 0xc7, 0x14, 0xf4, 0x95, 0xeb, 0x79, 0x58, 0xfe, 0x47, 0xb0, 0x40, 0x55, 0x4e,
	0xc9, 0xc8, 0x44, 0x36, 0x87, 0xe0, 0x84, 0xee, 0x3e, 0xcc, 0x1d, 0xf4, 0x5d, 0xcf, 0x51, 0xc2,
	0x38, 0x52, 0x19, 0x94, 0x99, 0x06, 0x22, 0xd1, 0x2d, 0x80, 0x20, 0xee, 0xc8, 0x90, 0x28, 0x16,
	0x69, 0x13, 0x40, 0x88, 0xce, 0xa3, 0x15, 0x74, 0xe5, 0x81, 0x68, 0x1d, 0x11, 0x85, 0xc9, 0xdb,
	0x0f, 0x03, 0x91, 0xe8, 0x3d, 0x58, 0x94, 0xa7, 0x3d, 0x19, 0xba, 0x6a, 0x6a, 0x0a, 0x2e, 0xd2,
	0x12, 0x49, 0x03, 0x59, 0x04, 0x12, 0x7f, 0x00, 0x66, 0x16, 0xb6, 0x42, 0xd4, 0x64, 0x43, 0xcb,
	0x65, 0xb3, 0x92, 0xaf, 0xac, 0x23, 0xfd, 0x33, 0xa2, 0xbd, 0x9a, 0xa9, 0xec, 0x86, 0xf4, 0xcf,
	0x90, 0xee, 0x63, 0xb8, 0x16, 0xf7, 0xec, 0xa8, 0x15, 0x06, 0x9e, 0x17, 0xd9, 0xbd, 0x7e, 0xd8,
	0xea, 0x88, 0x48, 0x3a, 0xf6, 0x53, 0xb6, 0x48, 0x2d, 0xc5, 0xbd, 0x7d, 0x42, 0xee, 0x69, 0xdc,
	0xd3, 0xb1, 0x4c, 0x2b, 0x6c, 0x45, 0x1a, 0xc1, 0xb4, 0x32, 0x96, 0xe9, 0x63, 0x6d, 0x47, 0x1a,
	0x66, 0xfa, 0x78, 0x2c, 0xd3, 0x27, 0xd5, 0x1b, 0xe3, 0x98, 0x3e, 0x19, 0xcb, 0xf4, 0x69, 0xb5,
	0x36, 0x8e, 0xe9, 0x53, 0x25, 0x71, 0xfb, 0xb2, 0x1f, 0x87, 0xba, 0x1f, 0x6e, 0x92, 0xc4, 0xcd,
	0x30, 0x6c, 0x2b, 0x94, 0xdb, 0xfb, 0xa1, 0xab, 0x7b, 0xfd, 0x6d, 0x2d, 0xb7, 0x23, 0x0c, 0x49,
	0xee, 0x40, 0x25, 0x0c, 0xa2, 0x8e, 0xf0, 0x89, 0xe2, 0x16, 0x6d, 0xbd, 0x04, 0xd2, 0x04, 0xae,
	0xaf, 0x46, 0x01, 0x11, 0xdc, 0x26, 0x02, 0x02, 0xe9, 0x81, 0xe5, 0xc6, 0xb2, 0xcb, 0x42, 0xc9,
	0x03, 0x1a, 0x58, 0x0a, 0x42, 0x22, 0x8b, 0x12, 0xdb, 0xfa, 0x3d, 0x54, 0x95, 0x70, 0x8a, 0x44,
	0x3d, 0xe9, 0xc7, 0xd5, 0x87, 0x34, 0x68, 0x18, 0xa3, 0xf2, 0xd9, 0xef, 0x91, 0xb9, 0x7a, 0xae,
	0x25, 0xba, 0x3d, 0x14, 0x49, 0x51, 0x13, 0x7b, 0xc4, 0xc3, 0x50, 0x01, 0xf7, 0x09, 0xa6, 0xaa,
	0x45, 0xd3, 0xb9, 0xe7, 0x89, 0x96, 0x74, 0xd8, 0xc4, 0x56, 0x41, 0xd8, 0x1e, 0x82, 0x14, 0x49,
	0x1c, 0xba, 0x3d, 0x4f, 0xda, 0xb4, 0x1c, 0x3e, 0x26, 0x12, 0x82, 0xbd, 0xc2, 0x45, 0xb1, 0x06,
	0xa5, 0x50, 0x74, 0x7b, 0xa2, 0x2d, 0x23, 0xb6, 0xb5, 0x25, 0x69, 0xf3, 0x25, 0xcc, 0xb2, 0xde,
	0xa6, 0x96, 0xe6, 0xa8, 0xfa, 0x04, 0xa5, 0x80, 0x87, 0x59, 0x29, 0x60, 0xec, 0xf6, 0x61, 0x55,
	0x5a, 0xc9, 0xef, 0xa8, 0xfe, 0xbf, 0x17, 0x94, 0x50, 0xa6, 0x88, 0x95, 0x12, 0x79, 0xc1, 0xea,
	0xbd, 0x0c, 0x4b, 0xd2, 0x97, 0xdd, 0x33, 0x3b, 0xc6, 0x8d, 0x01, 0xcb, 0x2e, 0x1d, 0xbd, 0xa1,
	0x23, 0x8a, 0xb6, 0x8c, 0x57, 0x88, 0x30, 0x57, 0xe0, 0x2a, 0xd1, 0x1f, 0x88, 0x30, 0x14, 0xad,
	0xa3, 0x84, 0x63, 0x82, 0x15, 0x1f, 0x85, 0x5c, 0x63, 0x1c, 0xf3, 0x0c, 0x7e, 0x23, 0x27, 0xfb,
	0x67, 0xbf, 0xc1, 0x2a, 0xc0, 0xf0, 0x37, 0x98, 0x63, 0x6a, 0xc4, 0x37, 0x88, 0xa7, 0x6e, 0x29,
	0x29, 0x48, 0xd5, 0x79, 0xd5, 0x71, 0x5c, 0x25, 0x01, 0x08, 0xef, 0xb5, 0xef, 0xc6, 0x9b, 0xbe,
	0x5a, 0xfe, 0x94, 0x44, 0x7a, 0x13, 0xca, 0x7d, 0xdf, 0x8d, 0x49, 0x0a, 0x21, 0x39, 0xa8, 0xa4,
	0x00, 0x5a, 0x02, 0x51, 0xc3, 0x47, 0xed, 0x61, 0x13, 0x8f, 0xa7, 0x2c, 0x4a, 0xd4, 0xff, 0xb1,
	0x02, 0xdc, 0xc8, 0xb6, 0xfa, 0x9e, 0x0c, 0xbb, 0xc2, 0x97, 0x7e, 0xbc, 0xd6, 0x3f, 0x3c, 0x34,
	0x1f, 0xc2, 0x7c, 0x4f, 0x03, 0xec, 0x83, 0xfe, 0xe1, 0x21, 0xb7, 0xeb, 0x5c, 0x2f, 0x47, 0xa6,
	0xc4, 0x55, 0x35, 0x88, 0xd8, 0x58, 0x5a, 0x64, 0x71, 0x55, 0x81, 0xc8, 0x48, 0x7a, 0x0b, 0xa0,
	0x1d, 0x0a, 0xad, 0x3f, 0xb2, 0xc2, 0x84, 0x10, 0xd5, 0x75, 0xf5, 0x5f, 0xc1, 0x55, 0x2a, 0x03,
	0x8a, 0x67, 0xd2, 0x93, 0xad, 0xb8, 0xa1, 0xea, 0xa4, 0x64, 0x34, 0x37, 0xb2, 0x7b, 0x6e, 0xeb,
	0x08, 0x3f, 0x5c, 0xb2, 0xa6, 0xdd, 0x68, 0xcf, 0x6d, 0x1d, 0x61, 0x37, 0x4b, 0xd1, 0x4d, 0xe4,
	0x0f, 0x29, 0xba, 0x59, 0x81, 0x6e, 0x22, 0x2b, 0xd0, 0xd5, 0xff, 0x66, 0x11, 0x80, 0xf2, 0x5f,
	0xf7, 0xdc, 0x9e, 0x12, 0xcc, 0xc9, 0xc6, 0xcb, 0x92, 0xdf, 0xa4, 0x35, 0x83, 0xe9, 0x4d, 0x47,
	0x29, 0x4e, 0x6c, 0x83, 0xca, 0x48, 0xf6, 0xf4, 0x8d, 0x05, 0x42, 0xac, 0x26, 0xf2, 0xfd, 0x13,
	0x58, 0x4c, 0x4d, 0x21, 0x64, 0x91, 0xd7, 0x82, 0xc0, 0x42, 0x9b, 0x4d, 0x21, 0x64, 0x7f, 0x8f,
	0xcc, 0x77, 0xc1, 0x70, 0xfa, 0xac, 0x0d, 0x6b, 0x52, 0x1a, 0x1a, 0x0b, 0x1a, 0xae, 0x49, 0x6f,
	0x42, 0x99, 0x8b, 0x90, 0x48, 0xf5, 0x25, 0x02, 0x90, 0xc0, 0xae, 0xab, 0x38, 0x9d, 0x93, 0x59,
	0xef, 0x01, 0xb0, 0x68, 0xa6, 0x85, 0x79, 0x12, 0xd8, 0xca, 0x0c, 0x25, 0x6d, 0xa0, 0x25, 0xba,
	0x32, 0x14, 0xa8, 0xd0, 0xb3, 0xd8, 0x00, 0x04, 0x52, 0x5a, 0xbc, 0x12, 0x5b, 0x5a, 0x41, 0x57,
	0x6d, 0x1e, 0x28, 0x31, 0x94, 0x2d, 0x9d, 0xac, 0xff, 0x06, 0xae, 0xaf, 0xef, 0x89, 0x30, 0x3e,
	0xdb, 0x97, 0x22, 0xc4, 0x56, 0x64, 0x03, 0xd8, 0x99, 0x6a, 0x4c, 0xb2, 0xbd, 0x72, 0x63, 0x4e,
	0x5b, 0x33, 0x98, 0xa6, 0x0f, 0x1e, 0x48, 0xd1, 0x0a, 0x7c, 0x3b, 0x3e, 0xeb, 0x91, 0xa8, 0x38,
	0x65, 0x01, 0x81, 0x9a, 0x67, 0x3d, 0xa9, 0x56, 0x25, 0xe2, 0xed, 0xca, 0xee, 0x81, 0xd2, 0x0a,
	0x26, 0xee, 0x4e, 0x3c, 0x9e, 0xb1, 0x66, 0x11, 0xb8, 0x4d, 0xb0, 0xfa, 0x0e, 0x69, 0x5f, 0x4a,
	0x00, 0x7c, 0x29, 0x22, 0x25, 0xc3, 0x7f, 0xd5, 0x97, 0x17, 0x6b, 0x5f, 0x6a, 0xe4, 0xa8, 0xe5,
	0x93, 0xfb, 0x6f, 0xd2, 0x9a, 0x56, 0xc9, 0x4d, 0xa7, 0xfe, 0x09, 0x5c, 0x1f, 0xc8, 0xcf, 0x92,
	0x51, 0x2f, 0xf0, 0x23, 0xa9, 0xea, 0xd2, 0x11, 0x91, 0xad, 0x08, 0x79, 0xb8, 0xcd, 0x74, 0x88,
	0xa4, 0xfe, 0xfb, 0x28, 0xdb, 0x46, 0xed, 0x17, 0xeb, 0x2f, 0x64, 0xcc, 0x67, 0x3a, 0x22, 0x74,
	0x14, 0x6e, 0xd3, 0x3f, 0x0c, 0x2e, 0x2a, 0xcd, 0x87, 0x70, 0x45, 0x1f, 0x18, 0x89, 0xd0, 0xb1,
	0xb9, 0x64, 0x34, 0x15, 0x27, 0x2d, 0x1e, 0x73, 0x49, 0x86, 0x4e, 0x64, 0xd6, 0x61, 0x4e, 0x78,
	0x9e, 0x7d, 0x18, 0x84, 0x36, 0x0a, 0x37, 0x3c, 0xb0, 0x2a, 0xc2, 0xf3, 0x9e, 0x07, 0x21, 0x4e,
	0x0e, 0xa5, 0xd9, 0xdc, 0x3f, 0xa7, 0x4c, 0x49, 0xb5, 0x3a, 0xc9, 0xa0, 0xa6, 0x8f, 0xfb, 0x87,
	0x81, 0x56, 0xc0, 0x7e, 0x92, 0x57, 0xc0, 0x2e, 0xc8, 0x69, 0x39, 0x83, 0x52, 0xe0, 0x85, 0x5e,
	0x2e, 0x1d, 0xd5, 0xfe, 0xf1, 0x02, 0xcc, 0xe7, 0x69, 0xcc, 0x0f, 0x60, 0x69, 0x44, 0xcd, 0x79,
	0xde, 0x19, 0x83, 0x15, 0x1f, 0x68, 0xc7, 0xe2, 0x60, 0x3b, 0xaa, 0xf5, 0x08, 0x37, 0x2b, 0xfb,
	0x20, 0xf0, 0xfb, 0x91, 0xa4, 0x09, 0x37, 0x69, 0xcd, 0x11, 0x74, 0x8d, 0x80, 0xf5, 0xbf, 0x54,
	0x80, 0xeb, 0x6c, 0x0f, 0xda, 0x16, 0xbd, 0xad, 0x80, 0x94, 0x44, 0xb5, 0x8a, 0xca, 0xcb, 0x19,
	0x84, 0x1e, 0x42, 0xc5, 0x63, 0x2e, 0x5d, 0x8e, 0x29, 0xa6, 0x02, 0x8d, 0xd8, 0x74, 0xcc, 0xb7,
	0xa1, 0x9c, 0x1c, 0x7a, 0x61, 0x49, 0x4a, 0x56, 0x0a, 0xa8, 0x7f, 0x06, 0x4b, 0xa8, 0x0f, 0xa7,
	0x87, 0x23, 0xa8, 0x05, 0xdf, 0x81, 0x4a, 0x5a, 0x00, 0xea, 0x88, 0x39, 0x0b, 0x92, 0x6f, 0x47,
	0xf5, 0x3f, 0x98, 0x23, 0x46, 0x55, 0xfc, 0xbd, 0x30, 0x38, 0x74, 0x3d, 0xa9, 0x5a, 0xe8, 0xa2,
	0x31, 0xf6, 0x39, 0x4c, 0x45, 0x5e, 0x10, 0xd3, 0x2c, 0xaa, 0xac, 0xd4, 0xf3, 0x5d, 0x3b, 0x90,
	0xd9, 0xf2, 0xbe, 0x17, 0xc4, 0x16, 0x31, 0xa8, 0x5d, 0xfd, 0x40, 0x38, 0xed, 0xc4, 0xc8, 0x48,
	0x2b, 0x53, 0x05, 0x61, 0x6c, 0x64, 0xbc, 0x07, 0xb3, 0x7c, 0x90, 0x4a, 0x24, 0xb4, 0x30, 0x55,
	0xe8, 0xc4, 0x94, 0x48, 0x6e, 0x40, 0x89, 0x48, 0x92, 0xc5, 0x69, 0x06, 0xd3, 0x9b, 0x8e, 0xf9,
	0x0d, 0xdc, 0x60, 0xfb, 0xe1, 0x01, 0xaa, 0xf8, 0x76, 0xab, 0xdf, 0xb3, 0x8f, 0x49, 0xc9, 0xc7,
	0xc5, 0xea, 0x62, 0x53, 0xc0, 0x35, 0xca, 0x60, 0xc8, 0x08, 0x73, 0x13, 0xca, 0xa1, 0xf0, 0x8f,
	0xec, 0xd8, 0x95, 0x21, 0xaf, 0x69, 0x25, 0x05, 0x68, 0xba, 0x32, 0x54, 0xcb, 0xae, 0x27, 0x85,
	0x23, 0xc3, 0x83, 0x40, 0x0d, 0x3e, 0x05, 0x67, 0x65, 0x68, 0x21, 0x03, 0xb7, 0x84, 0x7f, 0xa4,
	0xe4, 0x29, 0xb5, 0xd3, 0xa0, 0xd9, 0xae, 0x7f, 0xa0, 0x74, 0xec, 0x03, 0x19, 0xa2, 0x1e, 0x54,
	0xb2, 0x0c, 0x37, 0xda, 0xf3, 0xfa, 0xd1, 0x7e, 0x02, 0xc7, 0x23, 0x69, 0x45, 0x3a, 0xca, 0x6a,
	0xc8, 0x3a, 0x90, 0xc2, 0xef, 0x0e, 0x59, 0x0e, 0x1f, 0xc1, 0x42, 0x52, 0x5c, 0x3a, 0x28, 0x61,
	0xf5, 0x67, 0x4e, 0x17, 0x1a, 0x8f, 0x45, 0x94, 0x78, 0x30, 0x58, 0x72, 0x1b, 0xa9, 0x49, 0xc3,
	0x58, 0x1a, 0x28, 0xfe, 0xba, 0xe2, 0xb9, 0x02, 0x53, 0xb1, 0x1b, 0x7b, 0x92, 0x85, 0x6f, 0x4a,
	0x8c, 0xb5, 0xc5, 0x57, 0xc7, 0xda, 0xe2, 0x1f, 0xc2, 0xbc, 0xe7, 0x1e, 0xe2, 0xe1, 0x24, 0x9d,
	0x83, 0xb1, 0x8c, 0x3d, 0xa7, 0xa1, 0x78, 0xfe, 0x55, 0xfb, 0x3b, 0xd3, 0x30, 0xa9, 0x46, 0x91,
	0x5a, 0x6a, 0xd5, 0x38, 0xca, 0x18, 0x52, 0x54, 0x72, 0xd3, 0x31, 0x57, 0x61, 0x9a, 0x8c, 0x43,
	0x38, 0x81, 0x2a, 0x2b, 0xef, 0x5e, 0x3c, 0x24, 0x97, 0x9b, 0xc8, 0x60, 0x31, 0xa3, 0xf9, 0x3b,
	0x6c, 0x33, 0x98, 0xc0, 0x0c, 0xde, 0xb9, 0x44, 0x06, 0x28, 0x2b, 0x92, 0xea, 0xff, 0x3b, 0x30,
	0x89, 0x6b, 0xf9, 0xe4, 0xa5, 0x99, 0x71, 0x3b, 0x40, 0x26, 0xc5, 0xac, 0xf6, 0x56, 0x1c, 0xe9,
	0x97, 0x63, 0x56, 0xc2, 0x8b, 0x85, 0x4c, 0xe6, 0x0b, 0x28, 0xc9, 0x6e, 0x10, 0xbb, 0x2d, 0x36,
	0xdc, 0x54, 0x56, 0xde, 0xbb, 0x44, 0x06, 0x0d, 0x66, 0xb1, 0x12, 0x66, 0x55, 0x0a, 0x94, 0x73,
	0x66, 0x2e, 0x5d, 0x0a, 0xd5, 0x91, 0x24, 0x10, 0xd5, 0x5e, 0xc2, 0x34, 0x35, 0x67, 0xde, 0x6e,
	0x57, 0xc8, 0xdb, 0xed, 0x48, 0xa8, 0x47, 0x24, 0x0d, 0xc8, 0xa2, 0x16, 0xea, 0x15, 0x0c, 0x87,
	0x63, 0x2d, 0x82, 0x49, 0x34, 0xe1, 0x6c, 0xc1, 0x8c, 0x6a, 0x59, 0x9d, 0xcb, 0x7c, 0x5e, 0x76,
	0x1f, 0x2e, 0x51, 0x43, 0x71, 0x6d, 0x6e, 0x3c, 0x9b, 0x3d, 0xb2, 0x25, 0x1a, 0x6a, 0xde, 0xb8,
	0x7e, 0x64, 0x4d, 0xab, 0x3c, 0x68, 0xb1, 0xc7, 0xdc, 0xb2, 0x9f, 0x2d, 0x2b, 0x08, 0x7d, 0xf4,
	0x25, 0x4c, 0xaa, 0xfe, 0x30, 0xdf, 0x81, 0x85, 0x48, 0x86, 0xae, 0xf0, 0xdc, 0xdf, 0x48, 0x27,
	0xdd, 0x9d, 0x67, 0xad, 0xf9, 0x14, 0x8c, 0x84, 0xe3, 0xf6, 0xfc, 0xda, 0xaf, 0x60, 0x52, 0x75,
	0xce, 0x78, 0x93, 0xdf, 0x4d, 0x28, 0x23, 0x02, 0xdd, 0x75, 0xa8, 0x20, 0x25, 0x05, 0x50, 0xc5,
	0x55, 0x0b, 0x36, 0x22, 0xd9, 0x6f, 0x87, 0xad, 0xb5, 0x0a, 0xb4, 0x85, 0x90, 0xda, 0x7b, 0x50,
	0xd2, 0x5d, 0xa7, 0x88, 0x75, 0xe7, 0xa5, 0x9f, 0x01, 0x0d, 0xda, 0x74, 0x6a, 0x77, 0x60, 0xb2,
	0xc9, 0xd2, 0xaa, 0xb6, 0xbd, 0x16, 0xb2, 0xb6, 0xd7, 0xfa, 0xbf, 0x58, 0x80, 0x19, 0x6e, 0x37,
	0xd3, 0x80, 0x5c, 0xcb, 0x19, 0x13, 0xe6, 0x15, 0x30, 0x34, 0x64, 0x1d, 0xa5, 0x33, 0x27, 0x32,
	0x26, 0xcd, 0xeb, 0xb0, 0xa4, 0xa1, 0x99, 0xc3, 0x69, 0x63, 0xca, 0xac, 0xc1, 0x35, 0x8d, 0x78,
	0xee, 0x86, 0x51, 0x8c, 0x52, 0xb0, 0x5a, 0x89, 0x8c, 0x69, 0xf3, 0x36, 0xd4, 0x34, 0x6e, 0x2f,
	0x94, 0xc7, 0x6e, 0xd0, 0x8f, 0xf6, 0xa5, 0x88, 0x02, 0x5f, 0xad, 0x28, 0xc6, 0x4c, 0xf6, 0x53,
	0x98, 0xe9, 0xf6, 0xd7, 0x7b, 0x46, 0xa9, 0xfe, 0x1f, 0x4c, 0x26, 0x67, 0x2d, 0x89, 0x6f, 0x0b,
	0x9d, 0x68, 0x5f, 0x6e, 0x6b, 0xbd, 0x93, 0xd9, 0x26, 0x8a, 0x19, 0x92, 0x64, 0xb3, 0xb8, 0x95,
	0x2e, 0x27, 0x13, 0x19, 0xbc, 0x5e, 0x54, 0x6e, 0x2b, 0xc5, 0x19, 0x4f, 0x69, 0x45, 0xd7, 0xfe,
	0x88, 0x37, 0xa2, 0xb2, 0x8b, 0xf2, 0xa8, 0xe8, 0x7e, 0x94, 0xc7, 0x3f, 0xe5, 0x9d, 0x28, 0xc1,
	0x3f, 0x45, 0xe5, 0x3d, 0x94, 0x22, 0x96, 0x74, 0x9a, 0xc2, 0x86, 0xb5, 0x0a, 0xc3, 0xf0, 0x10,
	0x2b, 0xb7, 0xad, 0xd3, 0x9e, 0x92, 0x02, 0x50, 0xd9, 0xd1, 0xe6, 0xde, 0xc4, 0x0a, 0x0e, 0x1a,
	0x44, 0x42, 0x4a, 0xea, 0x04, 0x80, 0xfb, 0x12, 0xb0, 0xc5, 0x45, 0x43, 0x71, 0x73, 0xba, 0x02,
	0x53, 0x74, 0x7e, 0x44, 0x1b, 0x06, 0x25, 0x94, 0xfa, 0x2c, 0xe2, 0x58, 0x76, 0x7b, 0x71, 0xc4,
	0x3b, 0x43, 0x92, 0xc6, 0x8c, 0xb9, 0x18, 0xb6, 0xe7, 0x76, 0xdd, 0x98, 0x2d, 0x61, 0x73, 0x1a,
	0xba, 0xa5, 0x80, 0x6a, 0x5a, 0x7d, 0xd7, 0x97, 0x51, 0x4c, 0xfb, 0x1d, 0x59, 0xc0, 0xca, 0x08,
	0xc1, 0x9d, 0xee, 0x01, 0xcc, 0x77, 0xc5, 0xa9, 0x9d, 0x21, 0x21, 0xeb, 0xd7, 0x6c, 0x57, 0x9c,
	0x7e, 0x95, 0x50, 0xa1, 0x7d, 0x22, 0x8a, 0x05, 0xd7, 0xd2, 0xd0, 0xf6, 0x09, 0x02, 0xe5, 0x55,
	0x91, 0xc5, 0xdc, 0x5c, 0xba, 0x03, 0x15, 0x55, 0x5e, 0x4f, 0xc4, 0xc8, 0x49, 0x06, 0x2f, 0xd0,
	0xa0, 0x4d, 0xa7, 0xfe, 0x07, 0x05, 0x92, 0x5b, 0x49, 0x8d, 0x68, 0x06, 0x2f, 0xd6, 0x2d, 0x19,
	0x06, 0x9e, 0x37, 0x38, 0x9c, 0x9e, 0x65, 0x46, 0x0a, 0xad, 0x36, 0x46, 0xc6, 0x66, 0x8c, 0x32,
	0xf0, 0xb3, 0xb9, 0xc6, 0xd7, 0x8d, 0x9d, 0xa6, 0xbd, 0xb9, 0x61, 0xef, 0xec, 0xee, 0x34, 0xd2,
	0x41, 0x34, 0xd0, 0x49, 0x13, 0x43, 0x9d, 0x94, 0x29, 0xfe, 0x64, 0x4e, 0x59, 0xfc, 0x47, 0x13,
	0xa9, 0x7a, 0x64, 0xa9, 0x12, 0xa9, 0xfa, 0x2f, 0xc0, 0x74, 0x28, 0xa3, 0xbe, 0x17, 0x73, 0xd9,
	0x3e, 0x1d, 0x14, 0xa5, 0xcf, 0x65, 0x5f, 0x6e, 0x58, 0xc8, 0xfc, 0x6c, 0x41, 0xd2, 0x0f, 0x7b,
	0xbf, 0xdf, 0x6a, 0xc9, 0x28, 0xb2, 0x38, 0xd7, 0xfa, 0x6f, 0x60, 0x86, 0x69, 0xcc, 0x25, 0x18,
	0xa4, 0x32, 0xde, 0xca, 0x02, 0x37, 0xc2, 0xa0, 0xd7, 0x93, 0x8e, 0x51, 0x50, 0x53, 0x56, 0x03,
	0x77, 0x82, 0xf8, 0x79, 0xd0, 0xf7, 0x1d, 0xa3, 0x68, 0x5e, 0x03, 0x53, 0x43, 0xd7, 0x85, 0x1f,
	0x53, 0xc1, 0x8c, 0x09, 0xb5, 0x6a, 0x24, 0xf9, 0xa2, 0xbd, 0xb6, 0x11, 0x86, 0x41, 0x68, 0x4c,
	0xd6, 0x8f, 0xa0, 0x4a, 0x75, 0x68, 0x06, 0xbd, 0xf5, 0xe4, 0x04, 0x3d, 0x42, 0xf1, 0xf5, 0x31,
	0x18, 0x71, 0xd0, 0xb3, 0x33, 0xe7, 0xef, 0x24, 0xc3, 0x4e, 0x5a, 0xf3, 0x71, 0x8e, 0xda, 0x7c,
	0x08, 0xa8, 0x07, 0xdb, 0xc1, 0xa1, 0x1d, 0x77, 0xa4, 0xed, 0x88, 0x33, 0x5e, 0x96, 0x67, 0x15,
	0x78, 0xf7, 0xb0, 0xd9, 0x91, 0x1b, 0xe2, 0xac, 0xfe, 0xb7, 0x1f, 0xc1, 0x0d, 0xbd, 0x77, 0x58,
	0x52, 0x78, 0x5a, 0xc2, 0x20, 0x7b, 0xce, 0x73, 0x98, 0x42, 0xe5, 0x1c, 0x5b, 0xb9, 0xb2, 0xf2,
	0xd1, 0xf0, 0x7e, 0x33, 0xc4, 0xb3, 0x4c, 0x8b, 0x9c, 0x8c, 0x85, 0xeb, 0x45, 0x16, 0xb1, 0x9b,
	0x0d, 0x98, 0x52, 0xeb, 0x2b, 0xa9, 0x5c, 0xf9, 0xc3, 0xf1, 0xb1, 0xf9, 0xa8, 0x75, 0x3a, 0xc9,
	0x06, 0xb9, 0xcd, 0xaf, 0xa0, 0xac, 0xcd, 0xbf, 0x5a, 0xd0, 0xfe, 0xf8, 0x32, 0x59, 0xad, 0x31,
	0x93, 0xce, 0x2e, 0xcd, 0xc5, 0xdc, 0x42, 0xdb, 0x48, 0xaf, 0x43, 0x2e, 0x2e, 0x24, 0xab, 0x7c,
	0x70, 0x99, 0x3c, 0x5f, 0x28, 0xae, 0x0d, 0x11, 0x0b, 0x34, 0xa5, 0xd0, 0x4f, 0x3c, 0xf3, 0x93,
	0x5e, 0x2c, 0xec, 0xc3, 0x50, 0x74, 0x25, 0x2e, 0x8f, 0x25, 0x0b, 0x10, 0xf4, 0x5c, 0x41, 0x6a,
	0xff, 0x67, 0x11, 0x2a, 0x99, 0x8a, 0xd1, 0x74, 0x15, 0x5d, 0xf6, 0x55, 0xd1, 0x1b, 0x96, 0x02,
	0x91, 0x7f, 0x4a, 0x76, 0xa3, 0x2a, 0xe6, 0x0e, 0x09, 0x95, 0x50, 0x81, 0x9c, 0xe9, 0x99, 0x57,
	0x09, 0xf9, 0x44, 0x57, 0x26, 0x48, 0x2f, 0x68, 0x07, 0x58, 0xa9, 0x69, 0x42, 0x6e, 0x05, 0xed,
	0x40, 0xa9, 0x0a, 0x88, 0x8c, 0x45, 0x1b, 0xd7, 0xc6, 0xb2, 0x85, 0x9f, 0x68, 0x8a, 0x36, 0x9e,
	0x69, 0xa1, 0x38, 0x40, 0x0b, 0x3b, 0x25, 0xf2, 0xe7, 0x26, 0xe5, 0x81, 0x73, 0x93, 0x57, 0x30,
	0x43, 0x7a, 0x64, 0x54, 0x9d, 0xc6, 0x1e, 0x79, 0x7a, 0x99, 0xd6, 0xa3, 0x89, 0xa9, 0xfb, 0x43,
	0xe7, 0xa0, 0xbe, 0x14, 0xf8, 0xde, 0x99, 0x9d, 0x48, 0x5d, 0x25, 0xab, 0xa4, 0x00, 0xb8, 0x67,
	0x5f, 0x83, 0xe9, 0x56, 0x47, 0xaa, 0x0f, 0xf1, 0xa1, 0x0b, 0xa5, 0x94, 0xb6, 0x9e, 0x54, 0xd6,
	0xee, 0x87, 0x1e, 0x2e, 0xe9, 0x65, 0xab, 0xa2, 0x2b, 0xfc, 0x3a, 0xf4, 0x6a, 0x7f, 0xb5, 0x00,
	0x15, 0x25, 0xa5, 0xe8, 0x76, 0x7f, 0x02, 0x0b, 0x28, 0xac, 0x64, 0xcc, 0x36, 0xe9, 0x39, 0xdb,
	0x9c, 0x42, 0xad, 0x26, 0xa6, 0x1b, 0x13, 0x26, 0xb1, 0x91, 0x8b, 0x98, 0x2d, 0xfe, 0x4e, 0x0c,
	0x9d, 0x13, 0x68, 0x56, 0x21, 0x43, 0xa7, 0x09, 0x93, 0x51, 0xe0, 0xd1, 0x8a, 0x56, 0xb2, 0xf0,
	0xb7, 0x79, 0x1b, 0xc8, 0x10, 0x47, 0xa6, 0xb9, 0xa9, 0x8c, 0x69, 0x0e, 0x21, 0xb5, 0xbf, 0x52,
	0x80, 0x79, 0xfe, 0x92, 0x2e, 0x9a, 0x09, 0xc5, 0x5c, 0x69, 0x8a, 0xee, 0xe8, 0x22, 0x24, 0x3e,
	0xca, 0x13, 0x59, 0x1f, 0xe5, 0x1a, 0x94, 0x5a, 0x41, 0xe0, 0x39, 0xc1, 0x89, 0xcf, 0x87, 0x9d,
	0x49, 0x9a, 0x2c, 0xe7, 0xf4, 0xdb, 0xee, 0x8a, 0x53, 0x2c, 0x4e, 0xd1, 0xaa, 0x68, 0xd8, 0xb6,
	0x38, 0xad, 0x09, 0x58, 0x50, 0xb2, 0x5a, 0x33, 0xd0, 0x47, 0xb5, 0x91, 0x79, 0x1b, 0x4a, 0x4a,
	0x59, 0x74, 0xbb, 0xb9, 0x52, 0x25, 0xb0, 0x31, 0xa7, 0x73, 0x99, 0x53, 0xb8, 0x89, 0xdc, 0x29,
	0x5c, 0xed, 0x16, 0x54, 0xb8, 0xc6, 0xb8, 0xa2, 0xcd, 0x73, 0x75, 0x27, 0x1e, 0x4f, 0xa9, 0xaa,
	0xd6, 0xfe, 0xdb, 0x79, 0x98, 0xcb, 0x8d, 0x0e, 0x25, 0x10, 0xb0, 0x00, 0x33, 0xa4, 0x78, 0xbb,
	0xaa, 0x85, 0xd9, 0x40, 0xa7, 0x2d, 0x05, 0x54, 0x3c, 0x0d, 0x4b, 0x9a, 0x6e, 0x62, 0xa0, 0xf7,
	0xd4, 0x08, 0x9b, 0xcc, 0xd8, 0x2f, 0xaf, 0x01, 0xee, 0x41, 0x89, 0xd9, 0x8f, 0x53, 0x66, 0x1d,
	0x66, 0x3b, 0x6a, 0xf8, 0x76, 0x58, 0xf7, 0x9e, 0xd6, 0x67, 0x5a, 0x29, 0xcc, 0x7c, 0x0c, 0x0b,
	0x5d, 0x71, 0x9a, 0x23, 0x23, 0xc1, 0x66, 0x10, 0xac, 0x28, 0x29, 0x1d, 0xca, 0xb6, 0xf4, 0x43,
	0xa5, 0xb1, 0x96, 0xb0, 0x17, 0x06, 0xc1, 0x6a, 0xe4, 0x74, 0x85, 0x2f, 0x38, 0x3b, 0x96, 0x73,
	0x52, 0x88, 0xf9, 0x00, 0xe6, 0xba, 0xe2, 0x34, 0x43, 0xc2, 0x62, 0x4e, 0x0e, 0x48, 0x54, 0xbe,
	0x48, 0xbf, 0x56, 0xc1, 0xaf, 0xe5, 0x81, 0x78, 0xd6, 0x26, 0x22, 0xf2, 0x28, 0xf6, 0xdb, 0x71,
	0x87, 0x65, 0x9f, 0x59, 0x05, 0xdc, 0x67, 0x18, 0xd9, 0x29, 0x22, 0x69, 0x8b, 0x36, 0x9d, 0x4b,
	0xcf, 0x69, 0x3b, 0x45, 0x24, 0x57, 0x09, 0x64, 0xbe, 0x07, 0x8b, 0x48, 0xe2, 0xfa, 0xb1, 0xf4,
	0x3c, 0xb7, 0xad, 0x76, 0x7b, 0x16, 0x81, 0x0c, 0x85, 0xd8, 0xcc, 0xc0, 0x95, 0xa0, 0x44, 0xf9,
	0x85, 0xdd, 0x20, 0x44, 0x29, 0x68, 0xca, 0x2a, 0x63, 0x6e, 0x0a, 0xa0, 0xc4, 0x2d, 0x44, 0x77,
	0x83, 0x63, 0x19, 0xf5, 0xa4, 0xd4, 0x52, 0x10, 0x96, 0x74, 0x5b, 0x03, 0xd1, 0xcc, 0xa9, 0xc8,
	0x1c, 0xd1, 0x15, 0x6d, 0xad, 0xa0, 0x63, 0xc6, 0x1b, 0x08, 0x51, 0x13, 0x22, 0xa9, 0x16, 0x49,
	0x43, 0x49, 0x1a, 0x07, 0x29, 0xd7, 0x66, 0x89, 0x07, 0x29, 0xd7, 0xa4, 0x0e, 0xb3, 0xb9, 0x4a,
	0x5c, 0xd1, 0x9e, 0xfe, 0x99, 0x0a, 0x5c, 0x81, 0x29, 0x2a, 0xfb, 0x55, 0x2c, 0x3b, 0x25, 0xd4,
	0x68, 0x4d, 0x8b, 0x4c, 0xa7, 0x77, 0x29, 0x00, 0x0f, 0x8e, 0xa9, 0xa4, 0xd7, 0xf9, 0xe0, 0x98,
	0x4a, 0xa9, 0xb5, 0x1c, 0x46, 0x56, 0x53, 0x2d, 0x87, 0xab, 0xa1, 0xd4, 0xc4, 0xe0, 0x44, 0x86,
	0x9a, 0xe2, 0x06, 0xab, 0x89, 0x0a, 0xc6, 0x24, 0x7b, 0xc0, 0xf6, 0x66, 0x57, 0x46, 0xd5, 0x1a,
	0xae, 0xc5, 0x2b, 0x97, 0x59, 0x8b, 0xf3, 0xeb, 0x8f, 0x95, 0x66, 0x92, 0x2e, 0x31, 0x37, 0xb3,
	0x4b, 0xcc, 0x2d, 0x00, 0x3c, 0xbb, 0xa5, 0x35, 0x8d, 0x8e, 0xdf, 0xca, 0x0a, 0x42, 0xa7, 0x0d,
	0xb8, 0x07, 0x8a, 0xb8, 0xc3, 0x78, 0x3e, 0x7c, 0x43, 0x10, 0x11, 0xdc, 0x87, 0x39, 0x5e, 0x0b,
	0x98, 0xe4, 0x36, 0xbb, 0xd3, 0x12, 0x90, 0x88, 0xee, 0xc1, 0x2c, 0x9d, 0xa9, 0x33, 0xcd, 0x1d,
	0xaa, 0x2f, 0xc1, 0x88, 0xe4, 0x06, 0x94, 0x3c, 0xfd, 0x95, 0xbb, 0xd4, 0x7d, 0x5e, 0x27, 0xe1,
	0xc6, 0xe6, 0x54, 0x93, 0xca, 0xf5, 0xdb, 0xd5, 0x7b, 0xc4, 0xad, 0x60, 0x2f, 0x09, 0x64, 0xde,
	0x85, 0x59, 0x3c, 0xba, 0xeb, 0xc9, 0xd0, 0xee, 0xba, 0x7e, 0xb5, 0x4e, 0xe5, 0x54, 0xb0, 0x3d,
	0x19, 0x6e, 0xbb, 0xbe, 0xf9, 0x36, 0xc0, 0x69, 0x2f, 0xc1, 0xdf, 0xa7, 0xb1, 0x73, 0xda, 0x63,
	0xec, 0x0d, 0x50, 0x7b, 0x20, 0x9d, 0x1f, 0xd2, 0xf9, 0xe0, 0x8c, 0x2f, 0xf1, 0xd0, 0x4f, 0x2d,
	0x2f, 0x08, 0xa6, 0xf3, 0x40, 0xfc, 0x6d, 0xce, 0x42, 0xe1, 0x14, 0xcf, 0xfd, 0x8a, 0x56, 0xe1,
	0x54, 0xa5, 0xce, 0xf0, 0x84, 0xaf, 0x68, 0x15, 0xce, 0x54, 0x69, 0x43, 0x19, 0xf5, 0xc4, 0x09,
	0x3b, 0xeb, 0x3d, 0xc6, 0xf1, 0x54, 0x61, 0x18, 0x2a, 0x45, 0xef, 0xc1, 0x62, 0x5f, 0x75, 0x9b,
	0x12, 0xeb, 0x93, 0xf5, 0x9d, 0x0e, 0xf8, 0x0c, 0x8d, 0x58, 0xd7, 0xeb, 0xbc, 0x1a, 0x4c, 0x22,
	0xb2, 0x0f, 0xfa, 0x67, 0x07, 0xa2, 0x75, 0x84, 0xde, 0xf3, 0x25, 0x0b, 0x3a, 0x22, 0x5a, 0x23,
	0x88, 0x12, 0xc7, 0xe8, 0x30, 0xea, 0xbd, 0xcb, 0x8b, 0x63, 0x99, 0xdd, 0x93, 0x4f, 0xaf, 0xcc,
	0x5d, 0xdc, 0xdc, 0xa2, 0x0e, 0xe5, 0xf5, 0xfe, 0x0f, 0xcb, 0x2b, 0x93, 0x85, 0xf9, 0x4b, 0x30,
	0xf0, 0x47, 0x27, 0xe8, 0xf5, 0x5c, 0xbf, 0xed, 0xb9, 0x51, 0x5c, 0xfd, 0xe0, 0x87, 0x65, 0x3b,
	0x94, 0x91, 0xf9, 0x15, 0x54, 0x70, 0xfc, 0xf2, 0x72, 0xb9, 0x7c, 0xf9, 0x7c, 0x33, 0xdb, 0x95,
	0x95, 0xcd, 0xc3, 0xfc, 0x3d, 0x30, 0x71, 0x98, 0xc5, 0x01, 0x79, 0x9f, 0xd3, 0xb9, 0xea, 0x87,
	0x97, 0x17, 0x4c, 0x07, 0xf6, 0x5a, 0xb5, 0x0b, 0xe4, 0x37, 0x5f, 0x35, 0x90, 0x45, 0x64, 0xeb,
	0x2e, 0xc6, 0x9b, 0x08, 0x25, 0x4b, 0x75, 0xef, 0x6b, 0x06, 0x99, 0x4f, 0x60, 0x31, 0x4b, 0x62,
	0xab, 0xa5, 0xbd, 0xfa, 0x14, 0xe9, 0x16, 0x32, 0x74, 0xdb, 0xc2, 0x17, 0xb5, 0x3f, 0x2c, 0xc0,
	0xc2, 0x80, 0x30, 0x3c, 0xf2, 0x30, 0xaf, 0xaa, 0xf4, 0x33, 0xa1, 0xa8, 0xd8, 0x71, 0x47, 0x27,
	0x15, 0xb5, 0x27, 0x7c, 0xa9, 0xb7, 0x4e, 0xf5, 0x9b, 0x84, 0x21, 0x19, 0xf2, 0xc6, 0x89, 0xbf,
	0x11, 0x76, 0xd6, 0xd3, 0x6e, 0x92, 0xf8, 0x9b, 0xe6, 0xc0, 0x4c, 0x6e, 0x0e, 0x94, 0xf4, 0x1c,
	0x78, 0x1b, 0xca, 0x8e, 0x8c, 0xe2, 0x30, 0x38, 0x93, 0xa4, 0xd5, 0x97, 0xac, 0x14, 0x50, 0xfb,
	0x87, 0xa0, 0xf2, 0xca, 0xf5, 0xbc, 0x54, 0x6a, 0xce, 0x9c, 0xd2, 0x15, 0x06, 0x37, 0x7d, 0xb2,
	0x6d, 0xd1, 0x1a, 0x94, 0xb8, 0x49, 0x4d, 0xa9, 0xec, 0x44, 0xdc, 0xc1, 0xd9, 0xf4, 0x3e, 0x18,
	0x78, 0xa6, 0x1c, 0xda, 0x69, 0x36, 0x13, 0x49, 0x36, 0xf3, 0x84, 0xdb, 0xe3, 0xcc, 0x6a, 0x9f,
	0x82, 0x99, 0xb8, 0xbd, 0xa5, 0x52, 0xc9, 0x45, 0x65, 0xa8, 0x7d, 0x0e, 0xf3, 0x7b, 0x6e, 0xeb,
	0x68, 0x4d, 0xf8, 0x99, 0x96, 0x46, 0xa3, 0x26, 0x9f, 0x8e, 0xa3, 0xad, 0x72, 0x44, 0xeb, 0xd7,
	0xfe, 0xc7, 0x69, 0x98, 0xcd, 0x6a, 0x51, 0xe6, 0x23, 0xb4, 0xc1, 0x1d, 0xcb, 0xd0, 0x8e, 0xb2,
	0x56, 0xab, 0x69, 0x6b, 0x8e, 0xc0, 0xfb, 0xac, 0x13, 0x64, 0xcf, 0x56, 0x8b, 0xf9, 0xb3, 0xd5,
	0xb7, 0xa1, 0x9c, 0x5e, 0x8a, 0xe1, 0x23, 0xe0, 0xf4, 0x02, 0xcc, 0x6d, 0xa8, 0xa0, 0xc1, 0x39,
	0x38, 0x44, 0x45, 0x91, 0x04, 0x47, 0xc4, 0xef, 0x1e, 0x6e, 0x88, 0x33, 0x73, 0x05, 0xae, 0xba,
	0x91, 0xed, 0xbb, 0xed, 0x4e, 0x1c, 0xc5, 0xc2, 0x3b, 0x92, 0x21, 0x25, 0x58, 0xc3, 0x59, 0x72,
	0xa3, 0x9d, 0x0c, 0x0e, 0x7f, 0x2b, 0x59, 0x3e, 0x39, 0xa1, 0xc5, 0x61, 0x30, 0x65, 0x95, 0xf4,
	0xc9, 0x2c, 0x1e, 0x49, 0xd3, 0x1d, 0x26, 0x35, 0xaa, 0x97, 0xf8, 0x48, 0x9a, 0xe7, 0x85, 0x54,
	0x9b, 0xbf, 0xaa, 0x92, 0xeb, 0xd8, 0xa1, 0x70, 0x5c, 0xe1, 0xc7, 0x2c, 0xf2, 0xcf, 0x11, 0xd4,
	0x22, 0xa0, 0xd6, 0x9e, 0x5c, 0xc7, 0x76, 0xdc, 0x50, 0x6a, 0x21, 0x89, 0x40, 0x1b, 0x6e, 0x28,
	0xcd, 0x97, 0x30, 0xd5, 0x73, 0x5b, 0x47, 0x4a, 0x38, 0xba, 0xf4, 0x76, 0x98, 0xef, 0x34, 0x8b,
	0x32, 0x30, 0x9f, 0xc3, 0xe4, 0x81, 0xf0, 0xa3, 0x6a, 0xe5, 0x07, 0x67, 0x84, 0xfc, 0x6a, 0xe9,
	0x25, 0x69, 0x79, 0xf6, 0xf2, 0xeb, 0x4f, 0x66, 0xe8, 0x6b, 0xf1, 0xfa, 0x5b, 0x98, 0x3d, 0x48,
	0xc7, 0x64, 0x54, 0x9d, 0xc3, 0xdc, 0x3e, 0xbb, 0x94, 0x32, 0x3c, 0x34, 0x96, 0xad, 0x5c, 0x5e,
	0x49, 0xc7, 0xe1, 0x41, 0x35, 0x49, 0x6f, 0xd8, 0x71, 0x78, 0x4c, 0x7d, 0x13, 0xca, 0x7c, 0x0b,
	0xc9, 0xd5, 0x8e, 0x5b, 0x25, 0x02, 0x6c, 0xa2, 0x07, 0x18, 0x23, 0xfd, 0xc0, 0xc9, 0xd8, 0x9f,
	0x66, 0x09, 0xba, 0x13, 0x38, 0x92, 0xad, 0x43, 0x6a, 0x51, 0xa6, 0x13, 0x11, 0x14, 0xeb, 0x4a,
	0x16, 0x10, 0x08, 0x15, 0xbd, 0x3b, 0x50, 0x21, 0xd5, 0xce, 0xee, 0x49, 0x71, 0xa4, 0x65, 0x3a,
	0x02, 0xed, 0x49, 0x71, 0xa4, 0x46, 0x8f, 0x17, 0x1c, 0x1c, 0x9c, 0xd1, 0xd1, 0x36, 0xc9, 0x66,
	0x65, 0x84, 0xe0, 0xc9, 0xf6, 0x3b, 0xb0, 0x40, 0x27, 0x42, 0xe9, 0x88, 0x27, 0xaf, 0xab, 0x79,
	0x04, 0x37, 0x35, 0xb4, 0xf6, 0x77, 0x26, 0xa1, 0x9c, 0xe8, 0xf1, 0xec, 0x26, 0xd1, 0xeb, 0xd0,
	0x9e, 0x4e, 0x1a, 0x09, 0xe9, 0xf6, 0xb8, 0xab, 0xdf, 0x80, 0x12, 0xa1, 0x4f, 0x7b, 0xec, 0xc4,
	0x31, 0x83, 0xe9, 0x5f, 0xf4, 0x52, 0x4e, 0xbc, 0x15, 0x3a, 0x91, 0xe1, 0x54, 0x5d, 0xa7, 0xea,
	0x43, 0x68, 0x94, 0xd6, 0xaa, 0x93, 0x88, 0x27, 0x0e, 0xf4, 0x4a, 0xc1, 0x16, 0x47, 0x82, 0x10,
	0xb5, 0xb2, 0x09, 0x9c, 0x2a, 0x0a, 0x60, 0x89, 0x53, 0x53, 0xd2, 0x5c, 0xb0, 0xbd, 0xa0, 0xc5,
	0x1b, 0x0c, 0xe9, 0xd9, 0x3f, 0xfb, 0x5e, 0x56, 0x0a, 0x34, 0xa7, 0x64, 0xcf, 0x62, 0x23, 0x6b,
	0x96, 0x14, 0xe4, 0x16, 0xa6, 0x6a, 0x0f, 0x61, 0x2e, 0x87, 0x26, 0xff, 0x56, 0xc1, 0x3e, 0xe4,
	0x53, 0x16, 0x25, 0x6a, 0x5d, 0x58, 0x1c, 0xca, 0xc9, 0xfc, 0x05, 0x94, 0xd3, 0xd2, 0x8d, 0x74,
	0x39, 0xbf, 0xa8, 0x74, 0xf9, 0x92, 0x95, 0x3c, 0x2e, 0x55, 0xfd, 0x97, 0x30, 0x85, 0xb4, 0xe6,
	0x12, 0x2c, 0xa0, 0x2b, 0x64, 0xea, 0x9f, 0x68, 0xbc, 0x65, 0x9a, 0x30, 0xaf, 0xfd, 0x05, 0x19,
	0x56, 0x30, 0x6f, 0xc2, 0xf5, 0x0d, 0xb5, 0xd0, 0xaf, 0xfa, 0x0e, 0x8b, 0x3b, 0x2f, 0xc8, 0x53,
	0x31, 0x36, 0x8a, 0xe6, 0x2c, 0x94, 0x7e, 0xb1, 0xc7, 0xa4, 0x13, 0xf5, 0x37, 0x50, 0x96, 0xfa,
	0xc3, 0x66, 0x05, 0x66, 0xd6, 0x82, 0x78, 0x4b, 0xf8, 0xd2, 0x78, 0x4b, 0x25, 0xb6, 0x5d, 0x07,
	0x13, 0x05, 0x95, 0x68, 0x06, 0x3d, 0x4c, 0x14, 0x4d, 0x80, 0xe9, 0x2f, 0xfb, 0x6a, 0xa4, 0x1a,
	0x13, 0x2a, 0xb7, 0x55, 0xbf, 0xe5, 0x4a, 0x3f, 0x8e, 0x8c, 0x49, 0xb3, 0x0c, 0x53, 0xbb, 0x71,
	0x47, 0x86, 0xc6, 0x54, 0xfd, 0x7f, 0x5a, 0x80, 0xdb, 0x63, 0x6b, 0xdd, 0x94, 0x61, 0x24, 0xcd,
	0x57, 0x79, 0xcb, 0xda, 0xa7, 0x97, 0x68, 0x2e, 0x64, 0x1c, 0x69, 0x5e, 0xfb, 0x32, 0x6f, 0x5e,
	0xfb, 0xe4, 0xd2, 0x99, 0x8d, 0xb0, 0xb1, 0x7d, 0x3d, 0x6c, 0x63, 0xfb, 0xfc, 0xd2, 0xf9, 0x9d,
	0x63, 0x68, 0xfb, 0x6a, 0x84, 0xa1, 0x6d, 0xe5, 0xd2, 0x19, 0xff, 0x30, 0x6b, 0xdb, 0x7f, 0xfc,
	0xe7, 0x63, 0x6d, 0xcb, 0x1a, 0xd4, 0x4a, 0x79, 0x83, 0xda, 0xb9, 0x86, 0xb8, 0x4b, 0x58, 0xdb,
	0x66, 0x06, 0xac, 0x6d, 0x43, 0xb6, 0xae, 0xf2, 0x90, 0xad, 0xcb, 0xdc, 0x1b, 0xb4, 0xc8, 0x7d,
	0x76, 0xe9, 0x66, 0x1e, 0x6d, 0x96, 0xab, 0xfd, 0xad, 0x89, 0xff, 0x7f, 0xd9, 0x64, 0x12, 0xbd,
	0x74, 0x7a, 0xbc, 0x5e, 0x3a, 0x73, 0x81, 0x5e, 0x5a, 0xba, 0x58, 0x2f, 0x2d, 0x5f, 0x42, 0x2f,
	0x85, 0xf3, 0xf5, 0xd2, 0x4a, 0x5e, 0x2f, 0xd5, 0x9a, 0xe1, 0xec, 0xa0, 0x66, 0x38, 0x97, 0x93,
	0x8a, 0xe7, 0xb5, 0x54, 0x9c, 0x1b, 0x0b, 0x0b, 0x03, 0x63, 0xe1, 0xed, 0xac, 0xbe, 0x6f, 0xd0,
	0xa6, 0x93, 0xd3, 0xdd, 0x49, 0x2f, 0x5b, 0xcc, 0x38, 0x1c, 0x9e, 0xab, 0x00, 0x14, 0x46, 0x2b,
	0x00, 0xc5, 0x21, 0x05, 0x00, 0x77, 0xdd, 0x89, 0x8c, 0x60, 0x7f, 0x59, 0xa5, 0x00, 0xab, 0x3a,
	0x9d, 0xab, 0xea, 0xcc, 0x48, 0x05, 0xa0, 0x34, 0xa8, 0x00, 0xfc, 0x70, 0x61, 0xfa, 0x6f, 0x4c,
	0xfe, 0x79, 0x0b, 0xd3, 0x39, 0xc1, 0x77, 0x72, 0x40, 0xf0, 0x5d, 0x85, 0x5b, 0xf4, 0xd9, 0x8c,
	0xc8, 0x65, 0x67, 0x3d, 0x92, 0xa6, 0xd1, 0x23, 0xa9, 0x86, 0x44, 0x19, 0x51, 0x2d, 0xf1, 0x7c,
	0x1c, 0x90, 0xcf, 0x66, 0xce, 0x93, 0xcf, 0x4a, 0x17, 0xca, 0x67, 0xe5, 0x11, 0xf2, 0x59, 0x5e,
	0x36, 0x87, 0x41, 0xd9, 0x7c, 0x5b, 0xcb, 0xd4, 0x24, 0x0a, 0xff, 0xe8, 0xf2, 0x8b, 0xcb, 0x48,
	0xc1, 0xfa, 0x15, 0x0b, 0xd6, 0xb3, 0x7f, 0xba, 0xdc, 0x48, 0xba, 0xce, 0x0b, 0x86, 0x73, 0x97,
	0x10, 0x0c, 0xe7, 0x47, 0x0a, 0x86, 0x4f, 0x2e, 0x2f, 0x17, 0xd6, 0xff, 0x76, 0x21, 0xdd, 0xec,
	0x93, 0x0e, 0x53, 0x59, 0x79, 0xae, 0x2f, 0xc9, 0x91, 0xf6, 0x57, 0x30, 0x45, 0x7e, 0x84, 0x74,
	0x58, 0x79, 0x2f, 0x73, 0x90, 0x3a, 0x9a, 0xe3, 0xd9, 0x83, 0x31, 0x08, 0xba, 0x85, 0x83, 0x1e,
	0x4d, 0xd2, 0xb1, 0x28, 0xd7, 0xfc, 0x70, 0x2c, 0xe2, 0x45, 0xc3, 0xcc, 0x70, 0x34, 0x61, 0x12,
	0xb7, 0x5c, 0x9e, 0xb0, 0x0e, 0xef, 0x9c, 0x51, 0x1c, 0xba, 0x7e, 0x3b, 0xdd, 0x8d, 0xcb, 0x16,
	0x10, 0x48, 0xd5, 0xb9, 0xbe, 0x0f, 0x77, 0xf5, 0x19, 0x24, 0x1d, 0x14, 0xe3, 0x77, 0x5f, 0x84,
	0x41, 0xbf, 0x17, 0x7d, 0x2d, 0xc3, 0x48, 0x49, 0x4c, 0x1f, 0xc2, 0x12, 0x4e, 0x88, 0x36, 0x42,
	0xed, 0x63, 0x02, 0xf3, 0x84, 0x34, 0x33, 0x28, 0x66, 0xa8, 0xff, 0x7e, 0x91, 0xdc, 0x38, 0x55,
	0x4b, 0xed, 0x6f, 0xec, 0x26, 0x56, 0x8e, 0x97, 0x6e, 0x84, 0xde, 0x64, 0xe7, 0xb8, 0x06, 0xe7,
	0xc6, 0x7c, 0x71, 0x60, 0xcc, 0xe7, 0x7b, 0x7d, 0x62, 0xb0, 0xd7, 0xc9, 0xd1, 0x45, 0xdf, 0x6a,
	0x9e, 0x4c, 0x1c, 0x5d, 0xf8, 0x3a, 0xb3, 0x01, 0x13, 0x27, 0x81, 0xcf, 0xd2, 0x83, 0xfa, 0xa9,
	0x20, 0xed, 0x5e, 0x97, 0x37, 0x17, 0xf5, 0x53, 0x41, 0x4e, 0x7b, 0x5d, 0x9e, 0x6c, 0xea, 0x67,
	0x7a, 0xea, 0x51, 0x1a, 0x7d, 0x27, 0xa9, 0x3c, 0xee, 0x4e, 0x12, 0xe4, 0x4e, 0x43, 0xea, 0xff,
	0x64, 0x81, 0x3c, 0x6c, 0xf7, 0x42, 0xe9, 0xb8, 0x2d, 0x25, 0x89, 0xae, 0x77, 0x02, 0x97, 0xac,
	0xcb, 0x74, 0xf9, 0x80, 0xda, 0x93, 0x12, 0x23, 0x0f, 0x82, 0xea, 0x30, 0xd7, 0x75, 0x7d, 0x3b,
	0x14, 0x27, 0xb9, 0x3b, 0x94, 0x95, 0xae, 0xeb, 0x5b, 0xe2, 0x84, 0x2e, 0x2c, 0xd4, 0xf1, 0xb4,
	0x20, 0x43, 0xc3, 0x5e, 0x86, 0x5d, 0x71, 0xaa, 0x69, 0xea, 0xff, 0x12, 0x50, 0x51, 0x36, 0x7d,
	0x35, 0xd5, 0xd2, 0x02, 0x25, 0x47, 0x34, 0x78, 0x35, 0x6a, 0xcc, 0x69, 0xd4, 0xab, 0xcc, 0xb6,
	0x30, 0xbf, 0xb2, 0x9c, 0x9f, 0xc6, 0x83, 0x39, 0x2e, 0x37, 0xd2, 0xdf, 0xaa, 0x8b, 0x9e, 0xcd,
	0xbc, 0x90, 0xbe, 0x0c, 0xdd, 0x16, 0xef, 0x27, 0x6f, 0x60, 0x0a, 0x47, 0x0e, 0x96, 0x72, 0x7e,
	0x50, 0x7e, 0x19, 0xce, 0xcd, 0x12, 0xbe, 0x13, 0x74, 0xc9, 0x75, 0xdd, 0x0d, 0x7c, 0x1c, 0xa6,
	0x76, 0xfc, 0xac, 0xdc, 0x10, 0xa1, 0x87, 0xa1, 0x3a, 0x2c, 0xca, 0xcf, 0xac, 0x41, 0x09, 0x3d,
	0x2f, 0x5c, 0xee, 0xf0, 0xb2, 0x95, 0xa4, 0xcd, 0xcf, 0x61, 0xa6, 0x85, 0x4d, 0xaf, 0xc5, 0xa6,
	0x01, 0xa7, 0xc8, 0xc1, 0x1e, 0xb2, 0x34, 0xb9, 0x5a, 0x56, 0x42, 0xf9, 0x5d, 0xdf, 0x0d, 0xa5,
	0x83, 0x76, 0x40, 0x19, 0xe1, 0x9d, 0xc0, 0xb2, 0x35, 0xaf, 0xc1, 0x2f, 0x11, 0xca, 0xbe, 0x21,
	0xe1, 0x19, 0x89, 0x91, 0x24, 0x2a, 0x96, 0x11, 0x82, 0x72, 0xe4, 0x1e, 0x5e, 0x37, 0x0f, 0xcf,
	0xa8, 0x8b, 0xd4, 0x18, 0x9a, 0x18, 0x3e, 0x8d, 0x1e, 0xaa, 0x3d, 0x3a, 0x64, 0xbf, 0x92, 0x67,
	0xd8, 0x89, 0x11, 0xde, 0x4e, 0x0f, 0x39, 0x61, 0xc6, 0x70, 0x4d, 0xf8, 0xd1, 0x89, 0x0c, 0xed,
	0x50, 0x46, 0x81, 0xd7, 0xa7, 0x0b, 0xe1, 0xaa, 0x9f, 0x00, 0x5b, 0xf6, 0xa3, 0x0b, 0x5b, 0x36,
	0x61, 0x53, 0xfd, 0x64, 0xc7, 0xcf, 0x66, 0x37, 0x7d, 0xbc, 0x29, 0x8b, 0x5f, 0xb5, 0xae, 0x50,
	0xee, 0x79, 0x2a, 0x0c, 0x85, 0x81, 0x06, 0x52, 0x3b, 0x0e, 0x6c, 0xbc, 0x67, 0xc0, 0x72, 0xd0,
	0x1c, 0x81, 0x9b, 0xc1, 0x0b, 0x05, 0x54, 0x02, 0x57, 0x88, 0xd7, 0xd3, 0x6c, 0x81, 0x9f, 0xd3,
	0xc7, 0x4e, 0x04, 0x5c, 0xa5, 0xc1, 0xb7, 0x02, 0x57, 0x1d, 0x79, 0xd0, 0x6f, 0xdb, 0x87, 0x41,
	0xd8, 0x92, 0x76, 0xa4, 0x3b, 0x99, 0x57, 0xf7, 0x25, 0x44, 0x3e, 0x57, 0xb8, 0xa4, 0xff, 0xcd,
	0xdf, 0x85, 0xf9, 0x64, 0xa4, 0x53, 0x75, 0xe7, 0x2f, 0x37, 0x2c, 0xf5, 0x5c, 0xe0, 0xca, 0x4e,
	0x93, 0x5a, 0x60, 0xcd, 0x86, 0x19, 0x78, 0xed, 0x19, 0xcc, 0xe7, 0xdb, 0x3c, 0x99, 0x10, 0x85,
	0xfc, 0xf1, 0x6c, 0x7a, 0xe5, 0xb9, 0xac, 0x6f, 0x3e, 0xbe, 0x03, 0x0b, 0x03, 0x1f, 0x51, 0x1a,
	0x25, 0x7d, 0xc6, 0x78, 0xcb, 0x2c, 0xc1, 0xa4, 0x5a, 0x93, 0x8c, 0x42, 0xfd, 0xd7, 0xb0, 0x30,
	0x30, 0x49, 0x94, 0x1e, 0xca, 0xd3, 0x84, 0x28, 0xd5, 0xa0, 0x32, 0x0a, 0xc8, 0x23, 0x45, 0x97,
	0x74, 0x53, 0x92, 0xd2, 0x8d, 0x09, 0x45, 0xbc, 0xdf, 0x93, 0x2d, 0x57, 0x78, 0xa4, 0x9a, 0x7e,
	0x23, 0xa3, 0x9d, 0xc0, 0x98, 0x52, 0x2a, 0xf3, 0x57, 0x7d, 0xe1, 0xb9, 0x87, 0xae, 0x0c, 0x23,
	0xe4, 0x9b, 0xae, 0xff, 0x51, 0x01, 0x16, 0x87, 0x7a, 0xda, 0x34, 0x20, 0xd7, 0xd7, 0xc6, 0x5b,
	0xe6, 0x15, 0x30, 0xd0, 0x8d, 0xad, 0x19, 0xec, 0x89, 0x28, 0x22, 0x68, 0x41, 0x69, 0xe6, 0x5b,
	0x22, 0x0f, 0x44, 0xa7, 0x17, 0x0a, 0x2e, 0xc2, 0x11, 0x72, 0x08, 0x3e, 0xa1, 0x3e, 0xbf, 0x2d,
	0x4e, 0xb3, 0xb4, 0x93, 0x08, 0x73, 0xfd, 0x2c, 0x6c, 0x4a, 0xa9, 0xd6, 0xfb, 0x7d, 0xba, 0x6b,
	0x60, 0x4c, 0x9b, 0x37, 0xe0, 0xaa, 0xe2, 0x92, 0xa2, 0xbb, 0xdf, 0xef, 0x66, 0x09, 0x67, 0x10,
	0xe5, 0xfa, 0x23, 0x50, 0xa5, 0xfa, 0x0e, 0x5c, 0x1f, 0xb3, 0x32, 0x98, 0x73, 0x90, 0xae, 0x0d,
	0x89, 0xba, 0x8f, 0x89, 0x82, 0xfa, 0xf4, 0x96, 0x88, 0x51, 0xdc, 0x30, 0x8a, 0xaa, 0xe9, 0x50,
	0x74, 0x37, 0x26, 0xea, 0x7f, 0x34, 0x9b, 0xba, 0xca, 0x90, 0xab, 0x5e, 0xda, 0x41, 0x91, 0xb9,
	0x07, 0x95, 0x5e, 0x9a, 0x64, 0x2b, 0xc8, 0xf2, 0xb0, 0x38, 0x33, 0xc4, 0xb9, 0x9c, 0xfe, 0xb6,
	0xb2, 0x59, 0x98, 0x3b, 0xb0, 0xe4, 0xfa, 0x14, 0x63, 0x23, 0x9b, 0x73, 0x71, 0xd4, 0xe2, 0x34,
	0x38, 0x94, 0xad, 0x45, 0x77, 0x00, 0x12, 0x99, 0x2f, 0xe0, 0xde, 0x70, 0x7e, 0xa4, 0xa7, 0xe0,
	0x29, 0x57, 0x5b, 0x24, 0xb7, 0x83, 0xde, 0x1e, 0xe4, 0xc6, 0x36, 0xd8, 0x93, 0xa1, 0x82, 0x9a,
	0xaf, 0xe1, 0xf1, 0x88, 0x8c, 0x8e, 0x83, 0x58, 0x09, 0x14, 0x3d, 0x19, 0xba, 0x81, 0x63, 0x77,
	0x5d, 0xbf, 0x1f, 0x27, 0x71, 0xd6, 0xee, 0x0f, 0xe6, 0xf7, 0x35, 0x12, 0xef, 0x21, 0xed, 0x36,
	0x91, 0xd6, 0xfe, 0x5e, 0x19, 0x20, 0xb3, 0xeb, 0xfc, 0x92, 0x77, 0x14, 0x92, 0x99, 0xbe, 0xf8,
	0x7e, 0x2d, 0x79, 0xd1, 0x0e, 0x93, 0xdd, 0x08, 0x8a, 0xe3, 0x37, 0x82, 0x89, 0xef, 0xb7, 0x11,
	0xdc, 0x83, 0xd9, 0x64, 0x7d, 0x4a, 0x7d, 0xdb, 0x2a, 0x09, 0x2c, 0xf1, 0xba, 0xd5, 0xde, 0xea,
	0x53, 0x19, 0x61, 0x04, 0x3d, 0xd4, 0x6f, 0xa2, 0x25, 0xed, 0x88, 0xb0, 0xd3, 0x2c, 0xbe, 0x07,
	0xad, 0x23, 0x44, 0x5e, 0x83, 0x69, 0x5a, 0x1a, 0x75, 0xbc, 0x00, 0x4a, 0x99, 0x87, 0x50, 0xe1,
	0x55, 0x1e, 0x1b, 0xac, 0x84, 0x0d, 0xf6, 0xec, 0xfb, 0x36, 0xd8, 0x2a, 0x66, 0x81, 0x8d, 0x55,
	0xde, 0x47, 0x63, 0xec, 0xa6, 0x1f, 0x5b, 0x20, 0x12, 0xb0, 0x2a, 0x1c, 0x7f, 0x27, 0x8d, 0x3f,
	0x40, 0x80, 0x4d, 0xc7, 0xdc, 0x83, 0x19, 0xfa, 0xad, 0x8d, 0xed, 0x9f, 0x7d, 0xcf, 0x02, 0xd0,
	0xf7, 0x23, 0x4b, 0x67, 0x33, 0xb0, 0x5b, 0x56, 0x06, 0x77, 0xcb, 0x0f, 0xe1, 0x0a, 0x36, 0x15,
	0x5e, 0xea, 0xca, 0x34, 0x3a, 0xdf, 0x4f, 0x56, 0xb8, 0x5d, 0x7f, 0x3f, 0xd3, 0xf4, 0x18, 0x40,
	0x6f, 0x90, 0x81, 0xd6, 0xe8, 0x79, 0x1d, 0x40, 0x2f, 0xc7, 0x43, 0xa2, 0xd3, 0x53, 0xb8, 0x3a,
	0xcc, 0x16, 0x49, 0x8a, 0xec, 0x57, 0xb2, 0xcc, 0x01, 0xa6, 0x7d, 0x89, 0xa1, 0xfa, 0xfa, 0x91,
	0xb4, 0xb9, 0xb1, 0x68, 0x1b, 0xc2, 0xdb, 0xdc, 0x11, 0x5b, 0xbb, 0xaf, 0xf4, 0x23, 0x49, 0xf5,
	0xc5, 0x6f, 0x58, 0x88, 0x33, 0x37, 0x54, 0xff, 0xb6, 0xd5, 0x90, 0x5c, 0xc4, 0x2e, 0xbc, 0x9e,
	0xd1, 0x13, 0xe8, 0x1e, 0x8b, 0x85, 0xe8, 0x67, 0x4b, 0x5b, 0x8d, 0xd5, 0x17, 0xaf, 0x1b, 0xb6,
	0xd5, 0x78, 0xb1, 0xb9, 0xbb, 0x63, 0xbf, 0xde, 0xd9, 0x6f, 0x34, 0x2d, 0xe6, 0x35, 0x97, 0x61,
	0xba, 0xd7, 0x11, 0x91, 0x8c, 0xaa, 0xe6, 0xdd, 0x89, 0xc7, 0xf3, 0x2b, 0xd7, 0x86, 0x72, 0xd9,
	0x53, 0x68, 0x8b, 0xa9, 0xcc, 0x35, 0xe0, 0x0d, 0x97, 0xef, 0x3a, 0x2d, 0x5d, 0xce, 0xd9, 0xb3,
	0x42, 0x4c, 0x88, 0xab, 0x3d, 0x82, 0x19, 0xee, 0xbe, 0xfc, 0x20, 0x29, 0xe4, 0x07, 0x49, 0xfd,
	0x1f, 0xfe, 0xf3, 0xdb, 0xd5, 0x14, 0x4c, 0x6d, 0x41, 0xeb, 0x1d, 0xe1, 0xb7, 0xf0, 0x5c, 0xc1,
	0x98, 0xa9, 0xff, 0x7e, 0x01, 0x2a, 0x99, 0x81, 0xae, 0xf6, 0x81, 0x64, 0xa8, 0x1b, 0x6f, 0x99,
	0x0b, 0x50, 0xa1, 0xe4, 0x73, 0x2f, 0x10, 0xb1, 0x51, 0x50, 0x80, 0xed, 0xbe, 0x17, 0xbb, 0x3d,
	0xa2, 0x28, 0x9a, 0x8b, 0x30, 0xa7, 0x01, 0x44, 0x33, 0x61, 0xce, 0x03, 0x70, 0x8e, 0xea, 0x1b,
	0x93, 0x2a, 0x4d, 0x99, 0xe0, 0x4e, 0x3e, 0xa5, 0xf6, 0x51, 0xcd, 0x82, 0x90, 0x69, 0xb5, 0xc3,
	0xec, 0x04, 0xc4, 0x63, 0xcc, 0xd4, 0xff, 0xe7, 0x02, 0xf9, 0x7b, 0xae, 0x1e, 0x0b, 0xd7, 0x13,
	0x07, 0x5e, 0x6e, 0xcd, 0xb6, 0x61, 0x91, 0x54, 0xa2, 0xe1, 0xbd, 0x65, 0xc0, 0x78, 0x3a, 0x8a,
	0x9d, 0x8c, 0xc5, 0x99, 0x5d, 0xc1, 0xe8, 0xe6, 0x01, 0x51, 0xcd, 0x87, 0x85, 0x01, 0xa2, 0xf3,
	0xd4, 0xb0, 0x9f, 0xe7, 0x37, 0xb9, 0xcb, 0x6d, 0x45, 0x59, 0x96, 0xfa, 0xdf, 0x2f, 0xc0, 0xb5,
	0xf4, 0x5e, 0xd6, 0x1b, 0x95, 0x2f, 0xc5, 0xa0, 0x89, 0xcc, 0x55, 0x98, 0x21, 0x3b, 0x84, 0xae,
	0xe1, 0xc0, 0x85, 0x8b, 0x61, 0x96, 0x65, 0x9e, 0x15, 0x9a, 0xaf, 0xf6, 0x29, 0x4c, 0xef, 0xcb,
	0xd0, 0x95, 0x91, 0x79, 0x1d, 0x66, 0xb4, 0x8d, 0x83, 0x1d, 0xfc, 0x7d, 0xb2, 0x6e, 0x98, 0x30,
	0xd9, 0x26, 0xe5, 0x65, 0x02, 0x4d, 0x70, 0xa2, 0x2b, 0x6b, 0x87, 0x30, 0x4d, 0x39, 0xe5, 0xcd,
	0x27, 0x85, 0x01, 0xf3, 0xc9, 0xcf, 0x60, 0x3a, 0xc2, 0xdc, 0xb9, 0xe2, 0x17, 0x97, 0x8f, 0x0a,
	0x63, 0x31, 0x5b, 0xfd, 0x7f, 0xfd, 0x10, 0xe6, 0xf4, 0x5a, 0x88, 0xad, 0xae, 0xf6, 0x21, 0x7d,
	0x05, 0x55, 0x87, 0xbe, 0xd1, 0x69, 0xa5, 0xd6, 0xe3, 0xc6, 0x90, 0xa8, 0xad, 0x33, 0x56, 0x0a,
	0x50, 0xbb, 0x94, 0xb6, 0xf2, 0x4e, 0x8d, 0xea, 0x86, 0xe4, 0x1b, 0x6c, 0xd4, 0x4d, 0x9d, 0x2c,
	0xb3, 0xfd, 0x3b, 0x9d, 0xef, 0xdf, 0xc4, 0xcb, 0x88, 0xaf, 0x43, 0x97, 0xb0, 0x91, 0xc8, 0xcb,
	0x88, 0xaf, 0x4e, 0xbf, 0x03, 0x0b, 0x83, 0x97, 0xa6, 0xcb, 0x48, 0x35, 0x7f, 0x90, 0xbb, 0x2f,
	0x8d, 0x17, 0x5a, 0xbd, 0x7e, 0x14, 0x27, 0x1e, 0xf8, 0x3a, 0x69, 0x3e, 0x06, 0xe3, 0x50, 0xc9,
	0x91, 0xf6, 0x81, 0x17, 0x04, 0x7c, 0x11, 0x80, 0x44, 0xff, 0x79, 0x84, 0xaf, 0x29, 0x30, 0xea,
	0xe6, 0x77, 0xa0, 0x12, 0x4a, 0x0c, 0xab, 0x17, 0x09, 0x8f, 0x1c, 0xee, 0x67, 0x2c, 0x20, 0xd0,
	0xbe, 0xf0, 0xf0, 0x90, 0x99, 0x8d, 0x79, 0x2e, 0xd9, 0x72, 0x66, 0xac, 0x12, 0x01, 0x36, 0x7b,
	0xe4, 0x86, 0x8e, 0x48, 0x8c, 0x83, 0xb7, 0xa0, 0xdd, 0xd0, 0x15, 0x68, 0x2f, 0x08, 0xe3, 0x01,
	0xc3, 0x81, 0x31, 0x68, 0x38, 0xb8, 0x0f, 0x73, 0x9d, 0x7e, 0x57, 0xf8, 0xb6, 0x6e, 0xe8, 0x45,
	0xf6, 0xfd, 0x53, 0xc0, 0x3d, 0x6e, 0xcd, 0xfb, 0x30, 0x27, 0x8e, 0x65, 0x28, 0xda, 0x92, 0x83,
	0xc2, 0xf2, 0x91, 0x27, 0x03, 0x93, 0xa0, 0xb0, 0x28, 0x2e, 0xe9, 0xe0, 0x51, 0x4b, 0xe4, 0x79,
	0xa9, 0x60, 0x3a, 0x6a, 0x14, 0xde, 0x4d, 0xc3, 0x63, 0x6d, 0x5b, 0x9b, 0x25, 0xaf, 0xe8, 0xbb,
	0x69, 0x08, 0x6e, 0x92, 0x59, 0xf2, 0x2e, 0xcc, 0x3a, 0x6e, 0x28, 0x13, 0xa2, 0xab, 0x3a, 0xae,
	0x50, 0x28, 0x99, 0xa2, 0x06, 0x3c, 0x64, 0x5d, 0xed, 0x80, 0x96, 0xa4, 0xcd, 0x27, 0xb0, 0x98,
	0xfb, 0x0a, 0x6e, 0xad, 0xd7, 0x71, 0x6b, 0x5d, 0xc8, 0x7c, 0x07, 0x37, 0xd8, 0x07, 0x30, 0x9f,
	0x7e, 0x09, 0x09, 0xab, 0x14, 0x5a, 0x47, 0x7f, 0x0b, 0xa9, 0x06, 0x73, 0xc4, 0x93, 0x8e, 0x1b,
	0x38, 0xac, 0xb2, 0x39, 0xe2, 0x81, 0x47, 0x2e, 0x47, 0x24, 0xac, 0x91, 0x4b, 0xba, 0xce, 0x11,
	0xa9, 0x9e, 0xc2, 0xd5, 0xa1, 0x1c, 0xf1, 0xac, 0xe3, 0x33, 0xfc, 0xbc, 0x39, 0x90, 0xeb, 0xeb,
	0xd0, 0x33, 0xdf, 0x03, 0x33, 0x9f, 0x31, 0xd2, 0xff, 0x88, 0xea, 0x95, 0xcd, 0x5c, 0x11, 0xaf,
	0x0c, 0xe4, 0xaf, 0xef, 0x6f, 0xb0, 0x97, 0xdb, 0x52, 0x26, 0xff, 0x75, 0x46, 0x99, 0xef, 0x67,
	0x3f, 0x90, 0x30, 0x90, 0xef, 0x9b, 0xa1, 0x3f, 0x90, 0x50, 0xbf, 0xcc, 0x5a, 0xab, 0xee, 0x0c,
	0xee, 0xe5, 0x18, 0x4d, 0xe7, 0x05, 0x1b, 0xaf, 0x9e, 0x99, 0x94, 0x5c, 0xdd, 0x6e, 0x6c, 0xef,
	0x6e, 0x34, 0x68, 0x6f, 0x4d, 0x4d, 0x5b, 0x5f, 0x00, 0xa0, 0x99, 0xd4, 0x46, 0x1b, 0xe9, 0x5d,
	0x9c, 0xe8, 0x77, 0x06, 0x23, 0x36, 0x0c, 0xdc, 0xdb, 0xb7, 0xca, 0xc8, 0xb2, 0x26, 0xfc, 0x88,
	0xec, 0x3e, 0x6a, 0xae, 0x73, 0x8c, 0x49, 0xf4, 0x84, 0x9b, 0xb4, 0x2a, 0x08, 0xa4, 0x70, 0x92,
	0xe6, 0x2f, 0x94, 0x00, 0x40, 0x93, 0x0c, 0x2d, 0xbe, 0x75, 0x2c, 0xf0, 0xfd, 0x71, 0xcb, 0x89,
	0x45, 0xb3, 0x4f, 0x91, 0x3e, 0x33, 0xac, 0xc6, 0xde, 0xd6, 0xea, 0x37, 0xf6, 0xea, 0xd7, 0xab,
	0x9b, 0x5b, 0xab, 0x6b, 0x5b, 0x28, 0x16, 0x24, 0x68, 0x35, 0xd1, 0x75, 0x4b, 0xb7, 0xfb, 0xae,
	0xe7, 0xa8, 0xf1, 0x7a, 0x9f, 0x83, 0xf1, 0x11, 0xfc, 0x85, 0x02, 0x6f, 0x3a, 0xaa, 0x9c, 0xd8,
	0xbe, 0x09, 0xd9, 0x03, 0x3e, 0x57, 0x71, 0x43, 0xa9, 0x69, 0x32, 0xb9, 0x25, 0xc7, 0x6d, 0x0f,
	0xb1, 0x8b, 0xe7, 0x33, 0x5d, 0xd6, 0x14, 0xed, 0x24, 0xb7, 0x84, 0xec, 0x11, 0x9d, 0x92, 0xe9,
	0x8e, 0xe2, 0x93, 0x39, 0x5a, 0x95, 0xd5, 0xd7, 0xde, 0x61, 0xc7, 0x50, 0x04, 0xe8, 0x0b, 0x2c,
	0x88, 0xc4, 0x95, 0xe1, 0x71, 0xb2, 0x72, 0xb8, 0x32, 0xc2, 0xa5, 0xe1, 0x57, 0x70, 0x25, 0x6b,
	0xc0, 0x6f, 0x75, 0x84, 0xef, 0x4b, 0x4f, 0x3b, 0xd4, 0x3d, 0x19, 0xd7, 0x76, 0x19, 0x83, 0xfe,
	0x3a, 0xb1, 0x58, 0x4b, 0x07, 0x43, 0x30, 0xb4, 0x23, 0x4a, 0xbf, 0xed, 0xfa, 0xb2, 0xfa, 0x3e,
	0x6d, 0x5e, 0x94, 0x32, 0xf7, 0xc0, 0xc8, 0x85, 0x5e, 0x14, 0xb1, 0xa8, 0x7e, 0x80, 0x47, 0xa9,
	0x8f, 0xc6, 0x7d, 0x32, 0xbd, 0x13, 0x82, 0xc7, 0xa7, 0xf3, 0xad, 0x5c, 0x5a, 0xd5, 0x94, 0x06,
	0x08, 0xdd, 0x86, 0x5a, 0xd6, 0x7e, 0xc6, 0x71, 0xab, 0x43, 0xe1, 0xf4, 0x30, 0xfe, 0x9d, 0x7b,
	0x8c, 0x9e, 0x65, 0x32, 0x16, 0xea, 0x93, 0xf6, 0x91, 0x3c, 0xc3, 0xc0, 0xba, 0x33, 0x96, 0xc9,
	0xb8, 0x6d, 0x46, 0xbd, 0x92, 0x67, 0x18, 0x4d, 0x32, 0xdb, 0x4f, 0x74, 0xc6, 0xf9, 0x11, 0x47,
	0x93, 0x4c, 0x7b, 0x8a, 0xee, 0xda, 0x3e, 0x82, 0x85, 0xb4, 0xaf, 0x88, 0xf4, 0x29, 0xad, 0x7b,
	0xba, 0xb7, 0x88, 0xee, 0xb5, 0x1e, 0xc9, 0x41, 0x3f, 0x6e, 0x05, 0x5d, 0x59, 0x5d, 0x19, 0x92,
	0x91, 0xb1, 0xc2, 0xbb, 0x84, 0x7e, 0x76, 0xfd, 0xc8, 0xce, 0x01, 0xec, 0xd7, 0xfe, 0x91, 0x1f,
	0x9c, 0xf8, 0xd6, 0x6c, 0x37, 0x03, 0x1d, 0x0e, 0xe5, 0xf6, 0xf1, 0x88, 0x50, 0x6e, 0xef, 0x82,
	0x91, 0x21, 0x0a, 0x83, 0xbe, 0xef, 0x54, 0x3f, 0x21, 0x07, 0xef, 0x14, 0x6e, 0x29, 0x30, 0xc6,
	0xb0, 0x08, 0x25, 0x77, 0x8f, 0xde, 0xd9, 0x3f, 0xe5, 0x18, 0x16, 0x21, 0x5a, 0x15, 0x36, 0xf4,
	0x06, 0xff, 0x23, 0x98, 0xc1, 0x68, 0x93, 0x32, 0xaa, 0xfe, 0x18, 0xc7, 0xcd, 0xad, 0xb1, 0x9d,
	0x88, 0x41, 0x29, 0x35, 0x75, 0xed, 0x9f, 0xae, 0x69, 0x99, 0xf8, 0xa2, 0x6b, 0xe9, 0x18, 0x0c,
	0x11, 0xbd, 0xd4, 0x22, 0x2f, 0x48, 0x62, 0x83, 0x10, 0x48, 0x5f, 0x1f, 0x1e, 0x19, 0xb6, 0xc3,
	0xbc, 0x01, 0x78, 0x7f, 0xd3, 0xfe, 0x88, 0x8e, 0xb0, 0xf0, 0x04, 0x17, 0x0f, 0x11, 0x3f, 0x4a,
	0x50, 0x4f, 0x51, 0x7f, 0xcd, 0xa0, 0x9e, 0x26, 0xa8, 0x15, 0xf2, 0xf8, 0x4a, 0x51, 0x2b, 0x09,
	0xea, 0xe3, 0x4c, 0x80, 0x0c, 0x44, 0x7d, 0x9c, 0xa0, 0x3e, 0x41, 0xdd, 0x35, 0x83, 0xfa, 0x24,
	0x41, 0x7d, 0x8a, 0x0a, 0x67, 0x06, 0xf5, 0x69, 0x82, 0xfa, 0x0c, 0x63, 0x6e, 0x67, 0x50, 0x9f,
	0x25, 0xa8, 0x1f, 0x61, 0xe4, 0xe3, 0x0c, 0xea, 0x47, 0x09, 0xea, 0x73, 0x0c, 0x6d, 0x9c, 0x41,
	0x7d, 0x9e, 0xa0, 0x7e, 0x5c, 0xdd, 0xca, 0xa3, 0x7e, 0x6c, 0xfe, 0x04, 0x6a, 0xf2, 0xb4, 0x27,
	0x5b, 0x78, 0x71, 0x91, 0xf6, 0x00, 0x3f, 0x0e, 0xdd, 0x03, 0x34, 0x98, 0xa1, 0x7c, 0x53, 0xb4,
	0xaa, 0x9a, 0x82, 0xf6, 0x82, 0x14, 0x8f, 0x31, 0xea, 0x5a, 0xc2, 0x93, 0x8e, 0x9a, 0x42, 0xa1,
	0xdb, 0x62, 0x2f, 0xfc, 0x59, 0x02, 0x6e, 0x23, 0x0c, 0xe3, 0x71, 0xf0, 0x45, 0x50, 0xba, 0x18,
	0xc8, 0xd6, 0x50, 0x0d, 0xd4, 0x17, 0x03, 0xe9, 0x36, 0x7a, 0x47, 0xa9, 0x8c, 0x28, 0x10, 0x2d,
	0x5a, 0xa0, 0x40, 0xeb, 0x08, 0x41, 0xe1, 0xae, 0xcb, 0x86, 0x00, 0x0a, 0xbb, 0x3b, 0xd3, 0xed,
	0x92, 0xb2, 0x93, 0x1c, 0x59, 0xcc, 0x8f, 0x3e, 0xb2, 0x58, 0x18, 0x77, 0x64, 0x61, 0xe4, 0xc3,
	0xa8, 0xdd, 0x87, 0x39, 0x8e, 0x5d, 0xce, 0xf2, 0xdf, 0x62, 0x72, 0x88, 0x78, 0x9c, 0x88, 0x89,
	0xfa, 0xa4, 0xdb, 0xcc, 0x9c, 0x74, 0xe7, 0x42, 0xaa, 0x2d, 0x8d, 0x0d, 0xa9, 0x76, 0x25, 0x17,
	0x52, 0x6d, 0xd0, 0x4f, 0xfb, 0xea, 0x05, 0x7e, 0xda, 0xd7, 0x06, 0xfc, 0xb4, 0x6f, 0x01, 0x64,
	0x42, 0x34, 0x5d, 0xe7, 0xd3, 0xcc, 0x24, 0x36, 0xd3, 0x9f, 0x85, 0xe3, 0xfd, 0xa0, 0xb7, 0x79,
	0x6d, 0xd8, 0xdb, 0x7c, 0xb4, 0x27, 0xfd, 0x03, 0x98, 0xa7, 0x70, 0xd1, 0x14, 0x56, 0x5e, 0xfa,
	0x2c, 0x51, 0xcc, 0x2a, 0xe8, 0x16, 0x46, 0x90, 0x97, 0x7e, 0x66, 0x0e, 0xa3, 0x10, 0x76, 0x8b,
	0x0e, 0xeb, 0x08, 0x84, 0x22, 0xd8, 0x0a, 0x5c, 0xd5, 0xd1, 0xa8, 0xf4, 0x7d, 0x26, 0x32, 0x6b,
	0x90, 0x63, 0xfd, 0x12, 0x23, 0xd9, 0x8d, 0x99, 0xac, 0x1a, 0xef, 0x82, 0x71, 0x28, 0x25, 0x46,
	0x57, 0x73, 0x64, 0x8c, 0xc3, 0x16, 0x9d, 0xe8, 0x4b, 0xd6, 0x02, 0xc3, 0x37, 0x18, 0x4c, 0x9b,
	0xa1, 0x08, 0x31, 0x52, 0xae, 0x7f, 0xa4, 0x1d, 0xe5, 0x09, 0x84, 0x83, 0xf2, 0x33, 0xb8, 0x9e,
	0x21, 0xb0, 0xfb, 0x7e, 0x4b, 0x86, 0xb1, 0x70, 0xfd, 0xf8, 0x8c, 0x77, 0xfb, 0xab, 0x29, 0xf1,
	0xeb, 0x14, 0xa9, 0xf8, 0x06, 0x19, 0xf4, 0xc0, 0x7e, 0x80, 0xc7, 0xe6, 0x57, 0xc3, 0x3c, 0x07,
	0x8f, 0xf1, 0x47, 0x80, 0x7e, 0xd2, 0x28, 0x96, 0xb3, 0x9f, 0x05, 0xb9, 0xda, 0xcf, 0x29, 0xb0,
	0x5a, 0x18, 0x13, 0x47, 0x8c, 0x24, 0x3a, 0xce, 0xa3, 0x7c, 0x74, 0x9c, 0xf7, 0xc1, 0xe4, 0x19,
	0x99, 0xed, 0xfd, 0xcf, 0x38, 0x80, 0x17, 0x62, 0x5e, 0xa6, 0x63, 0x60, 0x19, 0x96, 0x98, 0x3a,
	0x37, 0x14, 0x7e, 0xc4, 0x31, 0x29, 0x11, 0xd5, 0xcc, 0x0c, 0x88, 0x94, 0x3e, 0x37, 0x2e, 0x3e,
	0xcf, 0xd2, 0xbf, 0xcc, 0x8c, 0x8e, 0x7b, 0xc0, 0x4b, 0x01, 0x07, 0xf6, 0xa2, 0x9b, 0x01, 0x15,
	0x82, 0x51, 0x60, 0xaf, 0x74, 0x09, 0xe1, 0xd9, 0xfa, 0x38, 0xbb, 0x84, 0x6c, 0xd0, 0x9c, 0x7d,
	0x08, 0xf3, 0x4c, 0xa4, 0xa7, 0xee, 0xbb, 0x74, 0xdd, 0x87, 0xa0, 0xab, 0x3c, 0x81, 0x9f, 0xc0,
	0x62, 0xcb, 0x13, 0x6e, 0x57, 0x3a, 0xf6, 0xa1, 0x08, 0xbb, 0x74, 0xae, 0x4d, 0x31, 0xf6, 0x17,
	0x18, 0xf1, 0x5c, 0x84, 0x5d, 0x1d, 0x6d, 0x2d, 0x1b, 0xe9, 0xac, 0xfa, 0x1e, 0x9b, 0x34, 0xd3,
	0x18, 0x67, 0x78, 0x31, 0x9a, 0xb3, 0xe3, 0x19, 0xfc, 0x3e, 0x5f, 0x8c, 0x26, 0xe8, 0x06, 0x4d,
	0xe4, 0x0c, 0x59, 0xd7, 0xc5, 0xbb, 0xfc, 0x1f, 0xe4, 0xc8, 0xb6, 0x11, 0xa8, 0xd6, 0x01, 0x46,
	0x93, 0x2c, 0xc2, 0x29, 0x73, 0x17, 0x0c, 0x3d, 0xb8, 0x39, 0x58, 0xa2, 0xf6, 0xb4, 0x7f, 0x30,
	0x3a, 0x82, 0x59, 0x3e, 0xa2, 0xa6, 0xb5, 0x20, 0x72, 0xe9, 0xc8, 0x94, 0x50, 0x13, 0x49, 0x24,
	0x2f, 0xbb, 0xef, 0xbb, 0x71, 0x64, 0xbb, 0x3a, 0x98, 0x57, 0xf5, 0xa3, 0x61, 0x0d, 0xff, 0x9c,
	0xd8, 0x5f, 0x56, 0x55, 0xe4, 0x10, 0x51, 0x1a, 0x15, 0x6c, 0x0b, 0x16, 0xf2, 0x41, 0xbc, 0xf4,
	0x66, 0x7f, 0x7f, 0x74, 0xb1, 0x73, 0x21, 0xc0, 0xac, 0xf9, 0x5c, 0xa8, 0x2f, 0xd4, 0xdd, 0x7b,
	0x61, 0x40, 0x0b, 0xc1, 0x4b, 0x72, 0x35, 0xeb, 0x85, 0x81, 0xbe, 0xf3, 0x19, 0x4a, 0xe1, 0x11,
	0x6e, 0x93, 0x6c, 0xda, 0x0a, 0x80, 0xc8, 0x37, 0x23, 0x04, 0xc7, 0x95, 0x71, 0x97, 0x5d, 0xb3,
	0x66, 0x83, 0x8b, 0xe4, 0xc7, 0xcf, 0xa1, 0x2a, 0x5a, 0x18, 0xf2, 0x3f, 0x1b, 0xbd, 0x85, 0x82,
	0xa6, 0x7e, 0x8c, 0xeb, 0xc9, 0x35, 0xc2, 0x67, 0x62, 0xb8, 0x50, 0xfc, 0xd4, 0x9c, 0x6f, 0xd3,
	0x27, 0x03, 0xbe, 0x4d, 0x0f, 0x61, 0xfe, 0x20, 0x88, 0x6d, 0xc7, 0x3d, 0x3c, 0x74, 0x5b, 0x7d,
	0x2f, 0x3e, 0xe3, 0xa7, 0x51, 0xe6, 0x0e, 0x82, 0x78, 0x23, 0x01, 0xa6, 0x2b, 0x81, 0xdb, 0x3a,
	0xb2, 0x83, 0xd0, 0x91, 0x61, 0xf5, 0x67, 0x99, 0x95, 0xc0, 0x6d, 0x1d, 0xed, 0x2a, 0x20, 0xde,
	0x91, 0xc0, 0x08, 0x13, 0x02, 0xf7, 0x56, 0x27, 0xe8, 0x4a, 0xa7, 0xfa, 0x73, 0xbe, 0x23, 0x21,
	0xc3, 0xe0, 0x8d, 0x88, 0x2c, 0x06, 0x9b, 0x3f, 0x87, 0x5b, 0x09, 0x2d, 0xbe, 0x4e, 0xc3, 0x15,
	0x6b, 0xb7, 0xf9, 0xbc, 0xa0, 0x81, 0x7c, 0x37, 0x98, 0x6f, 0x23, 0x88, 0x05, 0xd5, 0x4d, 0x13,
	0x98, 0x2d, 0xb8, 0x92, 0x59, 0x55, 0x30, 0x78, 0xb7, 0x7b, 0x2c, 0x9d, 0xea, 0xfa, 0xb8, 0xfb,
	0xb1, 0xb9, 0x06, 0x4f, 0xd7, 0x1d, 0x8b, 0x19, 0x2d, 0xb3, 0x33, 0x04, 0x33, 0x7f, 0xc5, 0x55,
	0xe2, 0x8f, 0x38, 0x52, 0x78, 0x71, 0x75, 0xf7, 0x87, 0x7e, 0x61, 0x21, 0xfd, 0xc2, 0x86, 0xca,
	0x89, 0x8e, 0x32, 0x30, 0x26, 0x9a, 0xca, 0xda, 0xe1, 0xb7, 0x0c, 0x2a, 0x0c, 0xdb, 0x90, 0xc2,
	0x51, 0x4a, 0xb7, 0x8e, 0x0f, 0x1a, 0xdb, 0x71, 0x40, 0x0b, 0x13, 0x3f, 0x5c, 0xb0, 0xc0, 0xe1,
	0x41, 0xe3, 0x66, 0x80, 0x6b, 0x13, 0x3e, 0x78, 0x22, 0xfc, 0xcc, 0xf9, 0x2d, 0x2b, 0x1c, 0xaf,
	0xf8, 0xc1, 0x13, 0xe1, 0xa7, 0xe7, 0xb7, 0xa4, 0x78, 0xdc, 0x83, 0xd9, 0x4c, 0x2c, 0xd5, 0xa8,
	0xba, 0xcd, 0xf7, 0x0d, 0x93, 0x38, 0xaa, 0x91, 0xf9, 0x1e, 0x2c, 0x06, 0xfd, 0xb8, 0x17, 0xa0,
	0xcb, 0x9e, 0xe8, 0x61, 0x3c, 0xeb, 0xea, 0x0e, 0x2d, 0xe2, 0x1a, 0xb1, 0xce, 0x70, 0x73, 0x37,
	0xef, 0xfc, 0xb9, 0x87, 0xea, 0xc3, 0xb5, 0x41, 0xb5, 0x7c, 0xdd, 0x6e, 0x36, 0x56, 0xb7, 0x9f,
	0x5d, 0xcb, 0xa6, 0xec, 0x17, 0xbb, 0xbb, 0x1b, 0xf6, 0x8b, 0xd7, 0xdf, 0xec, 0xe7, 0x9c, 0x45,
	0xb5, 0x6f, 0x27, 0x4a, 0xd6, 0x5f, 0x71, 0x58, 0x17, 0xa5, 0xaf, 0x78, 0x41, 0x5c, 0x6b, 0xc0,
	0x7c, 0x7e, 0xe6, 0x28, 0x72, 0x1c, 0x4e, 0x19, 0x5f, 0xbb, 0x92, 0x02, 0xe8, 0xbb, 0xcd, 0x14,
	0x6d, 0x19, 0x45, 0xf4, 0x92, 0xc5, 0xa9, 0xda, 0x7f, 0x52, 0x00, 0x73, 0xb8, 0xbb, 0x58, 0x56,
	0xb4, 0x43, 0xe9, 0xf4, 0xe9, 0x30, 0xbc, 0x90, 0xc8, 0x8a, 0x96, 0x86, 0x61, 0xb8, 0xae, 0x00,
	0x9f, 0x81, 0xd0, 0x54, 0x45, 0x7d, 0x0a, 0x1f, 0xc5, 0x29, 0x99, 0x03, 0x15, 0x1e, 0x43, 0x19,
	0x07, 0x8e, 0x0f, 0x2e, 0x3d, 0x84, 0xf0, 0xc0, 0xe8, 0xca, 0xcb, 0x86, 0xb5, 0x6b, 0x6f, 0xac,
	0x6e, 0xaf, 0xbe, 0x68, 0xd8, 0x7b, 0x2f, 0xbf, 0xd9, 0xdf, 0x5c, 0x5f, 0xdd, 0xb2, 0xc0, 0x49,
	0x28, 0xea, 0xdf, 0xc0, 0x7c, 0x9e, 0xc7, 0xac, 0xc2, 0x48, 0x2e, 0xe3, 0x2d, 0xf3, 0x3a, 0x2c,
	0x65, 0x31, 0xdb, 0xab, 0x2f, 0x10, 0x81, 0x01, 0x16, 0x72, 0x2c, 0xaf, 0xad, 0x86, 0x51, 0xac,
	0x6d, 0xc0, 0x42, 0x46, 0xaf, 0xbe, 0x4c, 0x40, 0xb8, 0x11, 0x0e, 0x2c, 0xb5, 0x3f, 0x2a, 0xe4,
	0xae, 0xf9, 0xb0, 0x2a, 0xce, 0xd1, 0x46, 0xfd, 0x38, 0x54, 0x92, 0x86, 0xa3, 0x8f, 0xf8, 0x2b,
	0x0c, 0x5b, 0x0f, 0x1c, 0x0c, 0x15, 0xed, 0xc8, 0x74, 0xd5, 0x2b, 0xb2, 0xad, 0x21, 0x05, 0x99,
	0x4d, 0x58, 0xcc, 0x5a, 0x0b, 0x28, 0x06, 0xdc, 0xc4, 0x28, 0x1b, 0xf2, 0x48, 0x53, 0x01, 0x86,
	0x7b, 0x33, 0x0e, 0xf2, 0x00, 0x92, 0xc3, 0x85, 0xdf, 0xee, 0xab, 0xae, 0xc3, 0xb2, 0x91, 0x1b,
	0xd7, 0xac, 0x06, 0xaa, 0xc2, 0xd5, 0xfe, 0x9b, 0x02, 0x4c, 0xa1, 0xf6, 0x78, 0x51, 0x9b, 0xdc,
	0x02, 0xa0, 0xe7, 0x10, 0x32, 0x2d, 0x53, 0x46, 0x08, 0x6e, 0x20, 0x83, 0xaf, 0x25, 0x4c, 0x0c,
	0xbf, 0x96, 0x90, 0xe4, 0x90, 0xf1, 0xe3, 0xa5, 0x1c, 0x70, 0x88, 0x3f, 0x80, 0x79, 0x42, 0x27,
	0x32, 0xd9, 0x14, 0x19, 0xff, 0x10, 0xba, 0xc7, 0x82, 0xd9, 0x63, 0x30, 0xdc, 0xc8, 0xd6, 0x16,
	0x07, 0x44, 0xa1, 0x2a, 0x59, 0xb2, 0xe6, 0xdd, 0x68, 0x8f, 0xc0, 0x58, 0x9f, 0xda, 0x57, 0x43,
	0x33, 0x4c, 0x7d, 0x21, 0xb3, 0xc9, 0x25, 0xc7, 0x17, 0xb3, 0xe9, 0x9e, 0xa5, 0xfd, 0x3a, 0x7b,
	0xd9, 0x6a, 0xce, 0x74, 0x45, 0x4f, 0x55, 0xb2, 0xbe, 0x07, 0x95, 0x8c, 0x75, 0x4b, 0x0d, 0xb7,
	0x41, 0xfb, 0x16, 0x8d, 0x4e, 0x86, 0xee, 0xec, 0x36, 0x6d, 0xab, 0xb1, 0xbe, 0x6b, 0x6d, 0x34,
	0x36, 0x8c, 0x82, 0x69, 0xc2, 0x3c, 0x23, 0x1a, 0xbf, 0xd8, 0xdb, 0xb4, 0x1a, 0x1b, 0x46, 0xb1,
	0xfe, 0x87, 0x05, 0x98, 0xc7, 0x33, 0xe3, 0x24, 0xd4, 0xde, 0x45, 0xfd, 0xf0, 0x25, 0xcc, 0x61,
	0x58, 0xa6, 0x6e, 0xe0, 0xe0, 0x71, 0x16, 0x9f, 0x35, 0x0c, 0x84, 0x7a, 0x4a, 0xf3, 0xc3, 0x90,
	0x5b, 0xdb, 0x4c, 0x6c, 0xcd, 0x46, 0x99, 0x54, 0xed, 0x73, 0x98, 0xcd, 0x62, 0x31, 0x42, 0x41,
	0x2c, 0x62, 0xed, 0x33, 0x9b, 0x8f, 0xd0, 0x5d, 0xcc, 0xf8, 0x99, 0xd5, 0xff, 0xee, 0x34, 0xd4,
	0xf4, 0x78, 0x7c, 0x2e, 0xfc, 0x58, 0x44, 0x67, 0xf4, 0x49, 0xba, 0xf0, 0x31, 0x32, 0x52, 0x67,
	0x61, 0x74, 0xa4, 0xce, 0x73, 0xfc, 0x68, 0xdf, 0x81, 0x05, 0x42, 0x0d, 0xc6, 0xf1, 0x9b, 0x47,
	0xf0, 0x7a, 0x12, 0xf5, 0x27, 0xe3, 0x97, 0x3f, 0x39, 0xe8, 0x97, 0x9f, 0x9e, 0xd7, 0x4c, 0x0d,
	0x9c, 0xd7, 0x5c, 0x81, 0x29, 0x47, 0x7a, 0xe2, 0x4c, 0xbb, 0x89, 0x63, 0x22, 0x6f, 0xf8, 0x9b,
	0x39, 0xdf, 0xf0, 0x57, 0x1a, 0x32, 0xfc, 0x25, 0x4a, 0x34, 0x8c, 0x56, 0xa2, 0x2b, 0x39, 0x25,
	0x7a, 0x1e, 0x8a, 0x2d, 0x1d, 0x49, 0xa8, 0xd8, 0x8a, 0xb4, 0x67, 0x21, 0x79, 0x7b, 0xa3, 0x67,
	0xe1, 0x1d, 0x20, 0x55, 0xd2, 0xce, 0xaa, 0xe6, 0x80, 0x20, 0x12, 0xfc, 0xef, 0xc1, 0x2c, 0xc7,
	0x32, 0x26, 0x0a, 0x7e, 0x4f, 0x8e, 0x60, 0x44, 0xf2, 0x23, 0xb8, 0xae, 0x9a, 0xe3, 0xd0, 0x6d,
	0x77, 0x06, 0x1e, 0xd0, 0x41, 0xd5, 0xbd, 0x68, 0x5d, 0x4b, 0xd0, 0xb9, 0x77, 0x73, 0x86, 0x62,
	0x0e, 0x2f, 0x0e, 0xc7, 0x1c, 0x1e, 0x8a, 0x5d, 0x6c, 0x8e, 0x88, 0x5d, 0x7c, 0x1f, 0xe6, 0x70,
	0x8f, 0xb6, 0xdb, 0xa1, 0x38, 0x38, 0x90, 0x3a, 0x7c, 0xf6, 0x2c, 0x02, 0x5f, 0x10, 0x4c, 0xd5,
	0x34, 0x73, 0xea, 0xc3, 0x5a, 0x3e, 0xa4, 0x07, 0x3e, 0x74, 0xe1, 0xa8, 0xef, 0x47, 0xa8, 0xe2,
	0x17, 0x2d, 0x4a, 0xe0, 0x63, 0x08, 0xdd, 0xe0, 0x48, 0x46, 0xac, 0xd9, 0x73, 0x4a, 0xed, 0x6e,
	0x3a, 0x52, 0x74, 0x1c, 0x1c, 0x49, 0x3f, 0x62, 0xdd, 0x7e, 0x8e, 0xa1, 0x4d, 0x04, 0x62, 0x8c,
	0x7f, 0x3c, 0x91, 0x0b, 0x23, 0x56, 0xee, 0x93, 0xb4, 0x59, 0x85, 0x19, 0x2f, 0x88, 0x31, 0x90,
	0xe5, 0x0d, 0xf6, 0xd3, 0xa7, 0xa4, 0x79, 0x1b, 0x20, 0x0e, 0xc2, 0x2e, 0x8a, 0xf0, 0x11, 0xeb,
	0xf3, 0x19, 0x08, 0x05, 0x16, 0xa7, 0x18, 0xd4, 0xd4, 0x2b, 0x37, 0x75, 0x60, 0x71, 0x04, 0x52,
	0xb7, 0xa8, 0xae, 0x75, 0x63, 0x4f, 0xf2, 0xbd, 0xa8, 0xb7, 0x51, 0x03, 0x05, 0x04, 0xd1, 0xe5,
	0x26, 0x01, 0x77, 0x46, 0xce, 0x31, 0xed, 0xe3, 0x1b, 0x47, 0xe6, 0x17, 0x40, 0x93, 0x25, 0x39,
	0x13, 0x7d, 0x30, 0xbc, 0x5f, 0x0c, 0xcf, 0x4f, 0x4b, 0x33, 0xd5, 0xff, 0x0f, 0x48, 0x03, 0xb8,
	0xae, 0x05, 0xf1, 0x86, 0x3c, 0xe8, 0xb7, 0x71, 0x87, 0xfc, 0x0c, 0x26, 0x0f, 0x82, 0xe4, 0xb6,
	0xd6, 0x88, 0x70, 0x95, 0x59, 0xea, 0xe5, 0xb5, 0x20, 0xb6, 0x90, 0xde, 0xfc, 0x10, 0xae, 0x38,
	0x32, 0x72, 0x43, 0x69, 0xf7, 0xfa, 0x51, 0xc7, 0x46, 0x99, 0x2e, 0x0e, 0xf4, 0xa3, 0x30, 0x8b,
	0x84, 0xdb, 0xeb, 0x47, 0x9d, 0x2d, 0xe1, 0xcb, 0x66, 0xd0, 0x1b, 0xc9, 0xd0, 0x65, 0x6b, 0xe3,
	0x10, 0xc3, 0xb6, 0xeb, 0x8c, 0x64, 0x38, 0x08, 0x62, 0xbe, 0x94, 0x3a, 0xc0, 0xb0, 0x16, 0xc4,
	0xe6, 0xc7, 0x70, 0x8d, 0x19, 0x1c, 0x79, 0x28, 0x7d, 0x27, 0x2d, 0x14, 0x05, 0x38, 0x59, 0x22,
	0xec, 0x06, 0x22, 0x75, 0xb1, 0x46, 0x33, 0x75, 0xf9, 0x48, 0x74, 0x04, 0x93, 0x2a, 0xda, 0x68,
	0x26, 0x55, 0xb8, 0x99, 0xd1, 0x4c, 0xaa, 0x78, 0x69, 0x7d, 0x50, 0xd9, 0x4e, 0x0a, 0x57, 0xca,
	0xd6, 0x47, 0xe9, 0xdb, 0xc3, 0x2d, 0x96, 0x32, 0x74, 0xd9, 0xe3, 0x66, 0x88, 0x21, 0xdf, 0x62,
	0x29, 0x83, 0x2a, 0x14, 0x8c, 0x62, 0x50, 0x45, 0x7a, 0x1f, 0xcc, 0x2c, 0x03, 0xad, 0x25, 0x6c,
	0x94, 0x34, 0x52, 0x72, 0x0b, 0xe1, 0x6a, 0xa6, 0xc9, 0x53, 0xd9, 0xea, 0xa7, 0xaf, 0x09, 0xcd,
	0x92, 0x55, 0x21, 0x81, 0x26, 0x67, 0xb5, 0x7d, 0x5f, 0x6a, 0xa3, 0xe0, 0x1c, 0x45, 0x56, 0x55,
	0x20, 0x32, 0x09, 0xd6, 0xfe, 0x78, 0x0a, 0x26, 0xd4, 0xd7, 0x9f, 0x00, 0xef, 0x11, 0x76, 0x70,
	0xe2, 0x0f, 0xde, 0x9f, 0x9e, 0x23, 0xd4, 0xae, 0xc2, 0xe4, 0x03, 0x85, 0x15, 0x73, 0xe6, 0xe9,
	0xdb, 0x00, 0x19, 0xe5, 0x70, 0x42, 0x1f, 0x82, 0x26, 0x9a, 0xa1, 0x92, 0x90, 0x71, 0x5d, 0xe5,
	0xa7, 0x66, 0x78, 0xdf, 0x98, 0x45, 0xe0, 0x3a, 0xc1, 0x30, 0xda, 0x33, 0x12, 0xe9, 0x68, 0x38,
	0x73, 0x56, 0x09, 0x01, 0xdb, 0xe2, 0x14, 0x8f, 0xce, 0x82, 0x63, 0x69, 0xc7, 0x22, 0x6c, 0xcb,
	0xd8, 0x3e, 0xe5, 0x5d, 0xa4, 0xa2, 0x80, 0x4d, 0x84, 0xfd, 0x62, 0x90, 0xe6, 0x4c, 0xc7, 0xb3,
	0x4b, 0x69, 0xbe, 0x19, 0xa4, 0xf9, 0x0d, 0x6f, 0x2a, 0x19, 0x9a, 0x6f, 0x95, 0xe4, 0xc2, 0x5a,
	0x74, 0x37, 0x7f, 0x31, 0x83, 0xa0, 0xdb, 0xe4, 0xba, 0x30, 0xdc, 0x11, 0x30, 0xaa, 0x23, 0x7e,
	0x0a, 0x53, 0x2a, 0x17, 0x7d, 0x41, 0xe3, 0x9d, 0x8b, 0xe7, 0xf6, 0x32, 0xbe, 0x23, 0x45, 0x5c,
	0xe6, 0x2a, 0x4c, 0x67, 0xdc, 0x71, 0x47, 0xc6, 0x0d, 0x1d, 0xe2, 0x27, 0x5f, 0x5d, 0x8b, 0x19,
	0x6b, 0xff, 0x66, 0x01, 0x26, 0xf1, 0xf8, 0xf2, 0x3a, 0xcc, 0x74, 0xf3, 0x5e, 0x18, 0x5d, 0xaa,
	0x0a, 0x6e, 0x98, 0x6a, 0x9c, 0xf1, 0xc2, 0xc1, 0x29, 0xf3, 0x1d, 0x98, 0xe3, 0x76, 0x92, 0x7e,
	0xec, 0x72, 0xcf, 0xd2, 0xc8, 0x98, 0x25, 0x44, 0x03, 0xe1, 0x78, 0xe7, 0x4e, 0x77, 0x0c, 0x3f,
	0xf3, 0x11, 0x73, 0xa7, 0xa4, 0xa8, 0x33, 0xee, 0x54, 0x46, 0x7d, 0x93, 0x41, 0xfd, 0x46, 0x47,
	0xc9, 0xa5, 0xf4, 0xb7, 0xb5, 0x2f, 0x61, 0x9a, 0x3d, 0x8e, 0x6f, 0x42, 0x59, 0x24, 0xde, 0x64,
	0xda, 0x83, 0x49, 0x3b, 0x91, 0xe1, 0x5b, 0x80, 0xd4, 0x01, 0xc8, 0xc8, 0x22, 0xe4, 0x2c, 0x01,
	0xa9, 0x3f, 0xeb, 0x7d, 0x30, 0x55, 0x53, 0x71, 0xb8, 0xb8, 0xc3, 0xbe, 0x77, 0x7e, 0xfc, 0xcb,
	0x3b, 0x50, 0x39, 0x71, 0x7d, 0xbb, 0x27, 0xc3, 0x96, 0xe4, 0x00, 0xee, 0x45, 0x0b, 0x4e, 0x5c,
	0x7f, 0x8f, 0x20, 0x18, 0x13, 0x36, 0xf0, 0xdb, 0x32, 0x8a, 0xf5, 0xa3, 0x9f, 0x13, 0x1c, 0x13,
	0x96, 0xa0, 0xf4, 0xdc, 0x67, 0xfd, 0xdf, 0x9e, 0xa0, 0xd0, 0xc5, 0xf4, 0x22, 0x18, 0xee, 0x22,
	0xb8, 0xd6, 0x9f, 0xe3, 0xd0, 0xf3, 0x72, 0xf0, 0x5e, 0xc5, 0x0f, 0x3e, 0xa9, 0x4e, 0x04, 0xa3,
	0x89, 0xd1, 0x82, 0xd1, 0xe4, 0xb8, 0xd3, 0x85, 0xa9, 0xfc, 0xe9, 0x42, 0xd6, 0x23, 0x66, 0x7a,
	0xc0, 0x23, 0x66, 0xe0, 0x34, 0x6b, 0x66, 0xe8, 0x34, 0x6b, 0xe8, 0x90, 0xb0, 0xf4, 0x67, 0x72,
	0x48, 0x98, 0xbb, 0x60, 0x53, 0x1e, 0xbc, 0xef, 0x95, 0xf7, 0x22, 0x81, 0x41, 0x2f, 0x92, 0x81,
	0x4b, 0xa7, 0x95, 0xc1, 0x4b, 0xa7, 0xf5, 0x7f, 0xa2, 0x48, 0x5e, 0x41, 0xf4, 0xa0, 0x82, 0xdb,
	0x8b, 0xcc, 0x4f, 0x61, 0x32, 0x76, 0x7b, 0xda, 0xcd, 0xe8, 0x5e, 0x7e, 0x02, 0x26, 0x64, 0xcb,
	0xda, 0xcd, 0xac, 0x67, 0x21, 0x79, 0xed, 0x6f, 0x16, 0xb4, 0x3b, 0x5b, 0xd3, 0xed, 0x29, 0x19,
	0x3d, 0x0a, 0xfa, 0x61, 0x4b, 0x8e, 0x90, 0xd1, 0x09, 0x91, 0x8b, 0xa6, 0xcf, 0xf3, 0x62, 0x38,
	0xf2, 0x3e, 0x21, 0x56, 0xb3, 0x8a, 0x62, 0xec, 0xf6, 0x6c, 0xd1, 0x45, 0xc3, 0x7b, 0x72, 0xfb,
	0xad, 0xb7, 0x8a, 0x80, 0x5c, 0xdc, 0xc8, 0xc9, 0xef, 0x17, 0x37, 0xb2, 0xfe, 0xf7, 0x2a, 0xa9,
	0xb4, 0x82, 0xd5, 0xdc, 0x76, 0x7d, 0xb7, 0x2b, 0xbc, 0xf3, 0x46, 0x70, 0xfe, 0x76, 0x4f, 0x31,
	0xe3, 0x26, 0x85, 0x8b, 0xe1, 0x79, 0x0e, 0x56, 0xb9, 0xc1, 0x3f, 0xf9, 0xa7, 0x19, 0xfc, 0x3f,
	0x1b, 0xbc, 0x72, 0xfb, 0x70, 0x8c, 0x5a, 0xcf, 0x15, 0x1a, 0xf2, 0xc9, 0xfa, 0x39, 0xcc, 0xf0,
	0xfb, 0x96, 0x1c, 0x6c, 0xf8, 0xd1, 0x05, 0x19, 0x34, 0xf9, 0x35, 0x4c, 0xcd, 0xf6, 0xff, 0xd5,
	0xd0, 0x57, 0xa2, 0x3d, 0x1f, 0xe6, 0xd3, 0xe1, 0x3c, 0x6f, 0x4c, 0x0c, 0xa4, 0xb3, 0xf9, 0x5b,
	0x80, 0xfe, 0x47, 0x4c, 0xc1, 0x33, 0x40, 0x41, 0x12, 0x74, 0x66, 0x82, 0x54, 0x06, 0x26, 0x48,
	0xed, 0x3f, 0x2c, 0x5e, 0xf6, 0x34, 0x7b, 0xac, 0x34, 0xf0, 0x67, 0xb5, 0xf8, 0x24, 0x97, 0x66,
	0xa7, 0x33, 0x97, 0x66, 0x2f, 0x5e, 0x76, 0xb2, 0x56, 0xf9, 0x52, 0xde, 0x2a, 0x9f, 0x1c, 0xfc,
	0x95, 0xb3, 0x07, 0x7f, 0x03, 0xb6, 0x48, 0xf8, 0xd3, 0xda, 0x22, 0x6b, 0xff, 0xee, 0x14, 0xcc,
	0xf0, 0x90, 0x38, 0xdf, 0x87, 0xf1, 0x42, 0x05, 0x37, 0x25, 0x40, 0x37, 0xc9, 0x72, 0x96, 0x00,
	0xbd, 0xff, 0x57, 0xe1, 0xd6, 0x89, 0x94, 0x47, 0x4a, 0xfc, 0xd5, 0x6f, 0xb7, 0xe6, 0x3d, 0x28,
	0xa8, 0xff, 0x6b, 0x4c, 0xc4, 0xa5, 0x6a, 0x66, 0xfd, 0x29, 0x9e, 0xc3, 0xdd, 0xc1, 0x2c, 0x22,
	0x74, 0x0d, 0xb7, 0xd3, 0x38, 0xd9, 0x34, 0x4c, 0xde, 0xce, 0xe7, 0x42, 0x0e, 0xe4, 0x4d, 0x1d,
	0x3b, 0xfb, 0x73, 0xa8, 0x0e, 0xe6, 0xa3, 0xdf, 0xd7, 0x63, 0xa5, 0xfb, 0x5a, 0x9e, 0x7f, 0x83,
	0xb1, 0xe6, 0x4f, 0xe1, 0xe6, 0x50, 0x09, 0x32, 0x4f, 0xfe, 0x91, 0x0f, 0x79, 0x75, 0xe0, 0xe3,
	0xe9, 0x03, 0x80, 0x23, 0x9c, 0xf5, 0x8a, 0xa3, 0x9c, 0xf5, 0x46, 0xba, 0xdb, 0x4d, 0x8c, 0x76,
	0xb7, 0x1b, 0xe9, 0x48, 0x47, 0x21, 0x03, 0x86, 0x1c, 0xe9, 0xc6, 0xba, 0xc8, 0xcd, 0x8f, 0x75,
	0x91, 0x1b, 0xf4, 0x1b, 0x9c, 0x1a, 0xf2, 0x1b, 0x1c, 0xf6, 0xf7, 0x9b, 0x1e, 0xe1, 0xef, 0x37,
	0xec, 0xc3, 0x37, 0x83, 0x65, 0xcc, 0xfb, 0xf0, 0x8d, 0x76, 0xc8, 0x5b, 0x18, 0xe9, 0x90, 0x57,
	0xff, 0x86, 0xc4, 0x96, 0xf5, 0xc0, 0x8f, 0xfa, 0x5d, 0x71, 0xe0, 0xc9, 0xd7, 0x91, 0x20, 0x57,
	0x06, 0x74, 0xc7, 0x70, 0xa4, 0x7e, 0xf8, 0x06, 0x03, 0x8c, 0x6f, 0xc8, 0x43, 0xf3, 0x1d, 0x58,
	0xf8, 0xae, 0x2f, 0x50, 0x12, 0xd4, 0x27, 0xc6, 0x14, 0xe4, 0x69, 0x5e, 0x83, 0xe9, 0xa8, 0xb8,
	0xfe, 0xf7, 0xd9, 0xb9, 0x9a, 0xde, 0x9f, 0x19, 0xf8, 0xc0, 0x21, 0x5c, 0xd7, 0xaf, 0x63, 0x24,
	0x98, 0xc8, 0xee, 0x47, 0xd2, 0x19, 0x7d, 0x7d, 0x67, 0x54, 0x26, 0xbc, 0x92, 0xe3, 0x6f, 0xeb,
	0x2a, 0xbf, 0xa8, 0x91, 0xe6, 0xf6, 0x3a, 0x92, 0x4e, 0xed, 0x18, 0x2a, 0x19, 0xaa, 0x8b, 0x16,
	0xb9, 0x97, 0x60, 0x0c, 0x15, 0xa7, 0x38, 0xca, 0x3d, 0x68, 0xa0, 0x24, 0xd6, 0x42, 0x2b, 0xff,
	0xdd, 0xfa, 0xff, 0x52, 0x20, 0x23, 0x1e, 0x96, 0x1b, 0x77, 0xde, 0x55, 0xbe, 0x05, 0x25, 0xe8,
	0xe9, 0x5a, 0x56, 0xb6, 0xe8, 0x8e, 0x9e, 0xb6, 0x05, 0x3c, 0x1d, 0x51, 0xe9, 0x21, 0x66, 0xae,
	0x36, 0x25, 0xac, 0xd9, 0x5e, 0x26, 0x55, 0x3b, 0x81, 0xd9, 0x2c, 0xf6, 0xe2, 0xfa, 0x2e, 0x90,
	0xf0, 0x1c, 0x51, 0x39, 0xd0, 0x08, 0x38, 0xe4, 0xe7, 0x18, 0xb5, 0xf7, 0xa4, 0xef, 0xb8, 0x7e,
	0x9b, 0x8a, 0x72, 0x22, 0x42, 0xc7, 0x9a, 0x67, 0xbe, 0x17, 0xc4, 0x56, 0xff, 0x6b, 0x05, 0x7a,
	0x5d, 0x26, 0x35, 0x0b, 0xbf, 0xe9, 0xb8, 0xb1, 0xc4, 0xe8, 0x6f, 0x55, 0x98, 0xc9, 0x5f, 0x50,
	0xd6, 0x49, 0xf3, 0x13, 0xb8, 0x96, 0x0d, 0xa7, 0x6c, 0x9f, 0x68, 0x1e, 0x7e, 0x1f, 0xe6, 0x4a,
	0x6a, 0x3d, 0x8e, 0xd2, 0xfc, 0xde, 0x83, 0x45, 0x7e, 0xf8, 0x38, 0xc3, 0x40, 0xc6, 0x4b, 0x83,
	0x11, 0x09, 0x71, 0xfd, 0x6f, 0x14, 0xe9, 0x8a, 0xf8, 0x88, 0x82, 0x3d, 0x0f, 0xc2, 0x86, 0xe3,
	0xc6, 0xa6, 0x03, 0x8b, 0x49, 0x3e, 0x4a, 0xf7, 0x41, 0x37, 0xf3, 0xc2, 0xa8, 0x3b, 0xf1, 0xe3,
	0x33, 0x59, 0x4e, 0x00, 0x0d, 0x3f, 0x0e, 0xcf, 0x2c, 0xe3, 0x24, 0x9b, 0x76, 0x65, 0x54, 0xfb,
	0x6d, 0x01, 0xe6, 0xf3, 0x44, 0x97, 0x34, 0x9a, 0x7f, 0x07, 0x0b, 0x69, 0xf1, 0xc8, 0x4d, 0xb4,
	0x38, 0xe8, 0x26, 0xda, 0x18, 0x51, 0x32, 0x72, 0x13, 0xbd, 0xbf, 0xfe, 0x7a, 0xbf, 0xb9, 0xbb,
	0x8d, 0xe2, 0x93, 0xfd, 0xe6, 0xe5, 0x66, 0xb3, 0xb1, 0xb5, 0xb9, 0xdf, 0xb4, 0xf7, 0x9b, 0xab,
	0xcd, 0x86, 0xfd, 0x7a, 0xe7, 0xd5, 0xce, 0xee, 0x9b, 0x1d, 0x6b, 0xfe, 0x24, 0xc7, 0x54, 0xff,
	0x1f, 0x0a, 0x74, 0xdd, 0x8e, 0x45, 0xa5, 0xcb, 0xeb, 0x34, 0x43, 0xd7, 0xe1, 0x73, 0xd2, 0xfa,
	0x79, 0x02, 0xa1, 0x01, 0x13, 0x27, 0xae, 0xcf, 0x01, 0x7c, 0xd5, 0xcf, 0xac, 0xc4, 0x31, 0x35,
	0x5a, 0xe2, 0x98, 0x1e, 0x2d, 0x71, 0xcc, 0x8c, 0x93, 0x38, 0x4a, 0xf9, 0xfb, 0xdf, 0xeb, 0x70,
	0x35, 0xad, 0x24, 0x56, 0xcf, 0x92, 0xad, 0x20, 0xc4, 0x33, 0x2a, 0x7c, 0x0f, 0x81, 0x6d, 0xf5,
	0xea, 0xb7, 0xca, 0x9e, 0x9f, 0x41, 0x60, 0xf1, 0x87, 0x52, 0xf5, 0xdf, 0xa5, 0x07, 0x5a, 0x87,
	0x5a, 0x8a, 0x85, 0x38, 0x54, 0xaa, 0x58, 0x2c, 0xd4, 0x19, 0x26, 0xe9, 0xd4, 0x03, 0x34, 0xf7,
	0x7c, 0x18, 0x1b, 0xe0, 0xfb, 0x7e, 0x5c, 0x7f, 0x43, 0x4b, 0x68, 0x36, 0x77, 0xfd, 0xf8, 0x01,
	0x85, 0x1b, 0xa6, 0xdf, 0x3a, 0x63, 0x9d, 0xbe, 0x38, 0xe3, 0xdf, 0x4e, 0x92, 0x01, 0x34, 0x9b,
	0xb3, 0xd2, 0x33, 0xba, 0x3d, 0xcf, 0x8d, 0x3a, 0x4a, 0x56, 0x88, 0xcc, 0x3d, 0xe0, 0xf7, 0xcd,
	0xed, 0x5c, 0x05, 0x86, 0xcc, 0x1a, 0x63, 0xeb, 0xae, 0xdf, 0xfd, 0x4e, 0xda, 0x62, 0x0d, 0x66,
	0xe3, 0x20, 0x16, 0x9e, 0x1d, 0x62, 0x43, 0xf3, 0xeb, 0x28, 0x77, 0x46, 0x65, 0x97, 0xe9, 0x0f,
	0xab, 0x82, 0x4c, 0xdc, 0x39, 0xef, 0xa1, 0x97, 0xa7, 0xbe, 0xf9, 0x98, 0xd3, 0xc9, 0x8d, 0x14,
	0x41, 0x6a, 0xb9, 0x5a, 0x60, 0xd0, 0x85, 0x60, 0x98, 0x83, 0xc4, 0xd2, 0x2b, 0x0a, 0xbb, 0x37,
	0xc8, 0xf5, 0x2a, 0xa9, 0x78, 0xd2, 0xc0, 0xf4, 0x18, 0x4a, 0x7d, 0x7c, 0xc5, 0x75, 0xb7, 0xe8,
	0x3a, 0x27, 0xdd, 0xb4, 0x02, 0x57, 0xc9, 0xf6, 0x4e, 0x1d, 0x92, 0x4e, 0x0f, 0x1a, 0xbd, 0x4b,
	0x87, 0xc9, 0xeb, 0x14, 0x49, 0x0c, 0x0c, 0x73, 0x0d, 0x00, 0xfd, 0xd2, 0x28, 0x4c, 0x15, 0x69,
	0x25, 0xf7, 0x2f, 0x68, 0x74, 0x3c, 0xa9, 0x44, 0x27, 0x3f, 0xba, 0xde, 0xf2, 0x12, 0x2a, 0x5c,
	0x89, 0xee, 0x71, 0x8f, 0xc6, 0xfe, 0xf7, 0xe8, 0x39, 0x20, 0xde, 0xed, 0xe3, 0x5e, 0x54, 0xff,
	0x13, 0x7e, 0xb6, 0x80, 0xa8, 0xf1, 0xb1, 0x97, 0x7f, 0x80, 0xc6, 0x4b, 0xbe, 0x2d, 0x27, 0x7e,
	0x48, 0x5b, 0xd6, 0xff, 0x7b, 0x5e, 0x0f, 0x47, 0xd7, 0xfb, 0xf7, 0xd4, 0x20, 0x4b, 0x4e, 0xe4,
	0x32, 0x18, 0xae, 0xfe, 0xbb, 0xe3, 0xbf, 0x36, 0x90, 0x95, 0x96, 0x62, 0x86, 0xbf, 0x40, 0x5e,
	0x2d, 0x83, 0xf9, 0x17, 0x47, 0xb9, 0x11, 0x5d, 0xd0, 0x4d, 0xd6, 0x92, 0xca, 0x6a, 0x00, 0x58,
	0xff, 0x35, 0x7c, 0x84, 0x66, 0x33, 0xbc, 0xa0, 0x43, 0x2f, 0x53, 0xe0, 0xa5, 0xdc, 0xf3, 0xd6,
	0x87, 0x1f, 0xa8, 0x31, 0xd6, 0xff, 0x6e, 0x11, 0x3e, 0xff, 0xbe, 0x1f, 0x4b, 0x5e, 0x9f, 0x38,
	0x1e, 0x78, 0x7d, 0x62, 0x2b, 0x5f, 0xf9, 0x1f, 0x92, 0x27, 0x86, 0x5a, 0xc0, 0x5f, 0xcf, 0x8c,
	0x23, 0x1b, 0x23, 0x65, 0x87, 0xbe, 0xf0, 0xf0, 0x4d, 0x08, 0xfd, 0x2a, 0x85, 0xf9, 0xed, 0xd8,
	0x4e, 0x2e, 0x8e, 0x1a, 0x52, 0xdf, 0xa7, 0x7b, 0xeb, 0x16, 0x94, 0x93, 0x22, 0xf0, 0xe3, 0x33,
	0xb9, 0x42, 0x18, 0x6f, 0x99, 0xf3, 0x00, 0x47, 0xb6, 0xd4, 0x8f, 0x60, 0x14, 0x38, 0xdd, 0x0c,
	0x82, 0xb5, 0x7e, 0x74, 0x66, 0x14, 0xcd, 0x05, 0xa8, 0x1c, 0xd9, 0x72, 0x83, 0xa4, 0x1f, 0xc7,
	0x98, 0xa8, 0x77, 0xf9, 0x66, 0x63, 0xd8, 0x12, 0xbe, 0xf8, 0x3a, 0x88, 0x25, 0x8e, 0x64, 0xf5,
	0x23, 0x1a, 0xda, 0xc0, 0xe7, 0xd2, 0x0d, 0x7c, 0xac, 0x9a, 0x7f, 0x0b, 0xe0, 0x38, 0x40, 0xb7,
	0x80, 0x8c, 0xe9, 0x49, 0x41, 0x68, 0x3f, 0xf9, 0xe3, 0x02, 0x3c, 0xa6, 0xa8, 0x35, 0x71, 0xf0,
	0x62, 0x7d, 0x35, 0x8a, 0x82, 0x96, 0x2b, 0x62, 0xe9, 0x34, 0x4e, 0x7b, 0x5e, 0xe0, 0x66, 0x82,
	0x28, 0x5d, 0xc2, 0x45, 0xe4, 0x29, 0x5c, 0xf5, 0xfb, 0x5d, 0x9b, 0xcf, 0xd1, 0xec, 0x38, 0xb0,
	0xc9, 0x87, 0x95, 0x4b, 0x64, 0xfa, 0xfd, 0xee, 0x36, 0xe1, 0x9a, 0x01, 0xbd, 0xcb, 0x68, 0x7e,
	0x0c, 0xd7, 0xba, 0xae, 0x6f, 0x47, 0x1d, 0x11, 0x4a, 0xc7, 0xce, 0x6e, 0x7d, 0xfc, 0x72, 0x69,
	0xd7, 0xf5, 0xf7, 0x11, 0xb9, 0x9d, 0xec, 0x81, 0x6a, 0x73, 0x50, 0xdf, 0xc9, 0x78, 0x22, 0x6a,
	0x43, 0x12, 0x6f, 0x0e, 0x7e, 0xbf, 0x9b, 0x3a, 0x1d, 0xf2, 0xa5, 0xb3, 0xfa, 0xbf, 0x31, 0x41,
	0x53, 0xe5, 0x32, 0x35, 0xcd, 0xbc, 0x99, 0x92, 0x3c, 0xe5, 0xcf, 0x92, 0xe5, 0xda, 0xe0, 0xab,
	0x29, 0x97, 0xcf, 0x6d, 0x99, 0x61, 0x56, 0x92, 0x67, 0xed, 0x0f, 0x8a, 0x30, 0xc3, 0xd0, 0x8b,
	0x5a, 0xf7, 0x7d, 0x50, 0x0d, 0x88, 0x3b, 0x5b, 0xe0, 0xeb, 0x46, 0xe6, 0xa6, 0x35, 0xfc, 0x7e,
	0x77, 0x1d, 0x11, 0xdc, 0xc0, 0xf8, 0x5a, 0xab, 0x08, 0x3d, 0x57, 0x46, 0x71, 0x8e, 0x25, 0x79,
	0x11, 0x96, 0x91, 0x19, 0x2e, 0x73, 0x19, 0x96, 0x3c, 0x11, 0x0f, 0x71, 0xf0, 0x8b, 0xb0, 0x84,
	0xca, 0xd2, 0xdf, 0x06, 0x68, 0x4b, 0x5f, 0xb2, 0x60, 0xc8, 0xca, 0x71, 0x0a, 0x51, 0x12, 0x5c,
	0x4f, 0x86, 0x51, 0xe0, 0x0b, 0xd6, 0x8a, 0x75, 0xd2, 0x7c, 0x08, 0xf3, 0xc2, 0x0b, 0xa5, 0x70,
	0xce, 0xec, 0x03, 0xe1, 0xfb, 0xd2, 0xe1, 0x87, 0x2b, 0xe6, 0x18, 0xba, 0x86, 0xc0, 0xfa, 0x5f,
	0x9d, 0x00, 0x03, 0x57, 0xc6, 0xbe, 0xe7, 0x35, 0xc5, 0x41, 0x84, 0x1e, 0x2b, 0x9f, 0xea, 0x57,
	0x03, 0x0b, 0x23, 0x35, 0x9e, 0x0c, 0x69, 0xee, 0xc9, 0xc0, 0x2f, 0xa0, 0xf4, 0x6b, 0xd1, 0x3a,
	0xea, 0x05, 0xb1, 0xb6, 0x11, 0xd7, 0xcf, 0xe1, 0xfc, 0x92, 0x48, 0xad, 0x84, 0x07, 0x0d, 0x72,
	0x6a, 0x3b, 0xc2, 0x17, 0xec, 0x92, 0x80, 0x49, 0x22, 0x8a, 0xd7, 0x14, 0xa0, 0xf6, 0xcf, 0x14,
	0xf8, 0x6d, 0xb9, 0x1b, 0x03, 0x6f, 0x00, 0x65, 0x1e, 0x15, 0xbc, 0x01, 0x25, 0x7a, 0x1c, 0x2f,
	0x99, 0xa4, 0x33, 0x98, 0xce, 0x4f, 0xdf, 0x89, 0xc1, 0x77, 0xbe, 0xc4, 0x40, 0x6c, 0x84, 0xf4,
	0x60, 0xa5, 0x06, 0xa5, 0x50, 0x3a, 0x52, 0x76, 0xa5, 0xc3, 0xb1, 0x98, 0x92, 0x74, 0xed, 0x5b,
	0x98, 0xe1, 0x4a, 0xe4, 0xbe, 0x5b, 0xc8, 0x7f, 0x37, 0x97, 0x7d, 0x71, 0x20, 0xfb, 0xb1, 0xcf,
	0xd3, 0xfe, 0x7b, 0x13, 0x74, 0x58, 0x83, 0xaf, 0xd7, 0x6f, 0x84, 0xe2, 0x30, 0xc6, 0x9e, 0x79,
	0x01, 0x95, 0x03, 0xe9, 0xb7, 0x3a, 0x76, 0xb6, 0x7f, 0x06, 0x8c, 0xb2, 0x79, 0x96, 0xe5, 0x35,
	0x45, 0x8f, 0xdd, 0x04, 0x07, 0xfa, 0x67, 0x64, 0x6e, 0x00, 0x44, 0x9d, 0xa0, 0xc7, 0xf9, 0x8c,
	0x74, 0xe6, 0x19, 0xc8, 0x67, 0xbf, 0x13, 0xf4, 0x30, 0x9b, 0x72, 0xc4, 0xbf, 0xd2, 0xeb, 0x14,
	0x13, 0x99, 0xeb, 0x14, 0xb7, 0x00, 0x48, 0x30, 0x69, 0xeb, 0x57, 0x47, 0x94, 0xa2, 0x13, 0xe8,
	0xa7, 0xca, 0x1f, 0xc2, 0xbc, 0x1f, 0xc4, 0x76, 0x28, 0xa3, 0x38, 0x08, 0xd5, 0x8a, 0xcc, 0xcd,
	0x3a, 0xe7, 0x07, 0xb1, 0x95, 0x00, 0x6b, 0xfb, 0x50, 0x4e, 0x0a, 0x3e, 0xfe, 0x31, 0xc1, 0xf3,
	0x2c, 0xaf, 0x51, 0x2c, 0xc2, 0xc4, 0xf2, 0x8a, 0x89, 0x5a, 0x07, 0x4a, 0xba, 0x16, 0x3f, 0x20,
	0xcf, 0x27, 0xb0, 0xe8, 0x46, 0x76, 0x44, 0x17, 0xfd, 0x6d, 0x0e, 0x79, 0x41, 0xba, 0xf5, 0x82,
	0x1b, 0x71, 0x00, 0x00, 0x0b, 0xc1, 0xf5, 0xbf, 0x40, 0xb6, 0x23, 0xfd, 0x68, 0x75, 0xec, 0x91,
	0x2b, 0x58, 0xf2, 0x1a, 0x23, 0x3d, 0xf0, 0xc9, 0xaf, 0x31, 0xde, 0xc8, 0xbd, 0x7e, 0x36, 0x91,
	0x1d, 0xcf, 0xd7, 0xe8, 0xd4, 0xf3, 0x58, 0x47, 0x40, 0xe1, 0x54, 0xfd, 0x3f, 0x2a, 0xd2, 0x7d,
	0xf5, 0x8d, 0xdd, 0xe6, 0x6a, 0x33, 0x74, 0x8f, 0x5d, 0xf1, 0x95, 0x8e, 0x13, 0x72, 0x07, 0x2a,
	0x3a, 0x66, 0x48, 0xe6, 0xb1, 0x39, 0x0d, 0xda, 0x74, 0x4c, 0x0f, 0x4a, 0x2d, 0x11, 0xcb, 0x76,
	0x10, 0x9e, 0xb1, 0xb6, 0x9c, 0xe9, 0xf8, 0xc6, 0x70, 0x8e, 0xeb, 0x4c, 0xfc, 0xec, 0xdd, 0x23,
	0xfb, 0x1c, 0xb4, 0xad, 0x9f, 0xa6, 0xc1, 0xc7, 0x0a, 0xf5, 0x17, 0x2e, 0x08, 0x4a, 0xf8, 0x10,
	0xe6, 0x93, 0xc2, 0xa6, 0x11, 0xc0, 0xca, 0xd6, 0x9c, 0x86, 0xd2, 0xb5, 0x90, 0xfb, 0x30, 0x97,
	0x8d, 0x5a, 0x41, 0x77, 0xcb, 0xcb, 0xd6, 0xac, 0x48, 0x83, 0x55, 0xe0, 0x95, 0xc0, 0x56, 0x10,
	0x86, 0xb2, 0x15, 0xeb, 0x10, 0x17, 0xae, 0xef, 0x48, 0x7d, 0x40, 0x6e, 0x32, 0x8e, 0x02, 0x1c,
	0x6c, 0x2a, 0x4c, 0xfd, 0x18, 0x1e, 0x8c, 0x6e, 0x44, 0x8e, 0x1a, 0xb1, 0xdf, 0xef, 0x76, 0x45,
	0x88, 0x0f, 0x88, 0x44, 0xf4, 0xd3, 0x16, 0x3a, 0x9e, 0x01, 0x3f, 0x06, 0x6c, 0x30, 0x22, 0x89,
	0x73, 0x60, 0xde, 0x83, 0xd9, 0x9e, 0x8b, 0xcf, 0xd1, 0x6a, 0x05, 0x13, 0x2f, 0xab, 0x13, 0x8c,
	0x24, 0x82, 0x36, 0x29, 0xc6, 0xda, 0x43, 0x90, 0x87, 0x0e, 0x56, 0x03, 0x5f, 0xab, 0xbd, 0x38,
	0x72, 0x53, 0x51, 0x47, 0x5e, 0x7b, 0x1b, 0xca, 0x41, 0x4f, 0xe6, 0x0c, 0x07, 0x29, 0xa0, 0xfe,
	0x2f, 0x17, 0x49, 0x38, 0x1f, 0xf5, 0xa5, 0xd1, 0x5f, 0xb9, 0x07, 0xb3, 0xd4, 0xc4, 0xf6, 0xa1,
	0x17, 0x08, 0x2a, 0x7d, 0xd1, 0xaa, 0x10, 0x0c, 0x63, 0x4b, 0xa8, 0xce, 0x70, 0x23, 0x7d, 0x2c,
	0x2c, 0xda, 0x92, 0x0d, 0x13, 0xb3, 0x6e, 0xb4, 0x97, 0xc0, 0xe8, 0x02, 0x13, 0x86, 0xe6, 0xb4,
	0xbd, 0xa0, 0xc5, 0x51, 0xcd, 0x80, 0x41, 0x5b, 0x41, 0xcb, 0x5c, 0x85, 0x19, 0xfd, 0x5c, 0xef,
	0xf4, 0x28, 0x87, 0x80, 0xb1, 0x8d, 0x63, 0x69, 0xbe, 0x4c, 0x59, 0x95, 0x70, 0xe3, 0x60, 0x74,
	0xb3, 0xa4, 0xac, 0x4a, 0xa4, 0xc1, 0xd5, 0x46, 0x93, 0xb4, 0x64, 0x2f, 0xc6, 0xe7, 0x60, 0x15,
	0xd1, 0x1c, 0x13, 0x11, 0xb0, 0xfe, 0x87, 0x90, 0x6f, 0x27, 0x1e, 0xca, 0xbb, 0x21, 0x3e, 0x21,
	0x79, 0xd9, 0xa7, 0x8f, 0x6e, 0x40, 0x49, 0xfd, 0xcf, 0x54, 0x78, 0x46, 0xa5, 0x55, 0x6d, 0x6f,
	0x40, 0xc9, 0x91, 0x51, 0x0b, 0x51, 0xbc, 0x51, 0xab, 0x34, 0xa3, 0xbc, 0x20, 0x24, 0xae, 0x19,
	0x42, 0xa9, 0xb4, 0x42, 0xdd, 0x84, 0xb2, 0xaf, 0xa4, 0x52, 0xc4, 0x95, 0x70, 0xc8, 0x97, 0x10,
	0xc0, 0x48, 0xac, 0x36, 0x22, 0x29, 0xde, 0x6e, 0x09, 0x01, 0x0a, 0x79, 0x07, 0x2a, 0x5c, 0x61,
	0x44, 0x03, 0x47, 0x52, 0x24, 0x90, 0x22, 0xd0, 0xf1, 0x52, 0xaf, 0x64, 0xe2, 0xa5, 0xd6, 0xa0,
	0x74, 0x20, 0x3b, 0xe2, 0xd8, 0xe5, 0xc7, 0x63, 0x26, 0xad, 0x24, 0x8d, 0xc7, 0xc5, 0x74, 0x14,
	0x8b, 0x6e, 0xb4, 0xd7, 0xf8, 0xb8, 0x18, 0x41, 0x3a, 0x3a, 0xba, 0x26, 0x50, 0xf9, 0x5e, 0xcf,
	0x11, 0xb0, 0x8b, 0x22, 0xf9, 0xd6, 0x57, 0xb3, 0x4f, 0x1b, 0xa6, 0x2f, 0xcf, 0xdc, 0xc8, 0xbd,
	0x3c, 0x53, 0x83, 0x92, 0xdb, 0xed, 0xf6, 0x7d, 0x37, 0x3e, 0x63, 0x47, 0xb7, 0x24, 0x8d, 0x9e,
	0xcd, 0x6e, 0xd4, 0x93, 0x1e, 0x4d, 0xc4, 0x9b, 0xfa, 0x4e, 0x76, 0x02, 0x52, 0x6d, 0xd3, 0x15,
	0xa7, 0x7c, 0x6a, 0x42, 0x97, 0xd7, 0x4a, 0x5d, 0x71, 0x4a, 0xa7, 0x24, 0xf8, 0xe6, 0x39, 0x3d,
	0x73, 0xd8, 0x96, 0x51, 0xf5, 0x36, 0x79, 0x04, 0x29, 0x10, 0x07, 0xbc, 0xd1, 0x04, 0xfc, 0x24,
	0xc7, 0x1d, 0x1c, 0x31, 0x48, 0xc0, 0xaf, 0x1a, 0xdf, 0x87, 0x39, 0xbe, 0x5a, 0x4d, 0x36, 0x0b,
	0xbc, 0x01, 0x5f, 0xb4, 0x66, 0x19, 0x88, 0xc6, 0x0a, 0x7a, 0x30, 0x92, 0x9e, 0x3e, 0x89, 0xaa,
	0xf7, 0x90, 0x20, 0x05, 0x60, 0x5c, 0x59, 0xb6, 0xef, 0x45, 0xd5, 0x3a, 0x61, 0x13, 0x80, 0x12,
	0xeb, 0xa8, 0x1d, 0xa2, 0xea, 0x7d, 0xda, 0x10, 0x38, 0xa9, 0x76, 0xd7, 0xae, 0xf0, 0x85, 0xdd,
	0x0a, 0xa2, 0x38, 0xaa, 0x3e, 0x40, 0x64, 0x59, 0x41, 0xd6, 0x15, 0x20, 0xb9, 0x56, 0x48, 0xe8,
	0x87, 0x84, 0x56, 0x10, 0x42, 0xdf, 0xd3, 0xaf, 0x46, 0x31, 0xc1, 0x23, 0x5a, 0x9b, 0x08, 0x46,
	0x24, 0x5f, 0xc2, 0xbc, 0xde, 0xe2, 0x78, 0xad, 0x7d, 0x3c, 0x7c, 0x2f, 0x68, 0xcc, 0x8a, 0x62,
	0xcd, 0x45, 0xb9, 0x05, 0x86, 0x5e, 0xea, 0xc7, 0xc7, 0x59, 0x57, 0xf4, 0x4b, 0xfd, 0x38, 0xa3,
	0x96, 0x61, 0x49, 0xdf, 0x9a, 0xea, 0x88, 0x74, 0x6e, 0xfe, 0x04, 0x89, 0x16, 0x19, 0xf5, 0x52,
	0xe8, 0xf9, 0xa9, 0xb6, 0xde, 0x1c, 0x3d, 0x4e, 0xf7, 0x9f, 0xd2, 0xd6, 0x9b, 0xa1, 0xc6, 0x29,
	0xff, 0x73, 0xb8, 0x95, 0x3c, 0x9f, 0x96, 0xd8, 0xee, 0xed, 0x83, 0xb3, 0xe4, 0x2b, 0x5f, 0xd0,
	0x45, 0x19, 0xfd, 0x08, 0xbe, 0xb6, 0xd3, 0xaf, 0x9d, 0xe9, 0xaf, 0xfd, 0x04, 0x6e, 0x8e, 0xc9,
	0x01, 0xbf, 0xfb, 0x33, 0xe4, 0xbf, 0x3e, 0x82, 0x1f, 0xbf, 0x7f, 0x13, 0xca, 0x78, 0x3e, 0xa4,
	0x5a, 0x98, 0xef, 0xa7, 0xe0, 0x81, 0x91, 0x6a, 0x5e, 0xb5, 0x47, 0xd1, 0x6b, 0xb4, 0xbe, 0x1b,
	0xab, 0x26, 0x6e, 0x75, 0xd4, 0x04, 0x89, 0xf8, 0x7a, 0x8a, 0x89, 0x4f, 0xd3, 0x12, 0x6a, 0x9d,
	0x30, 0x28, 0x75, 0x28, 0x8e, 0xc4, 0xab, 0xd4, 0x95, 0x21, 0xde, 0xb1, 0x9a, 0xb3, 0xf0, 0xad,
	0xb8, 0x1d, 0xf6, 0x2b, 0x75, 0x65, 0x68, 0x3e, 0x80, 0x79, 0xa4, 0x8d, 0xe2, 0xa0, 0x75, 0x84,
	0xde, 0x63, 0x9b, 0xfc, 0x40, 0x54, 0x2c, 0xbb, 0xfb, 0x0a, 0xb8, 0x2d, 0x4e, 0xcd, 0x47, 0xfc,
	0xc8, 0x1c, 0x51, 0xa1, 0x7f, 0xc2, 0x97, 0xe4, 0xb0, 0x95, 0x90, 0xa1, 0x8f, 0xc2, 0x3d, 0x40,
	0x3e, 0xfb, 0xbb, 0xbe, 0xc0, 0xb7, 0xa8, 0x5e, 0xd3, 0x3c, 0x73, 0xf1, 0xb5, 0x7d, 0x04, 0xd5,
	0xff, 0xef, 0x12, 0x69, 0x0f, 0x7a, 0x34, 0xa0, 0x43, 0xd1, 0x65, 0xe2, 0x72, 0xde, 0x80, 0x12,
	0xde, 0x8b, 0x4a, 0x05, 0xdf, 0x19, 0x4c, 0x93, 0x08, 0x3f, 0x6e, 0x15, 0xbd, 0x0e, 0x33, 0x07,
	0x6e, 0x90, 0x59, 0x44, 0xa7, 0x0f, 0xdc, 0x80, 0xd7, 0xd0, 0xce, 0x59, 0x2f, 0xb7, 0x86, 0xaa,
	0xb4, 0x42, 0xdd, 0x85, 0x59, 0xbf, 0x27, 0xed, 0x64, 0xf5, 0xa5, 0x83, 0x70, 0xf0, 0x7b, 0x72,
	0x23, 0x5d, 0x80, 0xa3, 0x38, 0xb4, 0x0f, 0x44, 0xa4, 0x9d, 0x04, 0x66, 0xa2, 0x38, 0x5c, 0x13,
	0xf4, 0xf8, 0xbf, 0x42, 0xb5, 0x85, 0xab, 0xfd, 0x10, 0x15, 0xea, 0x85, 0xa0, 0x87, 0x96, 0x44,
	0xdb, 0x25, 0xae, 0xd9, 0xe4, 0x95, 0x2e, 0xcd, 0xa5, 0x50, 0xc8, 0x45, 0x3e, 0xd5, 0x0a, 0xa5,
	0xb9, 0x5c, 0x7c, 0xf1, 0x3c, 0xd2, 0xd1, 0xbd, 0x66, 0x5c, 0x3f, 0xd6, 0x5c, 0x0a, 0x85, 0x5c,
	0x0b, 0xc4, 0xe5, 0xfa, 0x31, 0x72, 0x29, 0x91, 0x22, 0x74, 0x49, 0xfe, 0x88, 0xe3, 0x90, 0x17,
	0xed, 0x0a, 0xc3, 0x56, 0xe3, 0x38, 0x54, 0x8a, 0x22, 0x79, 0xab, 0x9f, 0xaa, 0xae, 0xe2, 0xdb,
	0xc8, 0x29, 0x44, 0x89, 0x30, 0x22, 0x8e, 0x45, 0xeb, 0xc8, 0x6e, 0x89, 0x1e, 0x0f, 0x5d, 0x5e,
	0xc5, 0x0d, 0x42, 0xac, 0x27, 0x70, 0xf4, 0x99, 0x0c, 0x3c, 0x49, 0xeb, 0x67, 0x54, 0xbd, 0xce,
	0x3e, 0x93, 0x81, 0x27, 0x71, 0x05, 0xc5, 0x65, 0x86, 0x2f, 0xe7, 0x74, 0x5d, 0x1f, 0x17, 0xf4,
	0x29, 0xab, 0x4c, 0x10, 0xbe, 0xdc, 0xac, 0xd1, 0xe2, 0x14, 0x17, 0xf6, 0x14, 0x2d, 0x4e, 0xf1,
	0xb1, 0x7b, 0x2a, 0x0b, 0xbe, 0xfd, 0x56, 0x23, 0xc7, 0x32, 0x02, 0x59, 0x22, 0xc6, 0x91, 0x97,
	0x10, 0xf8, 0xed, 0x64, 0x85, 0xd7, 0x14, 0x7e, 0x1b, 0x2f, 0x0a, 0xf7, 0xc2, 0xe0, 0xd7, 0xb2,
	0x15, 0xbb, 0x9e, 0xb4, 0xe9, 0x59, 0xb3, 0xb7, 0x75, 0x3c, 0x03, 0x0d, 0xdf, 0xc7, 0xc7, 0xcd,
	0x92, 0x07, 0xd1, 0x6e, 0x91, 0xe0, 0x44, 0x0f, 0xa2, 0xbd, 0x0b, 0x46, 0x57, 0xb4, 0xdd, 0x96,
	0xd2, 0x44, 0x5c, 0x7a, 0xc0, 0x96, 0x2f, 0x26, 0x2f, 0x20, 0xdc, 0x4a, 0xc0, 0x4a, 0x88, 0xe8,
	0x06, 0xc7, 0x12, 0x1d, 0x09, 0xe8, 0x4b, 0x77, 0xf8, 0x51, 0x3b, 0x86, 0xd2, 0x77, 0x6e, 0x42,
	0x39, 0xee, 0x87, 0x3e, 0x55, 0xea, 0x2e, 0x3d, 0x72, 0xa8, 0x00, 0x16, 0xbf, 0xf1, 0x1e, 0xa1,
	0x23, 0x3c, 0xd6, 0x08, 0x9f, 0xb3, 0xa1, 0xd7, 0xbf, 0xe6, 0x10, 0x8c, 0x95, 0xda, 0x10, 0x67,
	0xe8, 0x1e, 0x95, 0xa1, 0xa3, 0xe7, 0x6c, 0xea, 0xec, 0x1e, 0x95, 0x50, 0xd2, 0x53, 0x36, 0xb8,
	0x17, 0x9c, 0xda, 0xb4, 0x7a, 0xf3, 0x9d, 0x66, 0xb5, 0xef, 0xbd, 0x44, 0x40, 0x66, 0xb1, 0xc7,
	0x27, 0xf5, 0xf0, 0xf2, 0x72, 0x51, 0x2f, 0xf6, 0x96, 0x02, 0x91, 0xb5, 0xeb, 0x94, 0xde, 0x66,
	0x7a, 0xa8, 0xad, 0x5d, 0xa7, 0xdb, 0xc2, 0x17, 0xc9, 0x46, 0x43, 0xbc, 0xf4, 0x44, 0x18, 0x6e,
	0x34, 0xc4, 0xb9, 0x9a, 0x8d, 0xf2, 0x7e, 0xee, 0x0e, 0x91, 0x93, 0xa5, 0xb2, 0xa1, 0xe0, 0x7f,
	0x0a, 0x33, 0xb1, 0xf0, 0xd0, 0x4e, 0xf8, 0xee, 0xe5, 0x33, 0xd0, 0x3c, 0xf5, 0x6f, 0xe9, 0x88,
	0x2a, 0x4f, 0xe5, 0xa2, 0xa7, 0x68, 0xa6, 0x68, 0x85, 0x1f, 0x52, 0xb4, 0xfa, 0x0e, 0x2c, 0x66,
	0xe9, 0x36, 0xd1, 0xdf, 0xe6, 0xc7, 0xda, 0x0b, 0xe7, 0x7b, 0xe4, 0x49, 0x1c, 0xf5, 0x97, 0xa4,
	0xcc, 0x67, 0x97, 0x49, 0x34, 0x20, 0x4d, 0x73, 0x5c, 0x5e, 0xca, 0xb1, 0x36, 0x3a, 0x47, 0x34,
	0x57, 0x33, 0x65, 0xfd, 0x9f, 0x2d, 0x92, 0x2f, 0x5a, 0x16, 0x89, 0x0f, 0x56, 0xfe, 0x6c, 0x20,
	0xb3, 0x77, 0xc6, 0x67, 0xa6, 0xe8, 0xf1, 0xaa, 0x1c, 0x5a, 0xce, 0x98, 0xad, 0xf6, 0xef, 0x14,
	0xa0, 0xa4, 0x81, 0x97, 0x5d, 0xc3, 0x93, 0x85, 0x7a, 0x22, 0xbf, 0x50, 0x3f, 0x06, 0x03, 0x51,
	0x12, 0x1f, 0x39, 0xeb, 0x20, 0x09, 0x29, 0x76, 0xf3, 0x0a, 0xde, 0x20, 0xb0, 0xa2, 0x1c, 0x5c,
	0xda, 0xa6, 0x2e, 0x5a, 0xda, 0xa6, 0x07, 0x97, 0xb6, 0xfa, 0xbf, 0xc2, 0xf1, 0xbb, 0xb3, 0xbd,
	0x95, 0x7d, 0xca, 0xf3, 0x97, 0x80, 0x1b, 0xdb, 0xe0, 0x98, 0xf8, 0x74, 0x74, 0x03, 0x0d, 0x70,
	0x2f, 0x67, 0xd2, 0xd8, 0x5c, 0xf9, 0xbc, 0x6a, 0xff, 0x5a, 0x01, 0x16, 0x06, 0x48, 0x7e, 0x90,
	0xbe, 0xf0, 0x83, 0x1b, 0xf0, 0x09, 0x2c, 0x6a, 0xd1, 0x00, 0x77, 0xeb, 0xe4, 0x75, 0x83, 0x29,
	0x6b, 0x81, 0x11, 0xaa, 0x7c, 0x4a, 0x3e, 0xa8, 0xbf, 0x22, 0x2d, 0x67, 0x2b, 0x38, 0x38, 0x38,
	0xd3, 0xcf, 0x2b, 0x26, 0xa6, 0xa5, 0x65, 0x58, 0x8a, 0x3a, 0xfd, 0xc3, 0x43, 0x4f, 0xda, 0x8e,
	0x02, 0xf2, 0xc5, 0x65, 0x52, 0x73, 0x17, 0x19, 0x85, 0xe4, 0x78, 0x79, 0x59, 0x35, 0x7b, 0x75,
	0x7d, 0x7f, 0xb7, 0xd1, 0x0a, 0x7c, 0x7c, 0xe1, 0x2e, 0x0c, 0x7a, 0x6a, 0xa5, 0x23, 0x05, 0xf6,
	0x52, 0xaf, 0xbe, 0xbf, 0x03, 0x0b, 0xf2, 0xb4, 0xe7, 0x92, 0xd0, 0x4b, 0xb1, 0x45, 0xc9, 0x51,
	0x72, 0x3e, 0x05, 0x63, 0x84, 0xd1, 0x1a, 0x4c, 0xa1, 0xce, 0x47, 0xb7, 0x33, 0x38, 0x23, 0x02,
	0xe1, 0x4b, 0x9b, 0xea, 0x07, 0x6b, 0xdb, 0x93, 0xfc, 0xd2, 0xa6, 0x02, 0x91, 0x29, 0x5b, 0x09,
	0xa1, 0x28, 0x72, 0xe9, 0x9b, 0x7d, 0x18, 0x4d, 0x85, 0x0c, 0x73, 0x8e, 0x3c, 0xcc, 0x19, 0x09,
	0x4a, 0x8e, 0x3c, 0x44, 0xd3, 0x40, 0xf6, 0xa2, 0xb1, 0x27, 0x0f, 0xb5, 0x77, 0x9d, 0xbe, 0x68,
	0xbc, 0x25, 0x0f, 0x63, 0xf3, 0x1d, 0x98, 0x3d, 0x08, 0x02, 0xbc, 0x3a, 0x99, 0x3a, 0xad, 0x71,
	0xe1, 0x2a, 0x8c, 0xc1, 0x4b, 0xa6, 0xff, 0x7a, 0x11, 0x6e, 0x65, 0x5a, 0x2a, 0xf5, 0x39, 0xdb,
	0x13, 0x51, 0xd4, 0xe3, 0x88, 0x6f, 0xe7, 0xd9, 0xa5, 0x73, 0xae, 0x73, 0xc5, 0x01, 0xd7, 0xb9,
	0x4c, 0xfd, 0x26, 0x72, 0xf5, 0x5b, 0x81, 0xab, 0x41, 0xe8, 0xb6, 0x5d, 0xb4, 0xde, 0xf7, 0xc3,
	0x56, 0x47, 0x44, 0x24, 0x70, 0x51, 0x1b, 0x2d, 0x69, 0xe4, 0x9e, 0xc6, 0x51, 0x48, 0xa1, 0x1e,
	0x17, 0x2a, 0xb2, 0x0f, 0x82, 0xbe, 0x7e, 0x4c, 0x4d, 0x6d, 0xab, 0x1a, 0xbe, 0x86, 0xe0, 0xac,
	0xeb, 0xca, 0x74, 0xde, 0x75, 0x25, 0xd7, 0xb0, 0x33, 0xc3, 0x0d, 0xcb, 0x71, 0x3d, 0x49, 0x1b,
	0xe4, 0x6b, 0x07, 0x04, 0xc3, 0x2b, 0xd6, 0xf5, 0xbf, 0xc5, 0xc6, 0xad, 0xfd, 0xd8, 0x6d, 0x1d,
	0xc9, 0xf0, 0x20, 0x08, 0x8e, 0xf8, 0x27, 0x3e, 0xe4, 0xcf, 0xce, 0x57, 0x99, 0x96, 0x62, 0xff,
	0x2b, 0xf6, 0x23, 0x24, 0x52, 0x0c, 0x2b, 0x56, 0xd4, 0x2f, 0x1b, 0x23, 0x68, 0xa7, 0x8f, 0x2f,
	0x88, 0x68, 0x79, 0x96, 0xe5, 0x4e, 0x4e, 0xaa, 0x3e, 0xe8, 0x05, 0x11, 0x9e, 0x68, 0xb0, 0xf3,
	0x7e, 0xd1, 0x2a, 0x6b, 0xc8, 0x2f, 0x72, 0xe8, 0x33, 0xbe, 0xc2, 0x93, 0xa0, 0xbf, 0xc9, 0xa1,
	0x7f, 0xc3, 0x97, 0x68, 0x12, 0xf4, 0xb7, 0x68, 0x46, 0x0e, 0xe2, 0xd4, 0x7d, 0xbc, 0x68, 0x25,
	0x69, 0x7a, 0x6f, 0x47, 0x78, 0x92, 0x6f, 0xeb, 0x50, 0x42, 0xc9, 0xf2, 0xec, 0x27, 0xad, 0x7b,
	0xb7, 0x4c, 0x0e, 0x30, 0x04, 0xdd, 0xa4, 0x3e, 0xc6, 0x17, 0x05, 0x7b, 0x71, 0xc7, 0x3e, 0x70,
	0x45, 0x94, 0xb8, 0xb8, 0x2a, 0xc8, 0x9a, 0x2b, 0xa2, 0xfa, 0x5f, 0x2b, 0x92, 0x1d, 0x32, 0xd3,
	0x92, 0x7b, 0xec, 0xc3, 0xd6, 0x53, 0xe2, 0x99, 0x6a, 0x23, 0x36, 0x57, 0xab, 0xb4, 0x6a, 0xa0,
	0x67, 0x39, 0x63, 0xe4, 0xf7, 0x7b, 0x60, 0x3f, 0x73, 0x1f, 0x72, 0x22, 0x77, 0x1f, 0xf2, 0x27,
	0x4a, 0x8e, 0xc6, 0x22, 0x44, 0xf8, 0xce, 0x58, 0x65, 0xe5, 0xee, 0xc0, 0xd9, 0xe4, 0x50, 0x57,
	0x5b, 0x09, 0x87, 0xf9, 0x15, 0x94, 0x7b, 0xc9, 0x45, 0xf0, 0x29, 0x2c, 0x53, 0x26, 0xaa, 0x64,
	0x63, 0xa0, 0x72, 0x74, 0xf3, 0x7b, 0xbf, 0xb9, 0xb9, 0xfe, 0xaa, 0x61, 0xd9, 0x7b, 0xab, 0x2f,
	0x1a, 0xf6, 0x8b, 0xc6, 0x4e, 0xc3, 0xda, 0x5c, 0xb7, 0xb0, 0xd2, 0x38, 0x25, 0x37, 0xc9, 0xf2,
	0x97, 0x61, 0x6d, 0x4a, 0xd1, 0x55, 0xec, 0xb8, 0xb8, 0xed, 0xcb, 0xef, 0xfa, 0xf8, 0x98, 0xae,
	0xda, 0x9e, 0xb8, 0xa1, 0x0e, 0x54, 0xe1, 0x0b, 0x6c, 0xcc, 0xa3, 0xc6, 0x52, 0xa0, 0xfa, 0x7f,
	0x57, 0x80, 0x85, 0x81, 0xbc, 0xcc, 0x8f, 0x61, 0xaa, 0x87, 0xda, 0x7b, 0x61, 0x94, 0x87, 0xdc,
	0x40, 0x81, 0x2d, 0xa2, 0x35, 0xdb, 0x50, 0xc5, 0xd6, 0xc3, 0x0f, 0x92, 0x76, 0x14, 0x71, 0x39,
	0xf8, 0x20, 0x75, 0x79, 0x6c, 0x3e, 0x23, 0x4b, 0x6f, 0x5d, 0x8d, 0x47, 0x56, 0xea, 0x09, 0x2c,
	0x1e, 0x8a, 0xe3, 0x20, 0x74, 0x63, 0x69, 0x27, 0xc3, 0x80, 0x3a, 0x6c, 0x41, 0x23, 0xf6, 0xa8,
	0x86, 0xf5, 0x7f, 0x2a, 0x5f, 0xbb, 0xf3, 0x6f, 0x8c, 0x0c, 0xcc, 0xce, 0xe2, 0xe0, 0xec, 0x1c,
	0x3f, 0xf9, 0x86, 0x47, 0xfb, 0xe4, 0xf0, 0x68, 0xaf, 0x3f, 0x27, 0xb1, 0x2c, 0x53, 0x16, 0x19,
	0x99, 0x4f, 0x07, 0x04, 0x9f, 0x1b, 0x23, 0x1b, 0x29, 0x27, 0x44, 0xfd, 0xa5, 0x02, 0x65, 0x84,
	0xc0, 0x80, 0xef, 0x3d, 0x8e, 0x8d, 0x05, 0x51, 0x18, 0x1b, 0x0b, 0xe2, 0x22, 0x57, 0x22, 0xb5,
	0x12, 0x9e, 0xb8, 0x7e, 0xee, 0xb8, 0xb5, 0x74, 0xe2, 0x52, 0xd8, 0xf2, 0xba, 0x47, 0x02, 0xac,
	0x2e, 0x44, 0xfa, 0xba, 0xea, 0xd8, 0xf6, 0x7d, 0x06, 0xa8, 0x84, 0xf1, 0xcd, 0x4d, 0x3a, 0xb4,
	0xb9, 0x99, 0xaf, 0x6e, 0xae, 0x4a, 0x56, 0x39, 0xd4, 0x3f, 0xeb, 0x71, 0xfe, 0x6b, 0x96, 0xf0,
	0x8f, 0xe8, 0x6b, 0x37, 0xa1, 0x8c, 0xe1, 0x8e, 0x50, 0x70, 0x60, 0x67, 0x29, 0x05, 0x40, 0x8b,
	0xc2, 0x17, 0x00, 0x99, 0x27, 0x64, 0x8b, 0xa3, 0x8e, 0x03, 0x87, 0xca, 0x6f, 0x95, 0x3b, 0xfa,
	0x67, 0xfd, 0xb7, 0xec, 0x1d, 0xa2, 0x89, 0x56, 0x3d, 0x4f, 0x7d, 0x39, 0xa2, 0x4f, 0x8f, 0x78,
	0xf8, 0xa6, 0x30, 0xea, 0xe1, 0x1b, 0xf3, 0x3e, 0xcc, 0xa1, 0x4f, 0xf4, 0x80, 0xff, 0xdc, 0xac,
	0xf4, 0x9d, 0x94, 0xe8, 0x0b, 0xc0, 0x88, 0x63, 0x5c, 0xd6, 0x89, 0xf3, 0xca, 0x9a, 0xd4, 0xde,
	0xc2, 0xba, 0x53, 0x59, 0xff, 0xad, 0x09, 0x12, 0xad, 0xb7, 0x45, 0x0f, 0x01, 0xfb, 0xbe, 0xe8,
	0x45, 0x9d, 0x60, 0xe0, 0x21, 0x9b, 0xc2, 0x88, 0x23, 0x0c, 0xbe, 0x9f, 0x8b, 0xba, 0xbb, 0xd4,
	0xd7, 0xc9, 0xe7, 0x18, 0xfa, 0x02, 0x81, 0x4a, 0xbc, 0x3a, 0x71, 0x23, 0x27, 0xe8, 0xda, 0x7c,
	0x27, 0x99, 0x68, 0x69, 0xcb, 0x5e, 0x24, 0x14, 0x86, 0x0f, 0x61, 0xfa, 0xc7, 0x60, 0x64, 0x2f,
	0x58, 0x27, 0x0f, 0xa0, 0x4e, 0x5a, 0xf3, 0x99, 0x4b, 0xd6, 0x4a, 0x65, 0x7c, 0x1f, 0xcc, 0x1c,
	0x65, 0xfa, 0x04, 0xea, 0xa4, 0x65, 0x64, 0x68, 0x49, 0x69, 0x54, 0x2b, 0x5a, 0x10, 0xc6, 0xc2,
	0x63, 0x1f, 0x5e, 0x0a, 0xb5, 0x5b, 0x61, 0xd8, 0xeb, 0x48, 0xa2, 0xd1, 0x5c, 0x5f, 0x46, 0xb6,
	0x63, 0x71, 0x24, 0x7d, 0xdc, 0x99, 0x26, 0xad, 0x39, 0x0d, 0x6d, 0x2a, 0xa0, 0xea, 0xbd, 0xe4,
	0xee, 0xb1, 0x9d, 0xbe, 0x3a, 0x33, 0x69, 0xcd, 0x27, 0x60, 0xba, 0x71, 0x3c, 0x32, 0x1e, 0x0a,
	0xed, 0x66, 0xc3, 0xf1, 0x50, 0x50, 0x0c, 0x75, 0xa5, 0xe7, 0xe4, 0xdb, 0x09, 0xa8, 0x9d, 0x08,
	0x95, 0x69, 0xa7, 0xfa, 0x7f, 0x55, 0x60, 0xdd, 0xca, 0x0b, 0x0e, 0x84, 0xa7, 0xfb, 0x0e, 0xa3,
	0xe5, 0xf3, 0x15, 0x4b, 0xf2, 0x34, 0xba, 0x3d, 0xe8, 0x3f, 0x9c, 0xef, 0x64, 0x4b, 0x93, 0x9b,
	0xab, 0x30, 0x7b, 0xe2, 0xfa, 0x4e, 0x70, 0x62, 0xe3, 0x20, 0xe4, 0xa5, 0xf7, 0x22, 0xf6, 0x0a,
	0xf1, 0xe0, 0x13, 0x48, 0xe6, 0x4f, 0x01, 0x38, 0x0b, 0xe9, 0x3b, 0xec, 0x57, 0x75, 0x51, 0x06,
	0x65, 0xe2, 0x68, 0xf8, 0x4e, 0xbd, 0x4d, 0x4b, 0x6e, 0x33, 0xc4, 0x6b, 0xec, 0xf8, 0xce, 0xe4,
	0x23, 0x58, 0x88, 0x29, 0x89, 0xc3, 0x3b, 0x5d, 0x1a, 0xe6, 0xe2, 0x94, 0x8a, 0x3c, 0x18, 0x72,
	0x74, 0xe9, 0x89, 0xd1, 0x94, 0x65, 0x64, 0x48, 0xd1, 0x40, 0xfb, 0xe4, 0x35, 0x2c, 0x36, 0xd8,
	0x80, 0xbb, 0xe7, 0xfa, 0x6d, 0x3a, 0x6b, 0xbb, 0x03, 0xb5, 0x23, 0x7b, 0x08, 0x6c, 0xef, 0x04,
	0x4a, 0x4b, 0x30, 0xfe, 0x9f, 0xbf, 0x38, 0x8e, 0xe0, 0xb9, 0x70, 0x3d, 0xe9, 0x18, 0x7f, 0xf2,
	0x17, 0x9f, 0xfc, 0xe5, 0x29, 0x30, 0xf1, 0xa0, 0xf0, 0xc5, 0xfa, 0xbe, 0x8c, 0x94, 0x48, 0xb8,
	0x23, 0xa5, 0x63, 0xde, 0x85, 0xb7, 0xf9, 0x00, 0x31, 0x07, 0xd7, 0x37, 0x7c, 0x8c, 0xb7, 0xcc,
	0xf7, 0xe1, 0xf1, 0x68, 0x8a, 0x48, 0x86, 0x3b, 0x41, 0x06, 0x22, 0x1d, 0x43, 0xc9, 0xaa, 0x0f,
	0xc7, 0x52, 0x6f, 0xfa, 0xbb, 0xbe, 0xe7, 0xfa, 0xf4, 0x5c, 0x86, 0x34, 0x1f, 0xc3, 0x83, 0x73,
	0x48, 0xb7, 0x82, 0x96, 0xf0, 0x90, 0xf2, 0xd0, 0xfc, 0x00, 0xde, 0x3d, 0x87, 0xf2, 0xf5, 0xe6,
	0x1b, 0x11, 0xad, 0x07, 0xbe, 0x8f, 0x21, 0xe8, 0x8c, 0xb6, 0xf9, 0x21, 0xbc, 0x77, 0x2e, 0xf9,
	0x8e, 0x3c, 0x46, 0xc7, 0x7b, 0x66, 0xe8, 0x98, 0x8f, 0xa0, 0x3e, 0x96, 0xa1, 0xd9, 0x8f, 0x83,
	0xd0, 0x15, 0x5e, 0x64, 0xb8, 0xe6, 0x53, 0xf8, 0xe0, 0xd2, 0xe5, 0xd8, 0x74, 0x3c, 0x69, 0xfc,
	0xda, 0xfc, 0x18, 0x3e, 0xfc, 0x1e, 0x65, 0x41, 0xa6, 0x23, 0xf3, 0xc9, 0x98, 0x46, 0xc4, 0x67,
	0xcd, 0xd0, 0x61, 0x8c, 0x1a, 0xd2, 0xf8, 0x4f, 0x0b, 0xe6, 0xbb, 0x63, 0x5a, 0x31, 0xa5, 0xc5,
	0x96, 0x34, 0xfe, 0xb3, 0x82, 0xf9, 0x18, 0xee, 0x5f, 0x40, 0x8a, 0xdf, 0xff, 0xcf, 0x2f, 0x93,
	0xa9, 0x25, 0x3d, 0x71, 0x66, 0xfc, 0x17, 0x05, 0xf3, 0x43, 0x78, 0x72, 0x99, 0xef, 0xbf, 0xee,
	0x79, 0x81, 0x70, 0x8c, 0xff, 0xb2, 0xf0, 0xe4, 0x2f, 0x17, 0xe1, 0x76, 0x23, 0xb9, 0xa3, 0xa6,
	0x0f, 0xe3, 0xbb, 0x92, 0x3c, 0xc2, 0x71, 0x62, 0x3d, 0x83, 0xcf, 0x38, 0x4f, 0x7b, 0x2c, 0x91,
	0xfd, 0x72, 0x0f, 0x8d, 0x5e, 0xe8, 0x10, 0xd1, 0x7c, 0x8a, 0x21, 0xf5, 0x22, 0xa3, 0x60, 0xee,
	0xc2, 0xab, 0x8b, 0x79, 0xb7, 0x45, 0xdb, 0x6d, 0xe9, 0x38, 0x49, 0x4e, 0xbf, 0x25, 0x9d, 0x37,
	0x6e, 0xdc, 0xd9, 0x91, 0x27, 0xcf, 0x83, 0xb0, 0xdb, 0xf7, 0x84, 0xbd, 0x7a, 0x80, 0x2f, 0xdc,
	0x48, 0xa3, 0x68, 0xbe, 0x81, 0xfd, 0x3f, 0x83, 0x0c, 0xf9, 0x14, 0x76, 0xf7, 0xb0, 0x19, 0xc4,
	0xc2, 0x7b, 0xb9, 0x67, 0x4c, 0x3c, 0xf9, 0xbf, 0x0a, 0x70, 0x15, 0xb3, 0x4d, 0x75, 0x4f, 0x94,
	0xe4, 0x23, 0xd3, 0x84, 0xf9, 0x66, 0xc3, 0x7e, 0xbe, 0x69, 0xed, 0x37, 0xed, 0xb5, 0xad, 0xdd,
	0xdd, 0x0d, 0x7a, 0x6f, 0xa0, 0xd9, 0x20, 0xaf, 0xf8, 0xc6, 0xce, 0x86, 0x51, 0x30, 0x17, 0x61,
	0xae, 0xd9, 0xb0, 0xb7, 0x5f, 0x6f, 0x35, 0x37, 0xed, 0x57, 0x9b, 0x5b, 0x5b, 0x46, 0xd1, 0x34,
	0x60, 0xb6, 0xd9, 0xb0, 0x29, 0xec, 0x51, 0x63, 0xe7, 0x1b, 0x63, 0x82, 0x89, 0x56, 0x1b, 0x2f,
	0x36, 0xf7, 0x09, 0x34, 0x69, 0x2e, 0xc1, 0x42, 0x02, 0xda, 0x6f, 0xee, 0x6e, 0x35, 0x76, 0x8c,
	0x29, 0x73, 0x1e, 0x40, 0xe5, 0xbe, 0xbb, 0xb1, 0xb5, 0xf9, 0xaa, 0x61, 0x4c, 0x33, 0xd1, 0xfa,
	0xee, 0x6b, 0x6b, 0xb3, 0x61, 0x51, 0xf6, 0x33, 0x5c, 0x84, 0xc6, 0xfa, 0xcb, 0xdd, 0xfd, 0xad,
	0xd5, 0x6d, 0xa3, 0x64, 0xce, 0x41, 0xb9, 0xd9, 0xb0, 0xad, 0xd5, 0xbd, 0xcd, 0x86, 0x65, 0x94,
	0x99, 0xa9, 0xb1, 0x6a, 0x6d, 0x7d, 0x63, 0x5b, 0xbb, 0xfb, 0x2f, 0x57, 0x77, 0x0c, 0xe0, 0x12,
	0xac, 0x6d, 0xad, 0xae, 0xbf, 0xb2, 0x5f, 0xee, 0x6e, 0x35, 0x8c, 0xca, 0x93, 0xbf, 0x32, 0x01,
	0xd7, 0xc7, 0xbc, 0x59, 0xa7, 0x16, 0x85, 0xcb, 0x3c, 0x67, 0x67, 0x14, 0xd4, 0xba, 0x34, 0x8e,
	0x52, 0x3f, 0xff, 0x27, 0xe9, 0x66, 0x8f, 0x63, 0x14, 0xd5, 0x14, 0x1f, 0x47, 0x4d, 0xd1, 0x18,
	0xa5, 0x88, 0x3b, 0xc6, 0x84, 0x5a, 0xbf, 0xc6, 0xd1, 0xad, 0x71, 0xcc, 0x7a, 0x22, 0x9d, 0x3c,
	0xaf, 0xa8, 0xfc, 0xd4, 0x2f, 0x51, 0x4e, 0x99, 0xef, 0xc0, 0xfd, 0x71, 0x94, 0x14, 0x37, 0x81,
	0x08, 0xa7, 0xcd, 0x87, 0x70, 0x6f, 0x1c, 0x21, 0x46, 0xc4, 0x42, 0xb2, 0x99, 0xf3, 0xc8, 0x94,
	0xce, 0xf1, 0x5c, 0xc9, 0x14, 0x46, 0xe9, 0xbc, 0x3a, 0x3f, 0x4f, 0x42, 0xa9, 0x18, 0xe5, 0x27,
	0xff, 0x7c, 0x01, 0x6e, 0x8c, 0xbd, 0x90, 0xa1, 0x0a, 0x7f, 0x89, 0x2b, 0x19, 0xc6, 0x5b, 0xaa,
	0x3d, 0xce, 0x23, 0x5c, 0xdd, 0xdb, 0xb3, 0x76, 0xbf, 0xc6, 0xe8, 0x47, 0x17, 0x50, 0x5a, 0x8d,
	0x2f, 0x1b, 0xeb, 0xcd, 0xc6, 0x86, 0x51, 0x7c, 0xf2, 0x2f, 0xcc, 0xc0, 0xcd, 0x73, 0xdc, 0x5b,
	0x32, 0x3b, 0xc3, 0xc5, 0xfe, 0x2f, 0xc6, 0x5b, 0x99, 0x05, 0xfc, 0x7c, 0xf2, 0x75, 0x3e, 0x12,
	0x36, 0x0a, 0xe6, 0x47, 0xf0, 0xfe, 0xf9, 0x2c, 0xaa, 0x63, 0x56, 0x63, 0x0a, 0xe0, 0x2b, 0x23,
	0xa3, 0x98, 0x59, 0xf2, 0xcf, 0xe1, 0xd8, 0xce, 0x9e, 0x52, 0x18, 0x13, 0x99, 0x5d, 0x76, 0x0c,
	0x53, 0x13, 0x2d, 0xec, 0xcd, 0x50, 0x4a, 0x63, 0xd2, 0x7c, 0x0f, 0xde, 0xb9, 0xf8, 0x13, 0x28,
	0xca, 0x18, 0x53, 0x17, 0x13, 0x2b, 0x45, 0x6e, 0x2f, 0x74, 0x5b, 0xd2, 0x98, 0x36, 0x97, 0x93,
	0xe5, 0xfc, 0xfc, 0x16, 0xda, 0x0f, 0xfa, 0xbe, 0x63, 0xcc, 0x64, 0xf6, 0xda, 0x71, 0x99, 0xfb,
	0xc7, 0xc1, 0x91, 0x0c, 0xf7, 0x7b, 0xd2, 0xf3, 0x22, 0xa3, 0x74, 0xe9, 0x2e, 0xd8, 0xe6, 0xe3,
	0x73, 0xa3, 0x7c, 0x31, 0x0b, 0x77, 0x81, 0x68, 0x1d, 0x51, 0xb1, 0xe0, 0xd2, 0xe3, 0x62, 0x47,
	0x09, 0x18, 0x95, 0x8b, 0x3b, 0x79, 0x13, 0xcf, 0x8a, 0xbb, 0xbd, 0xc0, 0xc7, 0x17, 0xbc, 0x67,
	0xcd, 0x27, 0xf0, 0xe8, 0x62, 0x8e, 0xad, 0x20, 0x94, 0xc6, 0xdc, 0xc5, 0x6d, 0x8a, 0x1d, 0x20,
	0xa2, 0xc8, 0x3d, 0x96, 0x91, 0x31, 0x6f, 0x7e, 0x06, 0x2b, 0xe7, 0xd3, 0xab, 0x69, 0xb2, 0xb9,
	0x6e, 0x7f, 0xf5, 0xba, 0xb1, 0xdf, 0xdc, 0xdc, 0xdd, 0xd9, 0xc7, 0x1d, 0x61, 0xc1, 0xfc, 0x31,
	0x7c, 0x7a, 0x3e, 0xdf, 0xc6, 0x37, 0x3b, 0xab, 0xdb, 0x39, 0xc6, 0xfd, 0xe6, 0xaa, 0xd5, 0x34,
	0x5a, 0x17, 0x8f, 0xd9, 0x8d, 0x33, 0x5f, 0x74, 0xdd, 0x16, 0x16, 0x15, 0x1f, 0x05, 0x36, 0x9c,
	0x27, 0xbf, 0x2d, 0xc0, 0x95, 0xc6, 0xee, 0xb1, 0x0c, 0x4f, 0xf8, 0xb2, 0xe3, 0x31, 0xbf, 0x0a,
	0x73, 0x07, 0x6e, 0x1e, 0xd9, 0xa3, 0x30, 0xf6, 0x4e, 0x80, 0x6f, 0xa6, 0x3f, 0x80, 0xbb, 0x63,
	0x09, 0x30, 0xce, 0x7f, 0x7c, 0x66, 0x14, 0xd4, 0xca, 0x33, 0x86, 0x0a, 0x49, 0x5e, 0xfb, 0x2d,
	0x4f, 0x8a, 0xd0, 0x28, 0x9a, 0xf7, 0xe0, 0xd6, 0x79, 0x84, 0x67, 0xc6, 0xc4, 0x93, 0x18, 0x8c,
	0x06, 0x5d, 0x31, 0xf0, 0xdc, 0x96, 0x25, 0x42, 0x17, 0x23, 0x82, 0xde, 0xc0, 0xbd, 0xd2, 0x6a,
	0x6c, 0x6d, 0xae, 0xdb, 0xd6, 0xaa, 0xb5, 0xd9, 0xfc, 0xc6, 0xde, 0xdc, 0xf9, 0x7a, 0x75, 0x6b,
	0x73, 0xc3, 0xf8, 0x13, 0xfd, 0x57, 0x30, 0xdf, 0x86, 0xea, 0x30, 0xdd, 0xfa, 0xee, 0xf6, 0xf6,
	0xae, 0x5a, 0xf6, 0x6a, 0x70, 0x6d, 0x18, 0x6b, 0xad, 0x5a, 0x0d, 0xa3, 0xf0, 0xe4, 0xbf, 0x2e,
	0xc0, 0xf5, 0xac, 0x29, 0x6c, 0xb5, 0xef, 0xb8, 0x7c, 0x37, 0x52, 0x15, 0x9a, 0xed, 0x61, 0x6b,
	0xbb, 0xbb, 0xaf, 0xec, 0xd5, 0xd7, 0x1b, 0x9b, 0x4d, 0x7b, 0xdd, 0x6a, 0xa8, 0x15, 0x70, 0x6f,
	0xf5, 0x45, 0xc3, 0x78, 0x6b, 0x34, 0xc9, 0x46, 0x63, 0xab, 0xa1, 0x49, 0x0a, 0xaa, 0x25, 0x87,
	0x49, 0x10, 0x62, 0x33, 0x7c, 0x9f, 0x76, 0xbf, 0x61, 0x2a, 0x0c, 0x40, 0xb7, 0xde, 0x48, 0xe9,
	0x26, 0xcc, 0x3a, 0xdc, 0x1e, 0xa6, 0xc3, 0xda, 0x31, 0xd8, 0x98, 0x7c, 0xf2, 0x7b, 0x70, 0x65,
	0x94, 0x75, 0xcf, 0xac, 0xc2, 0x48, 0xfb, 0x9e, 0xf1, 0x96, 0x79, 0x15, 0x16, 0x73, 0x98, 0x66,
	0x63, 0x75, 0xdb, 0x28, 0x98, 0xd7, 0x61, 0x29, 0x0f, 0x5e, 0xdd, 0x6a, 0xec, 0x34, 0x8d, 0xe2,
	0xda, 0xa3, 0x6f, 0x1f, 0xb4, 0xdd, 0xb8, 0xd3, 0x3f, 0x58, 0x6e, 0x05, 0xdd, 0x0f, 0x7b, 0x22,
	0x14, 0x9e, 0xeb, 0x7f, 0xd8, 0x0e, 0x3e, 0x70, 0x82, 0x58, 0xac, 0x7c, 0xa8, 0x55, 0xb6, 0xff,
	0x37, 0x00, 0x00, 0xff, 0xff, 0xff, 0x14, 0xc1, 0xa6, 0x66, 0xbc, 0x00, 0x00,
}
