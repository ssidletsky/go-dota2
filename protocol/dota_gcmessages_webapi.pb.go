// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dota_gcmessages_webapi.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ETeamFanContentStatus int32

const (
	ETeamFanContentStatus_TEAM_FAN_CONTENT_STATUS_INVALID   ETeamFanContentStatus = 0
	ETeamFanContentStatus_TEAM_FAN_CONTENT_STATUS_PENDING   ETeamFanContentStatus = 1
	ETeamFanContentStatus_TEAM_FAN_CONTENT_STATUS_EVALUATED ETeamFanContentStatus = 2
)

var ETeamFanContentStatus_name = map[int32]string{
	0: "TEAM_FAN_CONTENT_STATUS_INVALID",
	1: "TEAM_FAN_CONTENT_STATUS_PENDING",
	2: "TEAM_FAN_CONTENT_STATUS_EVALUATED",
}

var ETeamFanContentStatus_value = map[string]int32{
	"TEAM_FAN_CONTENT_STATUS_INVALID":   0,
	"TEAM_FAN_CONTENT_STATUS_PENDING":   1,
	"TEAM_FAN_CONTENT_STATUS_EVALUATED": 2,
}

func (x ETeamFanContentStatus) Enum() *ETeamFanContentStatus {
	p := new(ETeamFanContentStatus)
	*p = x
	return p
}

func (x ETeamFanContentStatus) String() string {
	return proto.EnumName(ETeamFanContentStatus_name, int32(x))
}

func (x *ETeamFanContentStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETeamFanContentStatus_value, data, "ETeamFanContentStatus")
	if err != nil {
		return err
	}
	*x = ETeamFanContentStatus(value)
	return nil
}

func (ETeamFanContentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{0}
}

type ETeamFanContentAssetType int32

const (
	ETeamFanContentAssetType_k_eFanContentAssetType_LogoPNG      ETeamFanContentAssetType = 1
	ETeamFanContentAssetType_k_eFanContentAssetType_LogoSVG      ETeamFanContentAssetType = 2
	ETeamFanContentAssetType_k_eFanContentAssetType_Logo3D       ETeamFanContentAssetType = 3
	ETeamFanContentAssetType_k_eFanContentAssetType_Players      ETeamFanContentAssetType = 4
	ETeamFanContentAssetType_k_eFanContentAssetType_Sprays       ETeamFanContentAssetType = 5
	ETeamFanContentAssetType_k_eFanContentAssetType_Wallpapers   ETeamFanContentAssetType = 6
	ETeamFanContentAssetType_k_eFanContentAssetType_Emoticons    ETeamFanContentAssetType = 7
	ETeamFanContentAssetType_k_eFanContentAssetType_VoiceLines   ETeamFanContentAssetType = 8
	ETeamFanContentAssetType_k_eFanContentAssetType_Localization ETeamFanContentAssetType = 9
)

var ETeamFanContentAssetType_name = map[int32]string{
	1: "k_eFanContentAssetType_LogoPNG",
	2: "k_eFanContentAssetType_LogoSVG",
	3: "k_eFanContentAssetType_Logo3D",
	4: "k_eFanContentAssetType_Players",
	5: "k_eFanContentAssetType_Sprays",
	6: "k_eFanContentAssetType_Wallpapers",
	7: "k_eFanContentAssetType_Emoticons",
	8: "k_eFanContentAssetType_VoiceLines",
	9: "k_eFanContentAssetType_Localization",
}

var ETeamFanContentAssetType_value = map[string]int32{
	"k_eFanContentAssetType_LogoPNG":      1,
	"k_eFanContentAssetType_LogoSVG":      2,
	"k_eFanContentAssetType_Logo3D":       3,
	"k_eFanContentAssetType_Players":      4,
	"k_eFanContentAssetType_Sprays":       5,
	"k_eFanContentAssetType_Wallpapers":   6,
	"k_eFanContentAssetType_Emoticons":    7,
	"k_eFanContentAssetType_VoiceLines":   8,
	"k_eFanContentAssetType_Localization": 9,
}

func (x ETeamFanContentAssetType) Enum() *ETeamFanContentAssetType {
	p := new(ETeamFanContentAssetType)
	*p = x
	return p
}

func (x ETeamFanContentAssetType) String() string {
	return proto.EnumName(ETeamFanContentAssetType_name, int32(x))
}

func (x *ETeamFanContentAssetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETeamFanContentAssetType_value, data, "ETeamFanContentAssetType")
	if err != nil {
		return err
	}
	*x = ETeamFanContentAssetType(value)
	return nil
}

func (ETeamFanContentAssetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{1}
}

type ETeamFanContentAssetStatus int32

const (
	ETeamFanContentAssetStatus_k_eFanContentAssetStatus_None     ETeamFanContentAssetStatus = 0
	ETeamFanContentAssetStatus_k_eFanContentAssetStatus_Approved ETeamFanContentAssetStatus = 1
	ETeamFanContentAssetStatus_k_eFanContentAssetStatus_Rejected ETeamFanContentAssetStatus = 2
)

var ETeamFanContentAssetStatus_name = map[int32]string{
	0: "k_eFanContentAssetStatus_None",
	1: "k_eFanContentAssetStatus_Approved",
	2: "k_eFanContentAssetStatus_Rejected",
}

var ETeamFanContentAssetStatus_value = map[string]int32{
	"k_eFanContentAssetStatus_None":     0,
	"k_eFanContentAssetStatus_Approved": 1,
	"k_eFanContentAssetStatus_Rejected": 2,
}

func (x ETeamFanContentAssetStatus) Enum() *ETeamFanContentAssetStatus {
	p := new(ETeamFanContentAssetStatus)
	*p = x
	return p
}

func (x ETeamFanContentAssetStatus) String() string {
	return proto.EnumName(ETeamFanContentAssetStatus_name, int32(x))
}

func (x *ETeamFanContentAssetStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETeamFanContentAssetStatus_value, data, "ETeamFanContentAssetStatus")
	if err != nil {
		return err
	}
	*x = ETeamFanContentAssetStatus(value)
	return nil
}

func (ETeamFanContentAssetStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{2}
}

type CMsgArcanaVotes_VotingState int32

const (
	CMsgArcanaVotes_FINISHED    CMsgArcanaVotes_VotingState = 0
	CMsgArcanaVotes_IN_PROGRESS CMsgArcanaVotes_VotingState = 1
	CMsgArcanaVotes_IN_FUTURE   CMsgArcanaVotes_VotingState = 2
)

var CMsgArcanaVotes_VotingState_name = map[int32]string{
	0: "FINISHED",
	1: "IN_PROGRESS",
	2: "IN_FUTURE",
}

var CMsgArcanaVotes_VotingState_value = map[string]int32{
	"FINISHED":    0,
	"IN_PROGRESS": 1,
	"IN_FUTURE":   2,
}

func (x CMsgArcanaVotes_VotingState) Enum() *CMsgArcanaVotes_VotingState {
	p := new(CMsgArcanaVotes_VotingState)
	*p = x
	return p
}

func (x CMsgArcanaVotes_VotingState) String() string {
	return proto.EnumName(CMsgArcanaVotes_VotingState_name, int32(x))
}

func (x *CMsgArcanaVotes_VotingState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgArcanaVotes_VotingState_value, data, "CMsgArcanaVotes_VotingState")
	if err != nil {
		return err
	}
	*x = CMsgArcanaVotes_VotingState(value)
	return nil
}

func (CMsgArcanaVotes_VotingState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{0, 0}
}

type CMsgDOTADPCFeed_EFeedElementType int32

const (
	CMsgDOTADPCFeed_FEED_SERIES_RESULT            CMsgDOTADPCFeed_EFeedElementType = 1
	CMsgDOTADPCFeed_FEED_MATCH_POPULAR            CMsgDOTADPCFeed_EFeedElementType = 2
	CMsgDOTADPCFeed_FEED_TEAM_UPCOMING_MATCH      CMsgDOTADPCFeed_EFeedElementType = 3
	CMsgDOTADPCFeed_FEED_TEAM_LEAGUE_RESULT       CMsgDOTADPCFeed_EFeedElementType = 4
	CMsgDOTADPCFeed_FEED_TEAM_ADD_PLAYER          CMsgDOTADPCFeed_EFeedElementType = 5
	CMsgDOTADPCFeed_FEED_TEAM_REMOVE_PLAYER       CMsgDOTADPCFeed_EFeedElementType = 6
	CMsgDOTADPCFeed_FEED_TEAM_DISBAND             CMsgDOTADPCFeed_EFeedElementType = 7
	CMsgDOTADPCFeed_FEED_LEAGUE_UPCOMING          CMsgDOTADPCFeed_EFeedElementType = 8
	CMsgDOTADPCFeed_FEED_LEAGUE_CONCLUDED         CMsgDOTADPCFeed_EFeedElementType = 9
	CMsgDOTADPCFeed_FEED_DPC_STANDINGS            CMsgDOTADPCFeed_EFeedElementType = 10
	CMsgDOTADPCFeed_FEED_ALERT_PREDICTIONS        CMsgDOTADPCFeed_EFeedElementType = 11
	CMsgDOTADPCFeed_FEED_ALERT_FANTASY            CMsgDOTADPCFeed_EFeedElementType = 12
	CMsgDOTADPCFeed_FEED_LEAGUE_LIVE_MATCH        CMsgDOTADPCFeed_EFeedElementType = 13
	CMsgDOTADPCFeed_FEED_LEAGUE_INPROGRESS_SERIES CMsgDOTADPCFeed_EFeedElementType = 14
)

var CMsgDOTADPCFeed_EFeedElementType_name = map[int32]string{
	1:  "FEED_SERIES_RESULT",
	2:  "FEED_MATCH_POPULAR",
	3:  "FEED_TEAM_UPCOMING_MATCH",
	4:  "FEED_TEAM_LEAGUE_RESULT",
	5:  "FEED_TEAM_ADD_PLAYER",
	6:  "FEED_TEAM_REMOVE_PLAYER",
	7:  "FEED_TEAM_DISBAND",
	8:  "FEED_LEAGUE_UPCOMING",
	9:  "FEED_LEAGUE_CONCLUDED",
	10: "FEED_DPC_STANDINGS",
	11: "FEED_ALERT_PREDICTIONS",
	12: "FEED_ALERT_FANTASY",
	13: "FEED_LEAGUE_LIVE_MATCH",
	14: "FEED_LEAGUE_INPROGRESS_SERIES",
}

var CMsgDOTADPCFeed_EFeedElementType_value = map[string]int32{
	"FEED_SERIES_RESULT":            1,
	"FEED_MATCH_POPULAR":            2,
	"FEED_TEAM_UPCOMING_MATCH":      3,
	"FEED_TEAM_LEAGUE_RESULT":       4,
	"FEED_TEAM_ADD_PLAYER":          5,
	"FEED_TEAM_REMOVE_PLAYER":       6,
	"FEED_TEAM_DISBAND":             7,
	"FEED_LEAGUE_UPCOMING":          8,
	"FEED_LEAGUE_CONCLUDED":         9,
	"FEED_DPC_STANDINGS":            10,
	"FEED_ALERT_PREDICTIONS":        11,
	"FEED_ALERT_FANTASY":            12,
	"FEED_LEAGUE_LIVE_MATCH":        13,
	"FEED_LEAGUE_INPROGRESS_SERIES": 14,
}

func (x CMsgDOTADPCFeed_EFeedElementType) Enum() *CMsgDOTADPCFeed_EFeedElementType {
	p := new(CMsgDOTADPCFeed_EFeedElementType)
	*p = x
	return p
}

func (x CMsgDOTADPCFeed_EFeedElementType) String() string {
	return proto.EnumName(CMsgDOTADPCFeed_EFeedElementType_name, int32(x))
}

func (x *CMsgDOTADPCFeed_EFeedElementType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTADPCFeed_EFeedElementType_value, data, "CMsgDOTADPCFeed_EFeedElementType")
	if err != nil {
		return err
	}
	*x = CMsgDOTADPCFeed_EFeedElementType(value)
	return nil
}

func (CMsgDOTADPCFeed_EFeedElementType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{1, 0}
}

type CMsgTeamFanContentAssetStatusResponse_EResult int32

const (
	CMsgTeamFanContentAssetStatusResponse_k_eSuccess       CMsgTeamFanContentAssetStatusResponse_EResult = 0
	CMsgTeamFanContentAssetStatusResponse_k_eInternalError CMsgTeamFanContentAssetStatusResponse_EResult = 1
)

var CMsgTeamFanContentAssetStatusResponse_EResult_name = map[int32]string{
	0: "k_eSuccess",
	1: "k_eInternalError",
}

var CMsgTeamFanContentAssetStatusResponse_EResult_value = map[string]int32{
	"k_eSuccess":       0,
	"k_eInternalError": 1,
}

func (x CMsgTeamFanContentAssetStatusResponse_EResult) Enum() *CMsgTeamFanContentAssetStatusResponse_EResult {
	p := new(CMsgTeamFanContentAssetStatusResponse_EResult)
	*p = x
	return p
}

func (x CMsgTeamFanContentAssetStatusResponse_EResult) String() string {
	return proto.EnumName(CMsgTeamFanContentAssetStatusResponse_EResult_name, int32(x))
}

func (x *CMsgTeamFanContentAssetStatusResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgTeamFanContentAssetStatusResponse_EResult_value, data, "CMsgTeamFanContentAssetStatusResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgTeamFanContentAssetStatusResponse_EResult(value)
	return nil
}

func (CMsgTeamFanContentAssetStatusResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{5, 0}
}

type CMsgDPCEvent_ELeagueEvent int32

const (
	CMsgDPCEvent_EVENT_INVALID                             CMsgDPCEvent_ELeagueEvent = 0
	CMsgDPCEvent_SPRING_2021_LEAGUE                        CMsgDPCEvent_ELeagueEvent = 1
	CMsgDPCEvent_SPRING_2021_MAJOR                         CMsgDPCEvent_ELeagueEvent = 2
	CMsgDPCEvent_INTERNATIONAL_2021_QUALIFIERS             CMsgDPCEvent_ELeagueEvent = 3
	CMsgDPCEvent_INTERNATIONAL_2021                        CMsgDPCEvent_ELeagueEvent = 4
	CMsgDPCEvent_WINTER_2021_LEAGUE                        CMsgDPCEvent_ELeagueEvent = 5
	CMsgDPCEvent_WINTER_2021_LEAGUE_FINALS                 CMsgDPCEvent_ELeagueEvent = 6
	CMsgDPCEvent_SPRING_2022_LEAGUE                        CMsgDPCEvent_ELeagueEvent = 7
	CMsgDPCEvent_SPRING_2022_MAJOR                         CMsgDPCEvent_ELeagueEvent = 8
	CMsgDPCEvent_SUMMER_2022_LEAGUE                        CMsgDPCEvent_ELeagueEvent = 9
	CMsgDPCEvent_SUMMER_2022_MAJOR                         CMsgDPCEvent_ELeagueEvent = 10
	CMsgDPCEvent_INTERNATIONAL_2022                        CMsgDPCEvent_ELeagueEvent = 11
	CMsgDPCEvent_CHINA_REGIONAL_FINALS                     CMsgDPCEvent_ELeagueEvent = 12
	CMsgDPCEvent_INTERNATIONAL_2022_REGIONAL_QUALIFIERS    CMsgDPCEvent_ELeagueEvent = 13
	CMsgDPCEvent_INTERNATIONAL_2022_LAST_CHANCE_QUALIFIERS CMsgDPCEvent_ELeagueEvent = 14
	CMsgDPCEvent_WINTER_2023_LEAGUE                        CMsgDPCEvent_ELeagueEvent = 15
	CMsgDPCEvent_WINTER_2023_MAJOR                         CMsgDPCEvent_ELeagueEvent = 16
	CMsgDPCEvent_SPRING_2023_LEAGUE                        CMsgDPCEvent_ELeagueEvent = 17
	CMsgDPCEvent_SPRING_2023_MAJOR                         CMsgDPCEvent_ELeagueEvent = 18
	CMsgDPCEvent_SUMMER_2023_LEAGUE                        CMsgDPCEvent_ELeagueEvent = 19
	CMsgDPCEvent_SUMMER_2023_MAJOR                         CMsgDPCEvent_ELeagueEvent = 20
	CMsgDPCEvent_INTERNATIONAL_2023                        CMsgDPCEvent_ELeagueEvent = 21
)

var CMsgDPCEvent_ELeagueEvent_name = map[int32]string{
	0:  "EVENT_INVALID",
	1:  "SPRING_2021_LEAGUE",
	2:  "SPRING_2021_MAJOR",
	3:  "INTERNATIONAL_2021_QUALIFIERS",
	4:  "INTERNATIONAL_2021",
	5:  "WINTER_2021_LEAGUE",
	6:  "WINTER_2021_LEAGUE_FINALS",
	7:  "SPRING_2022_LEAGUE",
	8:  "SPRING_2022_MAJOR",
	9:  "SUMMER_2022_LEAGUE",
	10: "SUMMER_2022_MAJOR",
	11: "INTERNATIONAL_2022",
	12: "CHINA_REGIONAL_FINALS",
	13: "INTERNATIONAL_2022_REGIONAL_QUALIFIERS",
	14: "INTERNATIONAL_2022_LAST_CHANCE_QUALIFIERS",
	15: "WINTER_2023_LEAGUE",
	16: "WINTER_2023_MAJOR",
	17: "SPRING_2023_LEAGUE",
	18: "SPRING_2023_MAJOR",
	19: "SUMMER_2023_LEAGUE",
	20: "SUMMER_2023_MAJOR",
	21: "INTERNATIONAL_2023",
}

var CMsgDPCEvent_ELeagueEvent_value = map[string]int32{
	"EVENT_INVALID":                             0,
	"SPRING_2021_LEAGUE":                        1,
	"SPRING_2021_MAJOR":                         2,
	"INTERNATIONAL_2021_QUALIFIERS":             3,
	"INTERNATIONAL_2021":                        4,
	"WINTER_2021_LEAGUE":                        5,
	"WINTER_2021_LEAGUE_FINALS":                 6,
	"SPRING_2022_LEAGUE":                        7,
	"SPRING_2022_MAJOR":                         8,
	"SUMMER_2022_LEAGUE":                        9,
	"SUMMER_2022_MAJOR":                         10,
	"INTERNATIONAL_2022":                        11,
	"CHINA_REGIONAL_FINALS":                     12,
	"INTERNATIONAL_2022_REGIONAL_QUALIFIERS":    13,
	"INTERNATIONAL_2022_LAST_CHANCE_QUALIFIERS": 14,
	"WINTER_2023_LEAGUE":                        15,
	"WINTER_2023_MAJOR":                         16,
	"SPRING_2023_LEAGUE":                        17,
	"SPRING_2023_MAJOR":                         18,
	"SUMMER_2023_LEAGUE":                        19,
	"SUMMER_2023_MAJOR":                         20,
	"INTERNATIONAL_2023":                        21,
}

func (x CMsgDPCEvent_ELeagueEvent) Enum() *CMsgDPCEvent_ELeagueEvent {
	p := new(CMsgDPCEvent_ELeagueEvent)
	*p = x
	return p
}

func (x CMsgDPCEvent_ELeagueEvent) String() string {
	return proto.EnumName(CMsgDPCEvent_ELeagueEvent_name, int32(x))
}

func (x *CMsgDPCEvent_ELeagueEvent) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDPCEvent_ELeagueEvent_value, data, "CMsgDPCEvent_ELeagueEvent")
	if err != nil {
		return err
	}
	*x = CMsgDPCEvent_ELeagueEvent(value)
	return nil
}

func (CMsgDPCEvent_ELeagueEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{8, 0}
}

type CMsgDPCEvent_ELeagueEventPhase int32

const (
	CMsgDPCEvent_PHASE_INVALID       CMsgDPCEvent_ELeagueEventPhase = 0
	CMsgDPCEvent_WILD_CARD           CMsgDPCEvent_ELeagueEventPhase = 1
	CMsgDPCEvent_GROUP_STAGE         CMsgDPCEvent_ELeagueEventPhase = 2
	CMsgDPCEvent_GROUP_A             CMsgDPCEvent_ELeagueEventPhase = 3
	CMsgDPCEvent_GROUP_B             CMsgDPCEvent_ELeagueEventPhase = 4
	CMsgDPCEvent_OVERALL             CMsgDPCEvent_ELeagueEventPhase = 5
	CMsgDPCEvent_PLAYOFF             CMsgDPCEvent_ELeagueEventPhase = 6
	CMsgDPCEvent_RESULTS             CMsgDPCEvent_ELeagueEventPhase = 7
	CMsgDPCEvent_DPC_POINT_STANDINGS CMsgDPCEvent_ELeagueEventPhase = 8
	CMsgDPCEvent_GROUP_C             CMsgDPCEvent_ELeagueEventPhase = 9
	CMsgDPCEvent_GROUP_D             CMsgDPCEvent_ELeagueEventPhase = 10
	CMsgDPCEvent_PLACEMENT           CMsgDPCEvent_ELeagueEventPhase = 11
)

var CMsgDPCEvent_ELeagueEventPhase_name = map[int32]string{
	0:  "PHASE_INVALID",
	1:  "WILD_CARD",
	2:  "GROUP_STAGE",
	3:  "GROUP_A",
	4:  "GROUP_B",
	5:  "OVERALL",
	6:  "PLAYOFF",
	7:  "RESULTS",
	8:  "DPC_POINT_STANDINGS",
	9:  "GROUP_C",
	10: "GROUP_D",
	11: "PLACEMENT",
}

var CMsgDPCEvent_ELeagueEventPhase_value = map[string]int32{
	"PHASE_INVALID":       0,
	"WILD_CARD":           1,
	"GROUP_STAGE":         2,
	"GROUP_A":             3,
	"GROUP_B":             4,
	"OVERALL":             5,
	"PLAYOFF":             6,
	"RESULTS":             7,
	"DPC_POINT_STANDINGS": 8,
	"GROUP_C":             9,
	"GROUP_D":             10,
	"PLACEMENT":           11,
}

func (x CMsgDPCEvent_ELeagueEventPhase) Enum() *CMsgDPCEvent_ELeagueEventPhase {
	p := new(CMsgDPCEvent_ELeagueEventPhase)
	*p = x
	return p
}

func (x CMsgDPCEvent_ELeagueEventPhase) String() string {
	return proto.EnumName(CMsgDPCEvent_ELeagueEventPhase_name, int32(x))
}

func (x *CMsgDPCEvent_ELeagueEventPhase) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDPCEvent_ELeagueEventPhase_value, data, "CMsgDPCEvent_ELeagueEventPhase")
	if err != nil {
		return err
	}
	*x = CMsgDPCEvent_ELeagueEventPhase(value)
	return nil
}

func (CMsgDPCEvent_ELeagueEventPhase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{8, 1}
}

type CMsgDPCEvent_ELeagueEventType int32

const (
	CMsgDPCEvent_UNKNOWN                  CMsgDPCEvent_ELeagueEventType = 0
	CMsgDPCEvent_LEAGUE                   CMsgDPCEvent_ELeagueEventType = 1
	CMsgDPCEvent_MAJOR                    CMsgDPCEvent_ELeagueEventType = 2
	CMsgDPCEvent_INTERNATIONAL_QUALIFIERS CMsgDPCEvent_ELeagueEventType = 3
	CMsgDPCEvent_INTERNATIONAL            CMsgDPCEvent_ELeagueEventType = 4
	CMsgDPCEvent_LEAGUE_FINALS            CMsgDPCEvent_ELeagueEventType = 5
)

var CMsgDPCEvent_ELeagueEventType_name = map[int32]string{
	0: "UNKNOWN",
	1: "LEAGUE",
	2: "MAJOR",
	3: "INTERNATIONAL_QUALIFIERS",
	4: "INTERNATIONAL",
	5: "LEAGUE_FINALS",
}

var CMsgDPCEvent_ELeagueEventType_value = map[string]int32{
	"UNKNOWN":                  0,
	"LEAGUE":                   1,
	"MAJOR":                    2,
	"INTERNATIONAL_QUALIFIERS": 3,
	"INTERNATIONAL":            4,
	"LEAGUE_FINALS":            5,
}

func (x CMsgDPCEvent_ELeagueEventType) Enum() *CMsgDPCEvent_ELeagueEventType {
	p := new(CMsgDPCEvent_ELeagueEventType)
	*p = x
	return p
}

func (x CMsgDPCEvent_ELeagueEventType) String() string {
	return proto.EnumName(CMsgDPCEvent_ELeagueEventType_name, int32(x))
}

func (x *CMsgDPCEvent_ELeagueEventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDPCEvent_ELeagueEventType_value, data, "CMsgDPCEvent_ELeagueEventType")
	if err != nil {
		return err
	}
	*x = CMsgDPCEvent_ELeagueEventType(value)
	return nil
}

func (CMsgDPCEvent_ELeagueEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{8, 2}
}

type CMsgDPCEvent_ETour int32

const (
	CMsgDPCEvent_TOUR_NONE CMsgDPCEvent_ETour = 0
	CMsgDPCEvent_TOUR_1    CMsgDPCEvent_ETour = 1
	CMsgDPCEvent_TOUR_2    CMsgDPCEvent_ETour = 2
	CMsgDPCEvent_TOUR_3    CMsgDPCEvent_ETour = 3
)

var CMsgDPCEvent_ETour_name = map[int32]string{
	0: "TOUR_NONE",
	1: "TOUR_1",
	2: "TOUR_2",
	3: "TOUR_3",
}

var CMsgDPCEvent_ETour_value = map[string]int32{
	"TOUR_NONE": 0,
	"TOUR_1":    1,
	"TOUR_2":    2,
	"TOUR_3":    3,
}

func (x CMsgDPCEvent_ETour) Enum() *CMsgDPCEvent_ETour {
	p := new(CMsgDPCEvent_ETour)
	*p = x
	return p
}

func (x CMsgDPCEvent_ETour) String() string {
	return proto.EnumName(CMsgDPCEvent_ETour_name, int32(x))
}

func (x *CMsgDPCEvent_ETour) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDPCEvent_ETour_value, data, "CMsgDPCEvent_ETour")
	if err != nil {
		return err
	}
	*x = CMsgDPCEvent_ETour(value)
	return nil
}

func (CMsgDPCEvent_ETour) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{8, 3}
}

type CMsgArcanaVotes struct {
	Matches                   []*CMsgArcanaVotes_Match `protobuf:"bytes,1,rep,name=matches" json:"matches,omitempty"`
	RoundTimeRemaining        *uint32                  `protobuf:"varint,2,opt,name=round_time_remaining,json=roundTimeRemaining" json:"round_time_remaining,omitempty"`
	RoundNumber               *uint32                  `protobuf:"varint,3,opt,name=round_number,json=roundNumber" json:"round_number,omitempty"`
	VotingState               *uint32                  `protobuf:"varint,4,opt,name=voting_state,json=votingState" json:"voting_state,omitempty"`
	IsCurrentRoundCalibrating *bool                    `protobuf:"varint,5,opt,name=is_current_round_calibrating,json=isCurrentRoundCalibrating" json:"is_current_round_calibrating,omitempty"`
	ClosestActiveMatchId      *uint32                  `protobuf:"varint,6,opt,name=closest_active_match_id,json=closestActiveMatchId" json:"closest_active_match_id,omitempty"`
	EventId                   *uint32                  `protobuf:"varint,7,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	VotingStartTime           *uint32                  `protobuf:"varint,8,opt,name=voting_start_time,json=votingStartTime" json:"voting_start_time,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                 `json:"-"`
	XXX_unrecognized          []byte                   `json:"-"`
	XXX_sizecache             int32                    `json:"-"`
}

func (m *CMsgArcanaVotes) Reset()         { *m = CMsgArcanaVotes{} }
func (m *CMsgArcanaVotes) String() string { return proto.CompactTextString(m) }
func (*CMsgArcanaVotes) ProtoMessage()    {}
func (*CMsgArcanaVotes) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{0}
}

func (m *CMsgArcanaVotes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgArcanaVotes.Unmarshal(m, b)
}
func (m *CMsgArcanaVotes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgArcanaVotes.Marshal(b, m, deterministic)
}
func (m *CMsgArcanaVotes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgArcanaVotes.Merge(m, src)
}
func (m *CMsgArcanaVotes) XXX_Size() int {
	return xxx_messageInfo_CMsgArcanaVotes.Size(m)
}
func (m *CMsgArcanaVotes) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgArcanaVotes.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgArcanaVotes proto.InternalMessageInfo

func (m *CMsgArcanaVotes) GetMatches() []*CMsgArcanaVotes_Match {
	if m != nil {
		return m.Matches
	}
	return nil
}

func (m *CMsgArcanaVotes) GetRoundTimeRemaining() uint32 {
	if m != nil && m.RoundTimeRemaining != nil {
		return *m.RoundTimeRemaining
	}
	return 0
}

func (m *CMsgArcanaVotes) GetRoundNumber() uint32 {
	if m != nil && m.RoundNumber != nil {
		return *m.RoundNumber
	}
	return 0
}

func (m *CMsgArcanaVotes) GetVotingState() uint32 {
	if m != nil && m.VotingState != nil {
		return *m.VotingState
	}
	return 0
}

func (m *CMsgArcanaVotes) GetIsCurrentRoundCalibrating() bool {
	if m != nil && m.IsCurrentRoundCalibrating != nil {
		return *m.IsCurrentRoundCalibrating
	}
	return false
}

func (m *CMsgArcanaVotes) GetClosestActiveMatchId() uint32 {
	if m != nil && m.ClosestActiveMatchId != nil {
		return *m.ClosestActiveMatchId
	}
	return 0
}

func (m *CMsgArcanaVotes) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgArcanaVotes) GetVotingStartTime() uint32 {
	if m != nil && m.VotingStartTime != nil {
		return *m.VotingStartTime
	}
	return 0
}

type CMsgArcanaVotes_Match struct {
	MatchId                  *uint32  `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	HeroId_0                 *uint32  `protobuf:"varint,2,opt,name=hero_id_0,json=heroId0" json:"hero_id_0,omitempty"`
	HeroId_1                 *uint32  `protobuf:"varint,3,opt,name=hero_id_1,json=heroId1" json:"hero_id_1,omitempty"`
	HeroSeeding_0            *uint32  `protobuf:"varint,4,opt,name=hero_seeding_0,json=heroSeeding0" json:"hero_seeding_0,omitempty"`
	HeroSeeding_1            *uint32  `protobuf:"varint,5,opt,name=hero_seeding_1,json=heroSeeding1" json:"hero_seeding_1,omitempty"`
	VoteCount_0              *uint32  `protobuf:"varint,6,opt,name=vote_count_0,json=voteCount0" json:"vote_count_0,omitempty"`
	VoteCount_1              *uint32  `protobuf:"varint,7,opt,name=vote_count_1,json=voteCount1" json:"vote_count_1,omitempty"`
	VotingState              *uint32  `protobuf:"varint,8,opt,name=voting_state,json=votingState" json:"voting_state,omitempty"`
	RoundNumber              *uint32  `protobuf:"varint,9,opt,name=round_number,json=roundNumber" json:"round_number,omitempty"`
	IsVotesHidden            *bool    `protobuf:"varint,10,opt,name=is_votes_hidden,json=isVotesHidden" json:"is_votes_hidden,omitempty"`
	CalibrationTimeRemaining *uint32  `protobuf:"varint,11,opt,name=calibration_time_remaining,json=calibrationTimeRemaining" json:"calibration_time_remaining,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *CMsgArcanaVotes_Match) Reset()         { *m = CMsgArcanaVotes_Match{} }
func (m *CMsgArcanaVotes_Match) String() string { return proto.CompactTextString(m) }
func (*CMsgArcanaVotes_Match) ProtoMessage()    {}
func (*CMsgArcanaVotes_Match) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{0, 0}
}

func (m *CMsgArcanaVotes_Match) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgArcanaVotes_Match.Unmarshal(m, b)
}
func (m *CMsgArcanaVotes_Match) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgArcanaVotes_Match.Marshal(b, m, deterministic)
}
func (m *CMsgArcanaVotes_Match) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgArcanaVotes_Match.Merge(m, src)
}
func (m *CMsgArcanaVotes_Match) XXX_Size() int {
	return xxx_messageInfo_CMsgArcanaVotes_Match.Size(m)
}
func (m *CMsgArcanaVotes_Match) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgArcanaVotes_Match.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgArcanaVotes_Match proto.InternalMessageInfo

func (m *CMsgArcanaVotes_Match) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgArcanaVotes_Match) GetHeroId_0() uint32 {
	if m != nil && m.HeroId_0 != nil {
		return *m.HeroId_0
	}
	return 0
}

func (m *CMsgArcanaVotes_Match) GetHeroId_1() uint32 {
	if m != nil && m.HeroId_1 != nil {
		return *m.HeroId_1
	}
	return 0
}

func (m *CMsgArcanaVotes_Match) GetHeroSeeding_0() uint32 {
	if m != nil && m.HeroSeeding_0 != nil {
		return *m.HeroSeeding_0
	}
	return 0
}

func (m *CMsgArcanaVotes_Match) GetHeroSeeding_1() uint32 {
	if m != nil && m.HeroSeeding_1 != nil {
		return *m.HeroSeeding_1
	}
	return 0
}

func (m *CMsgArcanaVotes_Match) GetVoteCount_0() uint32 {
	if m != nil && m.VoteCount_0 != nil {
		return *m.VoteCount_0
	}
	return 0
}

func (m *CMsgArcanaVotes_Match) GetVoteCount_1() uint32 {
	if m != nil && m.VoteCount_1 != nil {
		return *m.VoteCount_1
	}
	return 0
}

func (m *CMsgArcanaVotes_Match) GetVotingState() uint32 {
	if m != nil && m.VotingState != nil {
		return *m.VotingState
	}
	return 0
}

func (m *CMsgArcanaVotes_Match) GetRoundNumber() uint32 {
	if m != nil && m.RoundNumber != nil {
		return *m.RoundNumber
	}
	return 0
}

func (m *CMsgArcanaVotes_Match) GetIsVotesHidden() bool {
	if m != nil && m.IsVotesHidden != nil {
		return *m.IsVotesHidden
	}
	return false
}

func (m *CMsgArcanaVotes_Match) GetCalibrationTimeRemaining() uint32 {
	if m != nil && m.CalibrationTimeRemaining != nil {
		return *m.CalibrationTimeRemaining
	}
	return 0
}

type CMsgDOTADPCFeed struct {
	Elements             []*CMsgDOTADPCFeed_Element `protobuf:"bytes,1,rep,name=elements" json:"elements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CMsgDOTADPCFeed) Reset()         { *m = CMsgDOTADPCFeed{} }
func (m *CMsgDOTADPCFeed) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTADPCFeed) ProtoMessage()    {}
func (*CMsgDOTADPCFeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{1}
}

func (m *CMsgDOTADPCFeed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTADPCFeed.Unmarshal(m, b)
}
func (m *CMsgDOTADPCFeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTADPCFeed.Marshal(b, m, deterministic)
}
func (m *CMsgDOTADPCFeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTADPCFeed.Merge(m, src)
}
func (m *CMsgDOTADPCFeed) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTADPCFeed.Size(m)
}
func (m *CMsgDOTADPCFeed) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTADPCFeed.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTADPCFeed proto.InternalMessageInfo

func (m *CMsgDOTADPCFeed) GetElements() []*CMsgDOTADPCFeed_Element {
	if m != nil {
		return m.Elements
	}
	return nil
}

type CMsgDOTADPCFeed_Element struct {
	Type                 *CMsgDOTADPCFeed_EFeedElementType `protobuf:"varint,1,opt,name=type,enum=protocol.CMsgDOTADPCFeed_EFeedElementType,def=1" json:"type,omitempty"`
	Timestamp            *uint32                           `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	SeriesId             *uint32                           `protobuf:"varint,3,opt,name=series_id,json=seriesId" json:"series_id,omitempty"`
	MatchId              *uint64                           `protobuf:"varint,4,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	TeamId               *uint32                           `protobuf:"varint,5,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	AccountId            *uint32                           `protobuf:"varint,6,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	LeagueId             *uint32                           `protobuf:"varint,7,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	NodeId               *uint32                           `protobuf:"varint,8,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	ServerSteamId        *uint64                           `protobuf:"varint,13,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	Data_1               *uint32                           `protobuf:"varint,9,opt,name=data_1,json=data1" json:"data_1,omitempty"`
	Data_2               *uint32                           `protobuf:"varint,10,opt,name=data_2,json=data2" json:"data_2,omitempty"`
	Data_3               *uint32                           `protobuf:"varint,11,opt,name=data_3,json=data3" json:"data_3,omitempty"`
	Data_4               *uint32                           `protobuf:"varint,12,opt,name=data_4,json=data4" json:"data_4,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CMsgDOTADPCFeed_Element) Reset()         { *m = CMsgDOTADPCFeed_Element{} }
func (m *CMsgDOTADPCFeed_Element) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTADPCFeed_Element) ProtoMessage()    {}
func (*CMsgDOTADPCFeed_Element) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{1, 0}
}

func (m *CMsgDOTADPCFeed_Element) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTADPCFeed_Element.Unmarshal(m, b)
}
func (m *CMsgDOTADPCFeed_Element) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTADPCFeed_Element.Marshal(b, m, deterministic)
}
func (m *CMsgDOTADPCFeed_Element) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTADPCFeed_Element.Merge(m, src)
}
func (m *CMsgDOTADPCFeed_Element) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTADPCFeed_Element.Size(m)
}
func (m *CMsgDOTADPCFeed_Element) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTADPCFeed_Element.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTADPCFeed_Element proto.InternalMessageInfo

const Default_CMsgDOTADPCFeed_Element_Type CMsgDOTADPCFeed_EFeedElementType = CMsgDOTADPCFeed_FEED_SERIES_RESULT

func (m *CMsgDOTADPCFeed_Element) GetType() CMsgDOTADPCFeed_EFeedElementType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CMsgDOTADPCFeed_Element_Type
}

func (m *CMsgDOTADPCFeed_Element) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTADPCFeed_Element) GetSeriesId() uint32 {
	if m != nil && m.SeriesId != nil {
		return *m.SeriesId
	}
	return 0
}

func (m *CMsgDOTADPCFeed_Element) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTADPCFeed_Element) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTADPCFeed_Element) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTADPCFeed_Element) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTADPCFeed_Element) GetNodeId() uint32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *CMsgDOTADPCFeed_Element) GetServerSteamId() uint64 {
	if m != nil && m.ServerSteamId != nil {
		return *m.ServerSteamId
	}
	return 0
}

func (m *CMsgDOTADPCFeed_Element) GetData_1() uint32 {
	if m != nil && m.Data_1 != nil {
		return *m.Data_1
	}
	return 0
}

func (m *CMsgDOTADPCFeed_Element) GetData_2() uint32 {
	if m != nil && m.Data_2 != nil {
		return *m.Data_2
	}
	return 0
}

func (m *CMsgDOTADPCFeed_Element) GetData_3() uint32 {
	if m != nil && m.Data_3 != nil {
		return *m.Data_3
	}
	return 0
}

func (m *CMsgDOTADPCFeed_Element) GetData_4() uint32 {
	if m != nil && m.Data_4 != nil {
		return *m.Data_4
	}
	return 0
}

type CMsgDOTADPCUserInfo struct {
	IsPlusSubscriber     *bool    `protobuf:"varint,1,opt,name=is_plus_subscriber,json=isPlusSubscriber" json:"is_plus_subscriber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTADPCUserInfo) Reset()         { *m = CMsgDOTADPCUserInfo{} }
func (m *CMsgDOTADPCUserInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTADPCUserInfo) ProtoMessage()    {}
func (*CMsgDOTADPCUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{2}
}

func (m *CMsgDOTADPCUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTADPCUserInfo.Unmarshal(m, b)
}
func (m *CMsgDOTADPCUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTADPCUserInfo.Marshal(b, m, deterministic)
}
func (m *CMsgDOTADPCUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTADPCUserInfo.Merge(m, src)
}
func (m *CMsgDOTADPCUserInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTADPCUserInfo.Size(m)
}
func (m *CMsgDOTADPCUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTADPCUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTADPCUserInfo proto.InternalMessageInfo

func (m *CMsgDOTADPCUserInfo) GetIsPlusSubscriber() bool {
	if m != nil && m.IsPlusSubscriber != nil {
		return *m.IsPlusSubscriber
	}
	return false
}

type CMsgDraftTrivia struct {
	HasValidMatch            *bool                                 `protobuf:"varint,1,opt,name=has_valid_match,json=hasValidMatch" json:"has_valid_match,omitempty"`
	MatchHeroInfo            *CMsgDraftTrivia_DraftTriviaMatchInfo `protobuf:"bytes,2,opt,name=match_hero_info,json=matchHeroInfo" json:"match_hero_info,omitempty"`
	MatchRankTier            *uint32                               `protobuf:"varint,3,opt,name=match_rank_tier,json=matchRankTier" json:"match_rank_tier,omitempty"`
	EndTime                  *uint32                               `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	EventId                  *uint32                               `protobuf:"varint,5,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	CurrentMatchVotedRadiant *bool                                 `protobuf:"varint,6,opt,name=current_match_voted_radiant,json=currentMatchVotedRadiant" json:"current_match_voted_radiant,omitempty"`
	PreviousResult           *CMsgDraftTrivia_PreviousResult       `protobuf:"bytes,7,opt,name=previous_result,json=previousResult" json:"previous_result,omitempty"`
	CurrentStreak            *uint32                               `protobuf:"varint,8,opt,name=current_streak,json=currentStreak" json:"current_streak,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                              `json:"-"`
	XXX_unrecognized         []byte                                `json:"-"`
	XXX_sizecache            int32                                 `json:"-"`
}

func (m *CMsgDraftTrivia) Reset()         { *m = CMsgDraftTrivia{} }
func (m *CMsgDraftTrivia) String() string { return proto.CompactTextString(m) }
func (*CMsgDraftTrivia) ProtoMessage()    {}
func (*CMsgDraftTrivia) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{3}
}

func (m *CMsgDraftTrivia) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDraftTrivia.Unmarshal(m, b)
}
func (m *CMsgDraftTrivia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDraftTrivia.Marshal(b, m, deterministic)
}
func (m *CMsgDraftTrivia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDraftTrivia.Merge(m, src)
}
func (m *CMsgDraftTrivia) XXX_Size() int {
	return xxx_messageInfo_CMsgDraftTrivia.Size(m)
}
func (m *CMsgDraftTrivia) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDraftTrivia.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDraftTrivia proto.InternalMessageInfo

func (m *CMsgDraftTrivia) GetHasValidMatch() bool {
	if m != nil && m.HasValidMatch != nil {
		return *m.HasValidMatch
	}
	return false
}

func (m *CMsgDraftTrivia) GetMatchHeroInfo() *CMsgDraftTrivia_DraftTriviaMatchInfo {
	if m != nil {
		return m.MatchHeroInfo
	}
	return nil
}

func (m *CMsgDraftTrivia) GetMatchRankTier() uint32 {
	if m != nil && m.MatchRankTier != nil {
		return *m.MatchRankTier
	}
	return 0
}

func (m *CMsgDraftTrivia) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *CMsgDraftTrivia) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgDraftTrivia) GetCurrentMatchVotedRadiant() bool {
	if m != nil && m.CurrentMatchVotedRadiant != nil {
		return *m.CurrentMatchVotedRadiant
	}
	return false
}

func (m *CMsgDraftTrivia) GetPreviousResult() *CMsgDraftTrivia_PreviousResult {
	if m != nil {
		return m.PreviousResult
	}
	return nil
}

func (m *CMsgDraftTrivia) GetCurrentStreak() uint32 {
	if m != nil && m.CurrentStreak != nil {
		return *m.CurrentStreak
	}
	return 0
}

type CMsgDraftTrivia_DraftTriviaHeroInfo struct {
	HeroId               *uint32  `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Role                 *uint32  `protobuf:"varint,2,opt,name=role" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDraftTrivia_DraftTriviaHeroInfo) Reset()         { *m = CMsgDraftTrivia_DraftTriviaHeroInfo{} }
func (m *CMsgDraftTrivia_DraftTriviaHeroInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDraftTrivia_DraftTriviaHeroInfo) ProtoMessage()    {}
func (*CMsgDraftTrivia_DraftTriviaHeroInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{3, 0}
}

func (m *CMsgDraftTrivia_DraftTriviaHeroInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDraftTrivia_DraftTriviaHeroInfo.Unmarshal(m, b)
}
func (m *CMsgDraftTrivia_DraftTriviaHeroInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDraftTrivia_DraftTriviaHeroInfo.Marshal(b, m, deterministic)
}
func (m *CMsgDraftTrivia_DraftTriviaHeroInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDraftTrivia_DraftTriviaHeroInfo.Merge(m, src)
}
func (m *CMsgDraftTrivia_DraftTriviaHeroInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgDraftTrivia_DraftTriviaHeroInfo.Size(m)
}
func (m *CMsgDraftTrivia_DraftTriviaHeroInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDraftTrivia_DraftTriviaHeroInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDraftTrivia_DraftTriviaHeroInfo proto.InternalMessageInfo

func (m *CMsgDraftTrivia_DraftTriviaHeroInfo) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDraftTrivia_DraftTriviaHeroInfo) GetRole() uint32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

type CMsgDraftTrivia_DraftTriviaMatchInfo struct {
	RadiantHeroes        []*CMsgDraftTrivia_DraftTriviaHeroInfo `protobuf:"bytes,1,rep,name=radiant_heroes,json=radiantHeroes" json:"radiant_heroes,omitempty"`
	DireHeroes           []*CMsgDraftTrivia_DraftTriviaHeroInfo `protobuf:"bytes,2,rep,name=dire_heroes,json=direHeroes" json:"dire_heroes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *CMsgDraftTrivia_DraftTriviaMatchInfo) Reset()         { *m = CMsgDraftTrivia_DraftTriviaMatchInfo{} }
func (m *CMsgDraftTrivia_DraftTriviaMatchInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDraftTrivia_DraftTriviaMatchInfo) ProtoMessage()    {}
func (*CMsgDraftTrivia_DraftTriviaMatchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{3, 1}
}

func (m *CMsgDraftTrivia_DraftTriviaMatchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDraftTrivia_DraftTriviaMatchInfo.Unmarshal(m, b)
}
func (m *CMsgDraftTrivia_DraftTriviaMatchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDraftTrivia_DraftTriviaMatchInfo.Marshal(b, m, deterministic)
}
func (m *CMsgDraftTrivia_DraftTriviaMatchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDraftTrivia_DraftTriviaMatchInfo.Merge(m, src)
}
func (m *CMsgDraftTrivia_DraftTriviaMatchInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgDraftTrivia_DraftTriviaMatchInfo.Size(m)
}
func (m *CMsgDraftTrivia_DraftTriviaMatchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDraftTrivia_DraftTriviaMatchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDraftTrivia_DraftTriviaMatchInfo proto.InternalMessageInfo

func (m *CMsgDraftTrivia_DraftTriviaMatchInfo) GetRadiantHeroes() []*CMsgDraftTrivia_DraftTriviaHeroInfo {
	if m != nil {
		return m.RadiantHeroes
	}
	return nil
}

func (m *CMsgDraftTrivia_DraftTriviaMatchInfo) GetDireHeroes() []*CMsgDraftTrivia_DraftTriviaHeroInfo {
	if m != nil {
		return m.DireHeroes
	}
	return nil
}

type CMsgDraftTrivia_PreviousResult struct {
	VotedCorrectly       *bool                                 `protobuf:"varint,1,opt,name=voted_correctly,json=votedCorrectly" json:"voted_correctly,omitempty"`
	VotedRadiant         *bool                                 `protobuf:"varint,2,opt,name=voted_radiant,json=votedRadiant" json:"voted_radiant,omitempty"`
	MatchHeroInfo        *CMsgDraftTrivia_DraftTriviaMatchInfo `protobuf:"bytes,3,opt,name=match_hero_info,json=matchHeroInfo" json:"match_hero_info,omitempty"`
	MatchRankTier        *uint32                               `protobuf:"varint,4,opt,name=match_rank_tier,json=matchRankTier" json:"match_rank_tier,omitempty"`
	EndTime              *uint32                               `protobuf:"varint,5,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	MatchId              *uint64                               `protobuf:"varint,6,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *CMsgDraftTrivia_PreviousResult) Reset()         { *m = CMsgDraftTrivia_PreviousResult{} }
func (m *CMsgDraftTrivia_PreviousResult) String() string { return proto.CompactTextString(m) }
func (*CMsgDraftTrivia_PreviousResult) ProtoMessage()    {}
func (*CMsgDraftTrivia_PreviousResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{3, 2}
}

func (m *CMsgDraftTrivia_PreviousResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDraftTrivia_PreviousResult.Unmarshal(m, b)
}
func (m *CMsgDraftTrivia_PreviousResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDraftTrivia_PreviousResult.Marshal(b, m, deterministic)
}
func (m *CMsgDraftTrivia_PreviousResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDraftTrivia_PreviousResult.Merge(m, src)
}
func (m *CMsgDraftTrivia_PreviousResult) XXX_Size() int {
	return xxx_messageInfo_CMsgDraftTrivia_PreviousResult.Size(m)
}
func (m *CMsgDraftTrivia_PreviousResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDraftTrivia_PreviousResult.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDraftTrivia_PreviousResult proto.InternalMessageInfo

func (m *CMsgDraftTrivia_PreviousResult) GetVotedCorrectly() bool {
	if m != nil && m.VotedCorrectly != nil {
		return *m.VotedCorrectly
	}
	return false
}

func (m *CMsgDraftTrivia_PreviousResult) GetVotedRadiant() bool {
	if m != nil && m.VotedRadiant != nil {
		return *m.VotedRadiant
	}
	return false
}

func (m *CMsgDraftTrivia_PreviousResult) GetMatchHeroInfo() *CMsgDraftTrivia_DraftTriviaMatchInfo {
	if m != nil {
		return m.MatchHeroInfo
	}
	return nil
}

func (m *CMsgDraftTrivia_PreviousResult) GetMatchRankTier() uint32 {
	if m != nil && m.MatchRankTier != nil {
		return *m.MatchRankTier
	}
	return 0
}

func (m *CMsgDraftTrivia_PreviousResult) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *CMsgDraftTrivia_PreviousResult) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgTeamFanContentAssetStatus struct {
	AssetType            *ETeamFanContentAssetType   `protobuf:"varint,1,opt,name=asset_type,json=assetType,enum=protocol.ETeamFanContentAssetType,def=1" json:"asset_type,omitempty"`
	AssetIndex           *uint32                     `protobuf:"varint,2,opt,name=asset_index,json=assetIndex" json:"asset_index,omitempty"`
	AssetStatus          *ETeamFanContentAssetStatus `protobuf:"varint,3,opt,name=asset_status,json=assetStatus,enum=protocol.ETeamFanContentAssetStatus,def=0" json:"asset_status,omitempty"`
	Crc                  *uint32                     `protobuf:"varint,4,opt,name=crc" json:"crc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CMsgTeamFanContentAssetStatus) Reset()         { *m = CMsgTeamFanContentAssetStatus{} }
func (m *CMsgTeamFanContentAssetStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgTeamFanContentAssetStatus) ProtoMessage()    {}
func (*CMsgTeamFanContentAssetStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{4}
}

func (m *CMsgTeamFanContentAssetStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgTeamFanContentAssetStatus.Unmarshal(m, b)
}
func (m *CMsgTeamFanContentAssetStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgTeamFanContentAssetStatus.Marshal(b, m, deterministic)
}
func (m *CMsgTeamFanContentAssetStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgTeamFanContentAssetStatus.Merge(m, src)
}
func (m *CMsgTeamFanContentAssetStatus) XXX_Size() int {
	return xxx_messageInfo_CMsgTeamFanContentAssetStatus.Size(m)
}
func (m *CMsgTeamFanContentAssetStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgTeamFanContentAssetStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgTeamFanContentAssetStatus proto.InternalMessageInfo

const Default_CMsgTeamFanContentAssetStatus_AssetType ETeamFanContentAssetType = ETeamFanContentAssetType_k_eFanContentAssetType_LogoPNG
const Default_CMsgTeamFanContentAssetStatus_AssetStatus ETeamFanContentAssetStatus = ETeamFanContentAssetStatus_k_eFanContentAssetStatus_None

func (m *CMsgTeamFanContentAssetStatus) GetAssetType() ETeamFanContentAssetType {
	if m != nil && m.AssetType != nil {
		return *m.AssetType
	}
	return Default_CMsgTeamFanContentAssetStatus_AssetType
}

func (m *CMsgTeamFanContentAssetStatus) GetAssetIndex() uint32 {
	if m != nil && m.AssetIndex != nil {
		return *m.AssetIndex
	}
	return 0
}

func (m *CMsgTeamFanContentAssetStatus) GetAssetStatus() ETeamFanContentAssetStatus {
	if m != nil && m.AssetStatus != nil {
		return *m.AssetStatus
	}
	return Default_CMsgTeamFanContentAssetStatus_AssetStatus
}

func (m *CMsgTeamFanContentAssetStatus) GetCrc() uint32 {
	if m != nil && m.Crc != nil {
		return *m.Crc
	}
	return 0
}

type CMsgTeamFanContentAssetStatusResponse struct {
	Result               *CMsgTeamFanContentAssetStatusResponse_EResult `protobuf:"varint,1,opt,name=result,enum=protocol.CMsgTeamFanContentAssetStatusResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *CMsgTeamFanContentAssetStatusResponse) Reset()         { *m = CMsgTeamFanContentAssetStatusResponse{} }
func (m *CMsgTeamFanContentAssetStatusResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTeamFanContentAssetStatusResponse) ProtoMessage()    {}
func (*CMsgTeamFanContentAssetStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{5}
}

func (m *CMsgTeamFanContentAssetStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgTeamFanContentAssetStatusResponse.Unmarshal(m, b)
}
func (m *CMsgTeamFanContentAssetStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgTeamFanContentAssetStatusResponse.Marshal(b, m, deterministic)
}
func (m *CMsgTeamFanContentAssetStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgTeamFanContentAssetStatusResponse.Merge(m, src)
}
func (m *CMsgTeamFanContentAssetStatusResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgTeamFanContentAssetStatusResponse.Size(m)
}
func (m *CMsgTeamFanContentAssetStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgTeamFanContentAssetStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgTeamFanContentAssetStatusResponse proto.InternalMessageInfo

const Default_CMsgTeamFanContentAssetStatusResponse_Result CMsgTeamFanContentAssetStatusResponse_EResult = CMsgTeamFanContentAssetStatusResponse_k_eSuccess

func (m *CMsgTeamFanContentAssetStatusResponse) GetResult() CMsgTeamFanContentAssetStatusResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgTeamFanContentAssetStatusResponse_Result
}

type CMsgTeamFanContentStatus struct {
	TeamStatusList       []*CMsgTeamFanContentStatus_TeamStatus `protobuf:"bytes,1,rep,name=team_status_list,json=teamStatusList" json:"team_status_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *CMsgTeamFanContentStatus) Reset()         { *m = CMsgTeamFanContentStatus{} }
func (m *CMsgTeamFanContentStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgTeamFanContentStatus) ProtoMessage()    {}
func (*CMsgTeamFanContentStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{6}
}

func (m *CMsgTeamFanContentStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgTeamFanContentStatus.Unmarshal(m, b)
}
func (m *CMsgTeamFanContentStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgTeamFanContentStatus.Marshal(b, m, deterministic)
}
func (m *CMsgTeamFanContentStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgTeamFanContentStatus.Merge(m, src)
}
func (m *CMsgTeamFanContentStatus) XXX_Size() int {
	return xxx_messageInfo_CMsgTeamFanContentStatus.Size(m)
}
func (m *CMsgTeamFanContentStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgTeamFanContentStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgTeamFanContentStatus proto.InternalMessageInfo

func (m *CMsgTeamFanContentStatus) GetTeamStatusList() []*CMsgTeamFanContentStatus_TeamStatus {
	if m != nil {
		return m.TeamStatusList
	}
	return nil
}

type CMsgTeamFanContentStatus_TeamStatus struct {
	Name                 *string                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	TeamId               *uint32                          `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	LogoUrl              *string                          `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	Status               *ETeamFanContentStatus           `protobuf:"varint,4,opt,name=status,enum=protocol.ETeamFanContentStatus,def=0" json:"status,omitempty"`
	Timestamp            *uint32                          `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	UgcLogo              *uint64                          `protobuf:"varint,7,opt,name=ugc_logo,json=ugcLogo" json:"ugc_logo,omitempty"`
	WorkshopAccountId    *uint32                          `protobuf:"varint,8,opt,name=workshop_account_id,json=workshopAccountId" json:"workshop_account_id,omitempty"`
	Abbreviation         *string                          `protobuf:"bytes,9,opt,name=abbreviation" json:"abbreviation,omitempty"`
	VoicelineCount       *uint32                          `protobuf:"varint,10,opt,name=voiceline_count,json=voicelineCount" json:"voiceline_count,omitempty"`
	SprayCount           *uint32                          `protobuf:"varint,11,opt,name=spray_count,json=sprayCount" json:"spray_count,omitempty"`
	EmoticonCount        *uint32                          `protobuf:"varint,12,opt,name=emoticon_count,json=emoticonCount" json:"emoticon_count,omitempty"`
	WallpaperCount       *uint32                          `protobuf:"varint,13,opt,name=wallpaper_count,json=wallpaperCount" json:"wallpaper_count,omitempty"`
	Comment              *string                          `protobuf:"bytes,14,opt,name=comment" json:"comment,omitempty"`
	CommentTimestamp     *uint32                          `protobuf:"varint,15,opt,name=comment_timestamp,json=commentTimestamp" json:"comment_timestamp,omitempty"`
	AssetStatus          []*CMsgTeamFanContentAssetStatus `protobuf:"bytes,16,rep,name=asset_status,json=assetStatus" json:"asset_status,omitempty"`
	EmailTimestamp       *uint32                          `protobuf:"varint,17,opt,name=email_timestamp,json=emailTimestamp" json:"email_timestamp,omitempty"`
	EmailTier            *uint32                          `protobuf:"varint,18,opt,name=email_tier,json=emailTier" json:"email_tier,omitempty"`
	Languages            *string                          `protobuf:"bytes,19,opt,name=languages" json:"languages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CMsgTeamFanContentStatus_TeamStatus) Reset()         { *m = CMsgTeamFanContentStatus_TeamStatus{} }
func (m *CMsgTeamFanContentStatus_TeamStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgTeamFanContentStatus_TeamStatus) ProtoMessage()    {}
func (*CMsgTeamFanContentStatus_TeamStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{6, 0}
}

func (m *CMsgTeamFanContentStatus_TeamStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgTeamFanContentStatus_TeamStatus.Unmarshal(m, b)
}
func (m *CMsgTeamFanContentStatus_TeamStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgTeamFanContentStatus_TeamStatus.Marshal(b, m, deterministic)
}
func (m *CMsgTeamFanContentStatus_TeamStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgTeamFanContentStatus_TeamStatus.Merge(m, src)
}
func (m *CMsgTeamFanContentStatus_TeamStatus) XXX_Size() int {
	return xxx_messageInfo_CMsgTeamFanContentStatus_TeamStatus.Size(m)
}
func (m *CMsgTeamFanContentStatus_TeamStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgTeamFanContentStatus_TeamStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgTeamFanContentStatus_TeamStatus proto.InternalMessageInfo

const Default_CMsgTeamFanContentStatus_TeamStatus_Status ETeamFanContentStatus = ETeamFanContentStatus_TEAM_FAN_CONTENT_STATUS_INVALID

func (m *CMsgTeamFanContentStatus_TeamStatus) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetLogoUrl() string {
	if m != nil && m.LogoUrl != nil {
		return *m.LogoUrl
	}
	return ""
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetStatus() ETeamFanContentStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_CMsgTeamFanContentStatus_TeamStatus_Status
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetUgcLogo() uint64 {
	if m != nil && m.UgcLogo != nil {
		return *m.UgcLogo
	}
	return 0
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetWorkshopAccountId() uint32 {
	if m != nil && m.WorkshopAccountId != nil {
		return *m.WorkshopAccountId
	}
	return 0
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetAbbreviation() string {
	if m != nil && m.Abbreviation != nil {
		return *m.Abbreviation
	}
	return ""
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetVoicelineCount() uint32 {
	if m != nil && m.VoicelineCount != nil {
		return *m.VoicelineCount
	}
	return 0
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetSprayCount() uint32 {
	if m != nil && m.SprayCount != nil {
		return *m.SprayCount
	}
	return 0
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetEmoticonCount() uint32 {
	if m != nil && m.EmoticonCount != nil {
		return *m.EmoticonCount
	}
	return 0
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetWallpaperCount() uint32 {
	if m != nil && m.WallpaperCount != nil {
		return *m.WallpaperCount
	}
	return 0
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetCommentTimestamp() uint32 {
	if m != nil && m.CommentTimestamp != nil {
		return *m.CommentTimestamp
	}
	return 0
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetAssetStatus() []*CMsgTeamFanContentAssetStatus {
	if m != nil {
		return m.AssetStatus
	}
	return nil
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetEmailTimestamp() uint32 {
	if m != nil && m.EmailTimestamp != nil {
		return *m.EmailTimestamp
	}
	return 0
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetEmailTier() uint32 {
	if m != nil && m.EmailTier != nil {
		return *m.EmailTier
	}
	return 0
}

func (m *CMsgTeamFanContentStatus_TeamStatus) GetLanguages() string {
	if m != nil && m.Languages != nil {
		return *m.Languages
	}
	return ""
}

type CMsgTeamFanContentAutographStatus struct {
	TeamAutographs       []*CMsgTeamFanContentAutographStatus_TeamStatus `protobuf:"bytes,1,rep,name=team_autographs,json=teamAutographs" json:"team_autographs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *CMsgTeamFanContentAutographStatus) Reset()         { *m = CMsgTeamFanContentAutographStatus{} }
func (m *CMsgTeamFanContentAutographStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgTeamFanContentAutographStatus) ProtoMessage()    {}
func (*CMsgTeamFanContentAutographStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{7}
}

func (m *CMsgTeamFanContentAutographStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgTeamFanContentAutographStatus.Unmarshal(m, b)
}
func (m *CMsgTeamFanContentAutographStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgTeamFanContentAutographStatus.Marshal(b, m, deterministic)
}
func (m *CMsgTeamFanContentAutographStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgTeamFanContentAutographStatus.Merge(m, src)
}
func (m *CMsgTeamFanContentAutographStatus) XXX_Size() int {
	return xxx_messageInfo_CMsgTeamFanContentAutographStatus.Size(m)
}
func (m *CMsgTeamFanContentAutographStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgTeamFanContentAutographStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgTeamFanContentAutographStatus proto.InternalMessageInfo

func (m *CMsgTeamFanContentAutographStatus) GetTeamAutographs() []*CMsgTeamFanContentAutographStatus_TeamStatus {
	if m != nil {
		return m.TeamAutographs
	}
	return nil
}

type CMsgTeamFanContentAutographStatus_AutographStatus struct {
	ProName              *string  `protobuf:"bytes,1,opt,name=pro_name,json=proName" json:"pro_name,omitempty"`
	AccountId            *uint32  `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Timestamp            *uint32  `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	File                 *string  `protobuf:"bytes,4,opt,name=file" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgTeamFanContentAutographStatus_AutographStatus) Reset() {
	*m = CMsgTeamFanContentAutographStatus_AutographStatus{}
}
func (m *CMsgTeamFanContentAutographStatus_AutographStatus) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgTeamFanContentAutographStatus_AutographStatus) ProtoMessage() {}
func (*CMsgTeamFanContentAutographStatus_AutographStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{7, 0}
}

func (m *CMsgTeamFanContentAutographStatus_AutographStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgTeamFanContentAutographStatus_AutographStatus.Unmarshal(m, b)
}
func (m *CMsgTeamFanContentAutographStatus_AutographStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgTeamFanContentAutographStatus_AutographStatus.Marshal(b, m, deterministic)
}
func (m *CMsgTeamFanContentAutographStatus_AutographStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgTeamFanContentAutographStatus_AutographStatus.Merge(m, src)
}
func (m *CMsgTeamFanContentAutographStatus_AutographStatus) XXX_Size() int {
	return xxx_messageInfo_CMsgTeamFanContentAutographStatus_AutographStatus.Size(m)
}
func (m *CMsgTeamFanContentAutographStatus_AutographStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgTeamFanContentAutographStatus_AutographStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgTeamFanContentAutographStatus_AutographStatus proto.InternalMessageInfo

func (m *CMsgTeamFanContentAutographStatus_AutographStatus) GetProName() string {
	if m != nil && m.ProName != nil {
		return *m.ProName
	}
	return ""
}

func (m *CMsgTeamFanContentAutographStatus_AutographStatus) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgTeamFanContentAutographStatus_AutographStatus) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgTeamFanContentAutographStatus_AutographStatus) GetFile() string {
	if m != nil && m.File != nil {
		return *m.File
	}
	return ""
}

type CMsgTeamFanContentAutographStatus_TeamStatus struct {
	Name                 *string                                              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	TeamId               *uint32                                              `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Autographs           []*CMsgTeamFanContentAutographStatus_AutographStatus `protobuf:"bytes,3,rep,name=autographs" json:"autographs,omitempty"`
	WorkshopAccountId    *uint32                                              `protobuf:"varint,4,opt,name=workshop_account_id,json=workshopAccountId" json:"workshop_account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *CMsgTeamFanContentAutographStatus_TeamStatus) Reset() {
	*m = CMsgTeamFanContentAutographStatus_TeamStatus{}
}
func (m *CMsgTeamFanContentAutographStatus_TeamStatus) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgTeamFanContentAutographStatus_TeamStatus) ProtoMessage() {}
func (*CMsgTeamFanContentAutographStatus_TeamStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{7, 1}
}

func (m *CMsgTeamFanContentAutographStatus_TeamStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgTeamFanContentAutographStatus_TeamStatus.Unmarshal(m, b)
}
func (m *CMsgTeamFanContentAutographStatus_TeamStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgTeamFanContentAutographStatus_TeamStatus.Marshal(b, m, deterministic)
}
func (m *CMsgTeamFanContentAutographStatus_TeamStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgTeamFanContentAutographStatus_TeamStatus.Merge(m, src)
}
func (m *CMsgTeamFanContentAutographStatus_TeamStatus) XXX_Size() int {
	return xxx_messageInfo_CMsgTeamFanContentAutographStatus_TeamStatus.Size(m)
}
func (m *CMsgTeamFanContentAutographStatus_TeamStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgTeamFanContentAutographStatus_TeamStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgTeamFanContentAutographStatus_TeamStatus proto.InternalMessageInfo

func (m *CMsgTeamFanContentAutographStatus_TeamStatus) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgTeamFanContentAutographStatus_TeamStatus) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgTeamFanContentAutographStatus_TeamStatus) GetAutographs() []*CMsgTeamFanContentAutographStatus_AutographStatus {
	if m != nil {
		return m.Autographs
	}
	return nil
}

func (m *CMsgTeamFanContentAutographStatus_TeamStatus) GetWorkshopAccountId() uint32 {
	if m != nil && m.WorkshopAccountId != nil {
		return *m.WorkshopAccountId
	}
	return 0
}

type CMsgDPCEvent struct {
	Event                          *CMsgDPCEvent_ELeagueEvent     `protobuf:"varint,1,opt,name=event,enum=protocol.CMsgDPCEvent_ELeagueEvent,def=0" json:"event,omitempty"`
	EventType                      *CMsgDPCEvent_ELeagueEventType `protobuf:"varint,2,opt,name=event_type,json=eventType,enum=protocol.CMsgDPCEvent_ELeagueEventType,def=0" json:"event_type,omitempty"`
	Leagues                        []*CMsgDPCEvent_League         `protobuf:"bytes,3,rep,name=leagues" json:"leagues,omitempty"`
	RegistrationPeriod             *uint32                        `protobuf:"varint,4,opt,name=registration_period,json=registrationPeriod" json:"registration_period,omitempty"`
	IsEventUpcoming                *bool                          `protobuf:"varint,5,opt,name=is_event_upcoming,json=isEventUpcoming" json:"is_event_upcoming,omitempty"`
	IsEventCompleted               *bool                          `protobuf:"varint,6,opt,name=is_event_completed,json=isEventCompleted" json:"is_event_completed,omitempty"`
	EventName                      *string                        `protobuf:"bytes,7,opt,name=event_name,json=eventName" json:"event_name,omitempty"`
	MulticastLeagueId              *uint32                        `protobuf:"varint,8,opt,name=multicast_league_id,json=multicastLeagueId" json:"multicast_league_id,omitempty"`
	MulticastStreams               []uint32                       `protobuf:"varint,9,rep,name=multicast_streams,json=multicastStreams" json:"multicast_streams,omitempty"`
	Tour                           *CMsgDPCEvent_ETour            `protobuf:"varint,10,opt,name=tour,enum=protocol.CMsgDPCEvent_ETour,def=0" json:"tour,omitempty"`
	TimestampDropLock              *uint32                        `protobuf:"varint,12,opt,name=timestamp_drop_lock,json=timestampDropLock" json:"timestamp_drop_lock,omitempty"`
	TimestampAddLock               *uint32                        `protobuf:"varint,13,opt,name=timestamp_add_lock,json=timestampAddLock" json:"timestamp_add_lock,omitempty"`
	TimestampContentDeadline       *uint32                        `protobuf:"varint,14,opt,name=timestamp_content_deadline,json=timestampContentDeadline" json:"timestamp_content_deadline,omitempty"`
	IsFantasyEnabled               *bool                          `protobuf:"varint,15,opt,name=is_fantasy_enabled,json=isFantasyEnabled" json:"is_fantasy_enabled,omitempty"`
	TimestampContentReviewDeadline *uint32                        `protobuf:"varint,16,opt,name=timestamp_content_review_deadline,json=timestampContentReviewDeadline" json:"timestamp_content_review_deadline,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                       `json:"-"`
	XXX_unrecognized               []byte                         `json:"-"`
	XXX_sizecache                  int32                          `json:"-"`
}

func (m *CMsgDPCEvent) Reset()         { *m = CMsgDPCEvent{} }
func (m *CMsgDPCEvent) String() string { return proto.CompactTextString(m) }
func (*CMsgDPCEvent) ProtoMessage()    {}
func (*CMsgDPCEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{8}
}

func (m *CMsgDPCEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDPCEvent.Unmarshal(m, b)
}
func (m *CMsgDPCEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDPCEvent.Marshal(b, m, deterministic)
}
func (m *CMsgDPCEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDPCEvent.Merge(m, src)
}
func (m *CMsgDPCEvent) XXX_Size() int {
	return xxx_messageInfo_CMsgDPCEvent.Size(m)
}
func (m *CMsgDPCEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDPCEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDPCEvent proto.InternalMessageInfo

const Default_CMsgDPCEvent_Event CMsgDPCEvent_ELeagueEvent = CMsgDPCEvent_EVENT_INVALID
const Default_CMsgDPCEvent_EventType CMsgDPCEvent_ELeagueEventType = CMsgDPCEvent_UNKNOWN
const Default_CMsgDPCEvent_Tour CMsgDPCEvent_ETour = CMsgDPCEvent_TOUR_NONE

func (m *CMsgDPCEvent) GetEvent() CMsgDPCEvent_ELeagueEvent {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return Default_CMsgDPCEvent_Event
}

func (m *CMsgDPCEvent) GetEventType() CMsgDPCEvent_ELeagueEventType {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return Default_CMsgDPCEvent_EventType
}

func (m *CMsgDPCEvent) GetLeagues() []*CMsgDPCEvent_League {
	if m != nil {
		return m.Leagues
	}
	return nil
}

func (m *CMsgDPCEvent) GetRegistrationPeriod() uint32 {
	if m != nil && m.RegistrationPeriod != nil {
		return *m.RegistrationPeriod
	}
	return 0
}

func (m *CMsgDPCEvent) GetIsEventUpcoming() bool {
	if m != nil && m.IsEventUpcoming != nil {
		return *m.IsEventUpcoming
	}
	return false
}

func (m *CMsgDPCEvent) GetIsEventCompleted() bool {
	if m != nil && m.IsEventCompleted != nil {
		return *m.IsEventCompleted
	}
	return false
}

func (m *CMsgDPCEvent) GetEventName() string {
	if m != nil && m.EventName != nil {
		return *m.EventName
	}
	return ""
}

func (m *CMsgDPCEvent) GetMulticastLeagueId() uint32 {
	if m != nil && m.MulticastLeagueId != nil {
		return *m.MulticastLeagueId
	}
	return 0
}

func (m *CMsgDPCEvent) GetMulticastStreams() []uint32 {
	if m != nil {
		return m.MulticastStreams
	}
	return nil
}

func (m *CMsgDPCEvent) GetTour() CMsgDPCEvent_ETour {
	if m != nil && m.Tour != nil {
		return *m.Tour
	}
	return Default_CMsgDPCEvent_Tour
}

func (m *CMsgDPCEvent) GetTimestampDropLock() uint32 {
	if m != nil && m.TimestampDropLock != nil {
		return *m.TimestampDropLock
	}
	return 0
}

func (m *CMsgDPCEvent) GetTimestampAddLock() uint32 {
	if m != nil && m.TimestampAddLock != nil {
		return *m.TimestampAddLock
	}
	return 0
}

func (m *CMsgDPCEvent) GetTimestampContentDeadline() uint32 {
	if m != nil && m.TimestampContentDeadline != nil {
		return *m.TimestampContentDeadline
	}
	return 0
}

func (m *CMsgDPCEvent) GetIsFantasyEnabled() bool {
	if m != nil && m.IsFantasyEnabled != nil {
		return *m.IsFantasyEnabled
	}
	return false
}

func (m *CMsgDPCEvent) GetTimestampContentReviewDeadline() uint32 {
	if m != nil && m.TimestampContentReviewDeadline != nil {
		return *m.TimestampContentReviewDeadline
	}
	return 0
}

type CMsgDPCEvent_PhaseInfo struct {
	Phase                *CMsgDPCEvent_ELeagueEventPhase `protobuf:"varint,1,opt,name=phase,enum=protocol.CMsgDPCEvent_ELeagueEventPhase,def=0" json:"phase,omitempty"`
	NodeGroupId          *uint32                         `protobuf:"varint,2,opt,name=node_group_id,json=nodeGroupId" json:"node_group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CMsgDPCEvent_PhaseInfo) Reset()         { *m = CMsgDPCEvent_PhaseInfo{} }
func (m *CMsgDPCEvent_PhaseInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDPCEvent_PhaseInfo) ProtoMessage()    {}
func (*CMsgDPCEvent_PhaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{8, 0}
}

func (m *CMsgDPCEvent_PhaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDPCEvent_PhaseInfo.Unmarshal(m, b)
}
func (m *CMsgDPCEvent_PhaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDPCEvent_PhaseInfo.Marshal(b, m, deterministic)
}
func (m *CMsgDPCEvent_PhaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDPCEvent_PhaseInfo.Merge(m, src)
}
func (m *CMsgDPCEvent_PhaseInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgDPCEvent_PhaseInfo.Size(m)
}
func (m *CMsgDPCEvent_PhaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDPCEvent_PhaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDPCEvent_PhaseInfo proto.InternalMessageInfo

const Default_CMsgDPCEvent_PhaseInfo_Phase CMsgDPCEvent_ELeagueEventPhase = CMsgDPCEvent_PHASE_INVALID

func (m *CMsgDPCEvent_PhaseInfo) GetPhase() CMsgDPCEvent_ELeagueEventPhase {
	if m != nil && m.Phase != nil {
		return *m.Phase
	}
	return Default_CMsgDPCEvent_PhaseInfo_Phase
}

func (m *CMsgDPCEvent_PhaseInfo) GetNodeGroupId() uint32 {
	if m != nil && m.NodeGroupId != nil {
		return *m.NodeGroupId
	}
	return 0
}

type CMsgDPCEvent_League struct {
	Region               *ELeagueRegion            `protobuf:"varint,1,opt,name=region,enum=protocol.ELeagueRegion,def=0" json:"region,omitempty"`
	Division             *ELeagueDivision          `protobuf:"varint,2,opt,name=division,enum=protocol.ELeagueDivision,def=0" json:"division,omitempty"`
	LeagueId             *uint32                   `protobuf:"varint,3,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	Phases               []*CMsgDPCEvent_PhaseInfo `protobuf:"bytes,4,rep,name=phases" json:"phases,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CMsgDPCEvent_League) Reset()         { *m = CMsgDPCEvent_League{} }
func (m *CMsgDPCEvent_League) String() string { return proto.CompactTextString(m) }
func (*CMsgDPCEvent_League) ProtoMessage()    {}
func (*CMsgDPCEvent_League) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{8, 1}
}

func (m *CMsgDPCEvent_League) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDPCEvent_League.Unmarshal(m, b)
}
func (m *CMsgDPCEvent_League) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDPCEvent_League.Marshal(b, m, deterministic)
}
func (m *CMsgDPCEvent_League) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDPCEvent_League.Merge(m, src)
}
func (m *CMsgDPCEvent_League) XXX_Size() int {
	return xxx_messageInfo_CMsgDPCEvent_League.Size(m)
}
func (m *CMsgDPCEvent_League) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDPCEvent_League.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDPCEvent_League proto.InternalMessageInfo

const Default_CMsgDPCEvent_League_Region ELeagueRegion = ELeagueRegion_LEAGUE_REGION_UNSET
const Default_CMsgDPCEvent_League_Division ELeagueDivision = ELeagueDivision_LEAGUE_DIVISION_UNSET

func (m *CMsgDPCEvent_League) GetRegion() ELeagueRegion {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return Default_CMsgDPCEvent_League_Region
}

func (m *CMsgDPCEvent_League) GetDivision() ELeagueDivision {
	if m != nil && m.Division != nil {
		return *m.Division
	}
	return Default_CMsgDPCEvent_League_Division
}

func (m *CMsgDPCEvent_League) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDPCEvent_League) GetPhases() []*CMsgDPCEvent_PhaseInfo {
	if m != nil {
		return m.Phases
	}
	return nil
}

type CMsgDPCEventList struct {
	Events               []*CMsgDPCEvent `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CMsgDPCEventList) Reset()         { *m = CMsgDPCEventList{} }
func (m *CMsgDPCEventList) String() string { return proto.CompactTextString(m) }
func (*CMsgDPCEventList) ProtoMessage()    {}
func (*CMsgDPCEventList) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{9}
}

func (m *CMsgDPCEventList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDPCEventList.Unmarshal(m, b)
}
func (m *CMsgDPCEventList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDPCEventList.Marshal(b, m, deterministic)
}
func (m *CMsgDPCEventList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDPCEventList.Merge(m, src)
}
func (m *CMsgDPCEventList) XXX_Size() int {
	return xxx_messageInfo_CMsgDPCEventList.Size(m)
}
func (m *CMsgDPCEventList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDPCEventList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDPCEventList proto.InternalMessageInfo

func (m *CMsgDPCEventList) GetEvents() []*CMsgDPCEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type CMsgDOTAFantasyCardLineup struct {
	Periods              []*CMsgDOTAFantasyCardLineup_Period `protobuf:"bytes,1,rep,name=periods" json:"periods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgDOTAFantasyCardLineup) Reset()         { *m = CMsgDOTAFantasyCardLineup{} }
func (m *CMsgDOTAFantasyCardLineup) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyCardLineup) ProtoMessage()    {}
func (*CMsgDOTAFantasyCardLineup) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{10}
}

func (m *CMsgDOTAFantasyCardLineup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyCardLineup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyCardLineup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyCardLineup.Merge(m, src)
}
func (m *CMsgDOTAFantasyCardLineup) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup.Size(m)
}
func (m *CMsgDOTAFantasyCardLineup) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyCardLineup.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyCardLineup proto.InternalMessageInfo

func (m *CMsgDOTAFantasyCardLineup) GetPeriods() []*CMsgDOTAFantasyCardLineup_Period {
	if m != nil {
		return m.Periods
	}
	return nil
}

type CMsgDOTAFantasyCardLineup_CardBonus struct {
	BonusStat            *uint32  `protobuf:"varint,1,opt,name=bonus_stat,json=bonusStat" json:"bonus_stat,omitempty"`
	BonusValue           *uint32  `protobuf:"varint,2,opt,name=bonus_value,json=bonusValue" json:"bonus_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyCardLineup_CardBonus) Reset()         { *m = CMsgDOTAFantasyCardLineup_CardBonus{} }
func (m *CMsgDOTAFantasyCardLineup_CardBonus) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyCardLineup_CardBonus) ProtoMessage()    {}
func (*CMsgDOTAFantasyCardLineup_CardBonus) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{10, 0}
}

func (m *CMsgDOTAFantasyCardLineup_CardBonus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_CardBonus.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyCardLineup_CardBonus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_CardBonus.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyCardLineup_CardBonus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyCardLineup_CardBonus.Merge(m, src)
}
func (m *CMsgDOTAFantasyCardLineup_CardBonus) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_CardBonus.Size(m)
}
func (m *CMsgDOTAFantasyCardLineup_CardBonus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyCardLineup_CardBonus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyCardLineup_CardBonus proto.InternalMessageInfo

func (m *CMsgDOTAFantasyCardLineup_CardBonus) GetBonusStat() uint32 {
	if m != nil && m.BonusStat != nil {
		return *m.BonusStat
	}
	return 0
}

func (m *CMsgDOTAFantasyCardLineup_CardBonus) GetBonusValue() uint32 {
	if m != nil && m.BonusValue != nil {
		return *m.BonusValue
	}
	return 0
}

type CMsgDOTAFantasyCardLineup_Card struct {
	PlayerAccountId      *uint32                                `protobuf:"varint,1,opt,name=player_account_id,json=playerAccountId" json:"player_account_id,omitempty"`
	PlayerName           *string                                `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	TeamId               *uint32                                `protobuf:"varint,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	TeamName             *string                                `protobuf:"bytes,4,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	Role                 *uint32                                `protobuf:"varint,5,opt,name=role" json:"role,omitempty"`
	Bonuses              []*CMsgDOTAFantasyCardLineup_CardBonus `protobuf:"bytes,6,rep,name=bonuses" json:"bonuses,omitempty"`
	Score                *float32                               `protobuf:"fixed32,7,opt,name=score" json:"score,omitempty"`
	Finalized            *bool                                  `protobuf:"varint,8,opt,name=finalized" json:"finalized,omitempty"`
	ItemId               *uint64                                `protobuf:"varint,9,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *CMsgDOTAFantasyCardLineup_Card) Reset()         { *m = CMsgDOTAFantasyCardLineup_Card{} }
func (m *CMsgDOTAFantasyCardLineup_Card) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyCardLineup_Card) ProtoMessage()    {}
func (*CMsgDOTAFantasyCardLineup_Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{10, 1}
}

func (m *CMsgDOTAFantasyCardLineup_Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_Card.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyCardLineup_Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_Card.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyCardLineup_Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyCardLineup_Card.Merge(m, src)
}
func (m *CMsgDOTAFantasyCardLineup_Card) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_Card.Size(m)
}
func (m *CMsgDOTAFantasyCardLineup_Card) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyCardLineup_Card.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyCardLineup_Card proto.InternalMessageInfo

func (m *CMsgDOTAFantasyCardLineup_Card) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyCardLineup_Card) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CMsgDOTAFantasyCardLineup_Card) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTAFantasyCardLineup_Card) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyCardLineup_Card) GetRole() uint32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *CMsgDOTAFantasyCardLineup_Card) GetBonuses() []*CMsgDOTAFantasyCardLineup_CardBonus {
	if m != nil {
		return m.Bonuses
	}
	return nil
}

func (m *CMsgDOTAFantasyCardLineup_Card) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgDOTAFantasyCardLineup_Card) GetFinalized() bool {
	if m != nil && m.Finalized != nil {
		return *m.Finalized
	}
	return false
}

func (m *CMsgDOTAFantasyCardLineup_Card) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgDOTAFantasyCardLineup_League struct {
	LeagueId             *uint32                           `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	Cards                []*CMsgDOTAFantasyCardLineup_Card `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
	Score                *float32                          `protobuf:"fixed32,3,opt,name=score" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CMsgDOTAFantasyCardLineup_League) Reset()         { *m = CMsgDOTAFantasyCardLineup_League{} }
func (m *CMsgDOTAFantasyCardLineup_League) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyCardLineup_League) ProtoMessage()    {}
func (*CMsgDOTAFantasyCardLineup_League) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{10, 2}
}

func (m *CMsgDOTAFantasyCardLineup_League) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_League.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyCardLineup_League) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_League.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyCardLineup_League) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyCardLineup_League.Merge(m, src)
}
func (m *CMsgDOTAFantasyCardLineup_League) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_League.Size(m)
}
func (m *CMsgDOTAFantasyCardLineup_League) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyCardLineup_League.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyCardLineup_League proto.InternalMessageInfo

func (m *CMsgDOTAFantasyCardLineup_League) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyCardLineup_League) GetCards() []*CMsgDOTAFantasyCardLineup_Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *CMsgDOTAFantasyCardLineup_League) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CMsgDOTAFantasyCardLineup_Period struct {
	FantasyPeriod        *uint32                             `protobuf:"varint,1,opt,name=fantasy_period,json=fantasyPeriod,def=4294967295" json:"fantasy_period,omitempty"`
	TimestampStart       *uint32                             `protobuf:"varint,2,opt,name=timestamp_start,json=timestampStart" json:"timestamp_start,omitempty"`
	TimestampEnd         *uint32                             `protobuf:"varint,3,opt,name=timestamp_end,json=timestampEnd" json:"timestamp_end,omitempty"`
	Leagues              []*CMsgDOTAFantasyCardLineup_League `protobuf:"bytes,4,rep,name=leagues" json:"leagues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgDOTAFantasyCardLineup_Period) Reset()         { *m = CMsgDOTAFantasyCardLineup_Period{} }
func (m *CMsgDOTAFantasyCardLineup_Period) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyCardLineup_Period) ProtoMessage()    {}
func (*CMsgDOTAFantasyCardLineup_Period) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{10, 3}
}

func (m *CMsgDOTAFantasyCardLineup_Period) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_Period.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyCardLineup_Period) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_Period.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyCardLineup_Period) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyCardLineup_Period.Merge(m, src)
}
func (m *CMsgDOTAFantasyCardLineup_Period) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyCardLineup_Period.Size(m)
}
func (m *CMsgDOTAFantasyCardLineup_Period) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyCardLineup_Period.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyCardLineup_Period proto.InternalMessageInfo

const Default_CMsgDOTAFantasyCardLineup_Period_FantasyPeriod uint32 = 4294967295

func (m *CMsgDOTAFantasyCardLineup_Period) GetFantasyPeriod() uint32 {
	if m != nil && m.FantasyPeriod != nil {
		return *m.FantasyPeriod
	}
	return Default_CMsgDOTAFantasyCardLineup_Period_FantasyPeriod
}

func (m *CMsgDOTAFantasyCardLineup_Period) GetTimestampStart() uint32 {
	if m != nil && m.TimestampStart != nil {
		return *m.TimestampStart
	}
	return 0
}

func (m *CMsgDOTAFantasyCardLineup_Period) GetTimestampEnd() uint32 {
	if m != nil && m.TimestampEnd != nil {
		return *m.TimestampEnd
	}
	return 0
}

func (m *CMsgDOTAFantasyCardLineup_Period) GetLeagues() []*CMsgDOTAFantasyCardLineup_League {
	if m != nil {
		return m.Leagues
	}
	return nil
}

type CMsgDOTAFantasyCardList struct {
	Cards                []*CMsgDOTAFantasyCardList_Card `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CMsgDOTAFantasyCardList) Reset()         { *m = CMsgDOTAFantasyCardList{} }
func (m *CMsgDOTAFantasyCardList) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyCardList) ProtoMessage()    {}
func (*CMsgDOTAFantasyCardList) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{11}
}

func (m *CMsgDOTAFantasyCardList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyCardList.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyCardList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyCardList.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyCardList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyCardList.Merge(m, src)
}
func (m *CMsgDOTAFantasyCardList) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyCardList.Size(m)
}
func (m *CMsgDOTAFantasyCardList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyCardList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyCardList proto.InternalMessageInfo

func (m *CMsgDOTAFantasyCardList) GetCards() []*CMsgDOTAFantasyCardList_Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type CMsgDOTAFantasyCardList_CardBonus struct {
	BonusStat            *uint32  `protobuf:"varint,1,opt,name=bonus_stat,json=bonusStat" json:"bonus_stat,omitempty"`
	BonusValue           *uint32  `protobuf:"varint,2,opt,name=bonus_value,json=bonusValue" json:"bonus_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyCardList_CardBonus) Reset()         { *m = CMsgDOTAFantasyCardList_CardBonus{} }
func (m *CMsgDOTAFantasyCardList_CardBonus) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyCardList_CardBonus) ProtoMessage()    {}
func (*CMsgDOTAFantasyCardList_CardBonus) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{11, 0}
}

func (m *CMsgDOTAFantasyCardList_CardBonus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyCardList_CardBonus.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyCardList_CardBonus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyCardList_CardBonus.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyCardList_CardBonus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyCardList_CardBonus.Merge(m, src)
}
func (m *CMsgDOTAFantasyCardList_CardBonus) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyCardList_CardBonus.Size(m)
}
func (m *CMsgDOTAFantasyCardList_CardBonus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyCardList_CardBonus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyCardList_CardBonus proto.InternalMessageInfo

func (m *CMsgDOTAFantasyCardList_CardBonus) GetBonusStat() uint32 {
	if m != nil && m.BonusStat != nil {
		return *m.BonusStat
	}
	return 0
}

func (m *CMsgDOTAFantasyCardList_CardBonus) GetBonusValue() uint32 {
	if m != nil && m.BonusValue != nil {
		return *m.BonusValue
	}
	return 0
}

type CMsgDOTAFantasyCardList_Card struct {
	PlayerAccountId      *uint32                              `protobuf:"varint,1,opt,name=player_account_id,json=playerAccountId" json:"player_account_id,omitempty"`
	PlayerName           *string                              `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	TeamId               *uint32                              `protobuf:"varint,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	TeamName             *string                              `protobuf:"bytes,4,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	Role                 *uint32                              `protobuf:"varint,5,opt,name=role" json:"role,omitempty"`
	Bonuses              []*CMsgDOTAFantasyCardList_CardBonus `protobuf:"bytes,6,rep,name=bonuses" json:"bonuses,omitempty"`
	ItemId               *uint64                              `protobuf:"varint,8,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *CMsgDOTAFantasyCardList_Card) Reset()         { *m = CMsgDOTAFantasyCardList_Card{} }
func (m *CMsgDOTAFantasyCardList_Card) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyCardList_Card) ProtoMessage()    {}
func (*CMsgDOTAFantasyCardList_Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{11, 1}
}

func (m *CMsgDOTAFantasyCardList_Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyCardList_Card.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyCardList_Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyCardList_Card.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyCardList_Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyCardList_Card.Merge(m, src)
}
func (m *CMsgDOTAFantasyCardList_Card) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyCardList_Card.Size(m)
}
func (m *CMsgDOTAFantasyCardList_Card) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyCardList_Card.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyCardList_Card proto.InternalMessageInfo

func (m *CMsgDOTAFantasyCardList_Card) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyCardList_Card) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CMsgDOTAFantasyCardList_Card) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTAFantasyCardList_Card) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyCardList_Card) GetRole() uint32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *CMsgDOTAFantasyCardList_Card) GetBonuses() []*CMsgDOTAFantasyCardList_CardBonus {
	if m != nil {
		return m.Bonuses
	}
	return nil
}

func (m *CMsgDOTAFantasyCardList_Card) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgChatToxicityToxicPlayerMatchesReport struct {
	Rows                 []*CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow `protobuf:"bytes,1,rep,name=rows" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                  `json:"-"`
	XXX_unrecognized     []byte                                                    `json:"-"`
	XXX_sizecache        int32                                                     `json:"-"`
}

func (m *CMsgChatToxicityToxicPlayerMatchesReport) Reset() {
	*m = CMsgChatToxicityToxicPlayerMatchesReport{}
}
func (m *CMsgChatToxicityToxicPlayerMatchesReport) String() string { return proto.CompactTextString(m) }
func (*CMsgChatToxicityToxicPlayerMatchesReport) ProtoMessage()    {}
func (*CMsgChatToxicityToxicPlayerMatchesReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{12}
}

func (m *CMsgChatToxicityToxicPlayerMatchesReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport.Unmarshal(m, b)
}
func (m *CMsgChatToxicityToxicPlayerMatchesReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport.Marshal(b, m, deterministic)
}
func (m *CMsgChatToxicityToxicPlayerMatchesReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport.Merge(m, src)
}
func (m *CMsgChatToxicityToxicPlayerMatchesReport) XXX_Size() int {
	return xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport.Size(m)
}
func (m *CMsgChatToxicityToxicPlayerMatchesReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport proto.InternalMessageInfo

func (m *CMsgChatToxicityToxicPlayerMatchesReport) GetRows() []*CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow {
	if m != nil {
		return m.Rows
	}
	return nil
}

type CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow struct {
	PlayerAccountId      *uint32  `protobuf:"varint,1,opt,name=player_account_id,json=playerAccountId" json:"player_account_id,omitempty"`
	NumMatchesSeen       *uint32  `protobuf:"varint,2,opt,name=num_matches_seen,json=numMatchesSeen" json:"num_matches_seen,omitempty"`
	NumMessages          *uint32  `protobuf:"varint,3,opt,name=num_messages,json=numMessages" json:"num_messages,omitempty"`
	NumMessagesToxic     *uint32  `protobuf:"varint,4,opt,name=num_messages_toxic,json=numMessagesToxic" json:"num_messages_toxic,omitempty"`
	FirstMatchSeen       *uint64  `protobuf:"varint,5,opt,name=first_match_seen,json=firstMatchSeen" json:"first_match_seen,omitempty"`
	LastMatchSeen        *uint64  `protobuf:"varint,6,opt,name=last_match_seen,json=lastMatchSeen" json:"last_match_seen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) Reset() {
	*m = CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow{}
}
func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) ProtoMessage() {}
func (*CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{12, 0}
}

func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow.Unmarshal(m, b)
}
func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow.Marshal(b, m, deterministic)
}
func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow.Merge(m, src)
}
func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) XXX_Size() int {
	return xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow.Size(m)
}
func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow proto.InternalMessageInfo

func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) GetNumMatchesSeen() uint32 {
	if m != nil && m.NumMatchesSeen != nil {
		return *m.NumMatchesSeen
	}
	return 0
}

func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) GetNumMessages() uint32 {
	if m != nil && m.NumMessages != nil {
		return *m.NumMessages
	}
	return 0
}

func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) GetNumMessagesToxic() uint32 {
	if m != nil && m.NumMessagesToxic != nil {
		return *m.NumMessagesToxic
	}
	return 0
}

func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) GetFirstMatchSeen() uint64 {
	if m != nil && m.FirstMatchSeen != nil {
		return *m.FirstMatchSeen
	}
	return 0
}

func (m *CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow) GetLastMatchSeen() uint64 {
	if m != nil && m.LastMatchSeen != nil {
		return *m.LastMatchSeen
	}
	return 0
}

type CMsgChatToxicityReport struct {
	NumMatchesSeen           *uint32  `protobuf:"varint,1,opt,name=num_matches_seen,json=numMatchesSeen" json:"num_matches_seen,omitempty"`
	NumMessages              *uint32  `protobuf:"varint,2,opt,name=num_messages,json=numMessages" json:"num_messages,omitempty"`
	NumMessagesMlThinksToxic *uint32  `protobuf:"varint,4,opt,name=num_messages_ml_thinks_toxic,json=numMessagesMlThinksToxic" json:"num_messages_ml_thinks_toxic,omitempty"`
	Status                   *string  `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	Result                   *uint32  `protobuf:"varint,6,opt,name=result" json:"result,omitempty"`
	Message                  *string  `protobuf:"bytes,7,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *CMsgChatToxicityReport) Reset()         { *m = CMsgChatToxicityReport{} }
func (m *CMsgChatToxicityReport) String() string { return proto.CompactTextString(m) }
func (*CMsgChatToxicityReport) ProtoMessage()    {}
func (*CMsgChatToxicityReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{13}
}

func (m *CMsgChatToxicityReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgChatToxicityReport.Unmarshal(m, b)
}
func (m *CMsgChatToxicityReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgChatToxicityReport.Marshal(b, m, deterministic)
}
func (m *CMsgChatToxicityReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgChatToxicityReport.Merge(m, src)
}
func (m *CMsgChatToxicityReport) XXX_Size() int {
	return xxx_messageInfo_CMsgChatToxicityReport.Size(m)
}
func (m *CMsgChatToxicityReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgChatToxicityReport.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgChatToxicityReport proto.InternalMessageInfo

func (m *CMsgChatToxicityReport) GetNumMatchesSeen() uint32 {
	if m != nil && m.NumMatchesSeen != nil {
		return *m.NumMatchesSeen
	}
	return 0
}

func (m *CMsgChatToxicityReport) GetNumMessages() uint32 {
	if m != nil && m.NumMessages != nil {
		return *m.NumMessages
	}
	return 0
}

func (m *CMsgChatToxicityReport) GetNumMessagesMlThinksToxic() uint32 {
	if m != nil && m.NumMessagesMlThinksToxic != nil {
		return *m.NumMessagesMlThinksToxic
	}
	return 0
}

func (m *CMsgChatToxicityReport) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *CMsgChatToxicityReport) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CMsgChatToxicityReport) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CMsgGetTeamAuditInformation struct {
	TeamId               *uint32                               `protobuf:"varint,1,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	TeamName             *string                               `protobuf:"bytes,2,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	Actions              []*CMsgGetTeamAuditInformation_Action `protobuf:"bytes,3,rep,name=actions" json:"actions,omitempty"`
	LastUpdated          *uint32                               `protobuf:"varint,4,opt,name=last_updated,json=lastUpdated" json:"last_updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *CMsgGetTeamAuditInformation) Reset()         { *m = CMsgGetTeamAuditInformation{} }
func (m *CMsgGetTeamAuditInformation) String() string { return proto.CompactTextString(m) }
func (*CMsgGetTeamAuditInformation) ProtoMessage()    {}
func (*CMsgGetTeamAuditInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{14}
}

func (m *CMsgGetTeamAuditInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGetTeamAuditInformation.Unmarshal(m, b)
}
func (m *CMsgGetTeamAuditInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGetTeamAuditInformation.Marshal(b, m, deterministic)
}
func (m *CMsgGetTeamAuditInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGetTeamAuditInformation.Merge(m, src)
}
func (m *CMsgGetTeamAuditInformation) XXX_Size() int {
	return xxx_messageInfo_CMsgGetTeamAuditInformation.Size(m)
}
func (m *CMsgGetTeamAuditInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGetTeamAuditInformation.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGetTeamAuditInformation proto.InternalMessageInfo

func (m *CMsgGetTeamAuditInformation) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgGetTeamAuditInformation) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgGetTeamAuditInformation) GetActions() []*CMsgGetTeamAuditInformation_Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *CMsgGetTeamAuditInformation) GetLastUpdated() uint32 {
	if m != nil && m.LastUpdated != nil {
		return *m.LastUpdated
	}
	return 0
}

type CMsgGetTeamAuditInformation_Action struct {
	RegistrationPeriod   *uint32  `protobuf:"varint,1,opt,name=registration_period,json=registrationPeriod" json:"registration_period,omitempty"`
	AccountId            *uint32  `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Action               *uint32  `protobuf:"varint,3,opt,name=action" json:"action,omitempty"`
	Timestamp            *uint32  `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	PlayerName           *string  `protobuf:"bytes,5,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	PlayerRealName       *string  `protobuf:"bytes,6,opt,name=player_real_name,json=playerRealName" json:"player_real_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGetTeamAuditInformation_Action) Reset()         { *m = CMsgGetTeamAuditInformation_Action{} }
func (m *CMsgGetTeamAuditInformation_Action) String() string { return proto.CompactTextString(m) }
func (*CMsgGetTeamAuditInformation_Action) ProtoMessage()    {}
func (*CMsgGetTeamAuditInformation_Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{14, 0}
}

func (m *CMsgGetTeamAuditInformation_Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGetTeamAuditInformation_Action.Unmarshal(m, b)
}
func (m *CMsgGetTeamAuditInformation_Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGetTeamAuditInformation_Action.Marshal(b, m, deterministic)
}
func (m *CMsgGetTeamAuditInformation_Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGetTeamAuditInformation_Action.Merge(m, src)
}
func (m *CMsgGetTeamAuditInformation_Action) XXX_Size() int {
	return xxx_messageInfo_CMsgGetTeamAuditInformation_Action.Size(m)
}
func (m *CMsgGetTeamAuditInformation_Action) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGetTeamAuditInformation_Action.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGetTeamAuditInformation_Action proto.InternalMessageInfo

func (m *CMsgGetTeamAuditInformation_Action) GetRegistrationPeriod() uint32 {
	if m != nil && m.RegistrationPeriod != nil {
		return *m.RegistrationPeriod
	}
	return 0
}

func (m *CMsgGetTeamAuditInformation_Action) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGetTeamAuditInformation_Action) GetAction() uint32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

func (m *CMsgGetTeamAuditInformation_Action) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgGetTeamAuditInformation_Action) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CMsgGetTeamAuditInformation_Action) GetPlayerRealName() string {
	if m != nil && m.PlayerRealName != nil {
		return *m.PlayerRealName
	}
	return ""
}

type CMsgDOTADPCMatch struct {
	Match                *CMsgDOTAMatch      `protobuf:"bytes,1,opt,name=match" json:"match,omitempty"`
	Metadata             *CDOTAMatchMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CMsgDOTADPCMatch) Reset()         { *m = CMsgDOTADPCMatch{} }
func (m *CMsgDOTADPCMatch) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTADPCMatch) ProtoMessage()    {}
func (*CMsgDOTADPCMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb684e314d95fc71, []int{15}
}

func (m *CMsgDOTADPCMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTADPCMatch.Unmarshal(m, b)
}
func (m *CMsgDOTADPCMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTADPCMatch.Marshal(b, m, deterministic)
}
func (m *CMsgDOTADPCMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTADPCMatch.Merge(m, src)
}
func (m *CMsgDOTADPCMatch) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTADPCMatch.Size(m)
}
func (m *CMsgDOTADPCMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTADPCMatch.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTADPCMatch proto.InternalMessageInfo

func (m *CMsgDOTADPCMatch) GetMatch() *CMsgDOTAMatch {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *CMsgDOTADPCMatch) GetMetadata() *CDOTAMatchMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterEnum("protocol.ETeamFanContentStatus", ETeamFanContentStatus_name, ETeamFanContentStatus_value)
	proto.RegisterEnum("protocol.ETeamFanContentAssetType", ETeamFanContentAssetType_name, ETeamFanContentAssetType_value)
	proto.RegisterEnum("protocol.ETeamFanContentAssetStatus", ETeamFanContentAssetStatus_name, ETeamFanContentAssetStatus_value)
	proto.RegisterEnum("protocol.CMsgArcanaVotes_VotingState", CMsgArcanaVotes_VotingState_name, CMsgArcanaVotes_VotingState_value)
	proto.RegisterEnum("protocol.CMsgDOTADPCFeed_EFeedElementType", CMsgDOTADPCFeed_EFeedElementType_name, CMsgDOTADPCFeed_EFeedElementType_value)
	proto.RegisterEnum("protocol.CMsgTeamFanContentAssetStatusResponse_EResult", CMsgTeamFanContentAssetStatusResponse_EResult_name, CMsgTeamFanContentAssetStatusResponse_EResult_value)
	proto.RegisterEnum("protocol.CMsgDPCEvent_ELeagueEvent", CMsgDPCEvent_ELeagueEvent_name, CMsgDPCEvent_ELeagueEvent_value)
	proto.RegisterEnum("protocol.CMsgDPCEvent_ELeagueEventPhase", CMsgDPCEvent_ELeagueEventPhase_name, CMsgDPCEvent_ELeagueEventPhase_value)
	proto.RegisterEnum("protocol.CMsgDPCEvent_ELeagueEventType", CMsgDPCEvent_ELeagueEventType_name, CMsgDPCEvent_ELeagueEventType_value)
	proto.RegisterEnum("protocol.CMsgDPCEvent_ETour", CMsgDPCEvent_ETour_name, CMsgDPCEvent_ETour_value)
	proto.RegisterType((*CMsgArcanaVotes)(nil), "protocol.CMsgArcanaVotes")
	proto.RegisterType((*CMsgArcanaVotes_Match)(nil), "protocol.CMsgArcanaVotes.Match")
	proto.RegisterType((*CMsgDOTADPCFeed)(nil), "protocol.CMsgDOTADPCFeed")
	proto.RegisterType((*CMsgDOTADPCFeed_Element)(nil), "protocol.CMsgDOTADPCFeed.Element")
	proto.RegisterType((*CMsgDOTADPCUserInfo)(nil), "protocol.CMsgDOTADPCUserInfo")
	proto.RegisterType((*CMsgDraftTrivia)(nil), "protocol.CMsgDraftTrivia")
	proto.RegisterType((*CMsgDraftTrivia_DraftTriviaHeroInfo)(nil), "protocol.CMsgDraftTrivia.DraftTriviaHeroInfo")
	proto.RegisterType((*CMsgDraftTrivia_DraftTriviaMatchInfo)(nil), "protocol.CMsgDraftTrivia.DraftTriviaMatchInfo")
	proto.RegisterType((*CMsgDraftTrivia_PreviousResult)(nil), "protocol.CMsgDraftTrivia.PreviousResult")
	proto.RegisterType((*CMsgTeamFanContentAssetStatus)(nil), "protocol.CMsgTeamFanContentAssetStatus")
	proto.RegisterType((*CMsgTeamFanContentAssetStatusResponse)(nil), "protocol.CMsgTeamFanContentAssetStatusResponse")
	proto.RegisterType((*CMsgTeamFanContentStatus)(nil), "protocol.CMsgTeamFanContentStatus")
	proto.RegisterType((*CMsgTeamFanContentStatus_TeamStatus)(nil), "protocol.CMsgTeamFanContentStatus.TeamStatus")
	proto.RegisterType((*CMsgTeamFanContentAutographStatus)(nil), "protocol.CMsgTeamFanContentAutographStatus")
	proto.RegisterType((*CMsgTeamFanContentAutographStatus_AutographStatus)(nil), "protocol.CMsgTeamFanContentAutographStatus.AutographStatus")
	proto.RegisterType((*CMsgTeamFanContentAutographStatus_TeamStatus)(nil), "protocol.CMsgTeamFanContentAutographStatus.TeamStatus")
	proto.RegisterType((*CMsgDPCEvent)(nil), "protocol.CMsgDPCEvent")
	proto.RegisterType((*CMsgDPCEvent_PhaseInfo)(nil), "protocol.CMsgDPCEvent.PhaseInfo")
	proto.RegisterType((*CMsgDPCEvent_League)(nil), "protocol.CMsgDPCEvent.League")
	proto.RegisterType((*CMsgDPCEventList)(nil), "protocol.CMsgDPCEventList")
	proto.RegisterType((*CMsgDOTAFantasyCardLineup)(nil), "protocol.CMsgDOTAFantasyCardLineup")
	proto.RegisterType((*CMsgDOTAFantasyCardLineup_CardBonus)(nil), "protocol.CMsgDOTAFantasyCardLineup.CardBonus")
	proto.RegisterType((*CMsgDOTAFantasyCardLineup_Card)(nil), "protocol.CMsgDOTAFantasyCardLineup.Card")
	proto.RegisterType((*CMsgDOTAFantasyCardLineup_League)(nil), "protocol.CMsgDOTAFantasyCardLineup.League")
	proto.RegisterType((*CMsgDOTAFantasyCardLineup_Period)(nil), "protocol.CMsgDOTAFantasyCardLineup.Period")
	proto.RegisterType((*CMsgDOTAFantasyCardList)(nil), "protocol.CMsgDOTAFantasyCardList")
	proto.RegisterType((*CMsgDOTAFantasyCardList_CardBonus)(nil), "protocol.CMsgDOTAFantasyCardList.CardBonus")
	proto.RegisterType((*CMsgDOTAFantasyCardList_Card)(nil), "protocol.CMsgDOTAFantasyCardList.Card")
	proto.RegisterType((*CMsgChatToxicityToxicPlayerMatchesReport)(nil), "protocol.CMsgChatToxicityToxicPlayerMatchesReport")
	proto.RegisterType((*CMsgChatToxicityToxicPlayerMatchesReport_IndividualRow)(nil), "protocol.CMsgChatToxicityToxicPlayerMatchesReport.IndividualRow")
	proto.RegisterType((*CMsgChatToxicityReport)(nil), "protocol.CMsgChatToxicityReport")
	proto.RegisterType((*CMsgGetTeamAuditInformation)(nil), "protocol.CMsgGetTeamAuditInformation")
	proto.RegisterType((*CMsgGetTeamAuditInformation_Action)(nil), "protocol.CMsgGetTeamAuditInformation.Action")
	proto.RegisterType((*CMsgDOTADPCMatch)(nil), "protocol.CMsgDOTADPCMatch")
}

func init() {
	proto.RegisterFile("dota_gcmessages_webapi.proto", fileDescriptor_eb684e314d95fc71)
}

var fileDescriptor_eb684e314d95fc71 = []byte{
	// 3773 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xcd, 0x6f, 0x1b, 0x49,
	0x76, 0x37, 0xbf, 0xc9, 0x27, 0x91, 0x6c, 0x95, 0x6c, 0x99, 0xe2, 0xd8, 0x6b, 0x9b, 0x9e, 0xb1,
	0x15, 0xcf, 0x8e, 0x6c, 0xd1, 0xb3, 0x3b, 0x3b, 0x9a, 0xd9, 0x4d, 0xda, 0x64, 0x4b, 0xea, 0x5d,
	0xaa, 0xc9, 0x6d, 0x92, 0x72, 0x26, 0x7b, 0x68, 0xb4, 0xba, 0x4b, 0x54, 0x47, 0xcd, 0x6e, 0xa2,
	0xbb, 0x29, 0xaf, 0x77, 0x91, 0x1c, 0x83, 0x05, 0x06, 0xb9, 0x05, 0x39, 0x04, 0xc8, 0x2d, 0xf9,
	0x0b, 0x16, 0xb9, 0xe5, 0x14, 0x04, 0x01, 0x02, 0x04, 0xc9, 0x21, 0xa7, 0xfd, 0x13, 0x72, 0xca,
	0x21, 0xe7, 0x00, 0x41, 0x7d, 0xf4, 0x17, 0x3f, 0x64, 0xed, 0x22, 0x01, 0x72, 0xb1, 0x59, 0xbf,
	0xf7, 0xab, 0x57, 0xaf, 0x5e, 0xbd, 0x57, 0xf5, 0xaa, 0x5a, 0xf0, 0xc0, 0x74, 0x03, 0x5d, 0x9b,
	0x18, 0x53, 0xec, 0xfb, 0xfa, 0x04, 0xfb, 0xda, 0x3b, 0x7c, 0xae, 0xcf, 0xac, 0xfd, 0x99, 0xe7,
	0x06, 0x2e, 0x2a, 0xd3, 0xff, 0x0c, 0xd7, 0x6e, 0x6e, 0xfb, 0x01, 0xd6, 0xa7, 0x21, 0x8b, 0x89,
	0x9b, 0x3b, 0x13, 0xc3, 0x37, 0xaf, 0x12, 0xbd, 0x39, 0x7e, 0x9f, 0x2a, 0xf5, 0x2f, 0x75, 0x0f,
	0x9b, 0x1a, 0x76, 0xe6, 0xd3, 0x50, 0xb0, 0x34, 0x9a, 0xe1, 0x4e, 0xa7, 0xae, 0xc3, 0xa5, 0xbb,
	0x54, 0x3a, 0xd5, 0x03, 0xe3, 0x52, 0x9b, 0xe2, 0x40, 0x37, 0xf5, 0x40, 0x67, 0xa2, 0xd6, 0x6f,
	0x8a, 0x50, 0xef, 0x9c, 0xfa, 0x13, 0xd1, 0x33, 0x74, 0x47, 0x3f, 0x73, 0x03, 0xec, 0xa3, 0x2f,
	0xa1, 0x44, 0xb9, 0xd8, 0x6f, 0x64, 0x1e, 0xe7, 0xf6, 0x36, 0xda, 0x8f, 0xf6, 0x43, 0x73, 0xf7,
	0x17, 0xb8, 0xfb, 0xa7, 0x84, 0xa8, 0x86, 0x7c, 0xf4, 0x0a, 0xee, 0x7a, 0xee, 0xdc, 0x31, 0xb5,
	0xc0, 0x9a, 0x62, 0xcd, 0xc3, 0x53, 0xdd, 0x72, 0x2c, 0x67, 0xd2, 0xc8, 0x3e, 0xce, 0xec, 0x55,
	0x55, 0x44, 0x65, 0x23, 0x6b, 0x8a, 0xd5, 0x50, 0x82, 0x9e, 0xc0, 0x26, 0xeb, 0xe1, 0xcc, 0xa7,
	0xe7, 0xd8, 0x6b, 0xe4, 0x28, 0x73, 0x83, 0x62, 0x0a, 0x85, 0x08, 0xe5, 0xda, 0x0d, 0x2c, 0x67,
	0xa2, 0xf9, 0x81, 0x1e, 0xe0, 0x46, 0x9e, 0x51, 0x18, 0x36, 0x24, 0x10, 0xfa, 0x7d, 0x78, 0x60,
	0xf9, 0x9a, 0x31, 0xf7, 0x3c, 0xec, 0x04, 0x1a, 0x53, 0x68, 0xe8, 0xb6, 0x75, 0xee, 0xe9, 0x84,
	0xd4, 0x28, 0x3c, 0xce, 0xec, 0x95, 0xd5, 0x5d, 0xcb, 0xef, 0x30, 0x8a, 0x4a, 0x18, 0x9d, 0x98,
	0x80, 0xbe, 0x07, 0xf7, 0x0d, 0xdb, 0xf5, 0xb1, 0x1f, 0x68, 0xba, 0x11, 0x58, 0xd7, 0x98, 0xbb,
	0xcb, 0x32, 0x1b, 0x45, 0x3a, 0xdc, 0x5d, 0x2e, 0x16, 0xa9, 0x94, 0x4e, 0x5b, 0x36, 0xd1, 0x2e,
	0x94, 0xf1, 0x35, 0x19, 0xd2, 0x32, 0x1b, 0x25, 0xca, 0x2b, 0xd1, 0xb6, 0x6c, 0xa2, 0x17, 0xb0,
	0x15, 0x5b, 0xed, 0x05, 0xd4, 0x23, 0x8d, 0x32, 0xe5, 0xd4, 0x23, 0xd3, 0xbd, 0x80, 0x78, 0xa3,
	0xf9, 0x97, 0x39, 0x28, 0x50, 0x95, 0x44, 0x61, 0x34, 0x70, 0x86, 0x29, 0x9c, 0xf2, 0xb1, 0x9a,
	0x50, 0xb9, 0xc4, 0x9e, 0xab, 0x59, 0xa6, 0xf6, 0x8a, 0x3b, 0xb4, 0x44, 0x00, 0xd9, 0x7c, 0x95,
	0x94, 0x1d, 0x70, 0x17, 0x72, 0xd9, 0x01, 0xfa, 0x18, 0x6a, 0x54, 0xe6, 0x63, 0x6c, 0x12, 0x73,
	0x5e, 0x71, 0x07, 0x6e, 0x12, 0x74, 0xc8, 0xc0, 0x57, 0x4b, 0xac, 0x03, 0xea, 0xb3, 0x34, 0xeb,
	0x00, 0x3d, 0xa6, 0x4b, 0x81, 0x35, 0xc3, 0x9d, 0x3b, 0x81, 0xf6, 0x8a, 0xfb, 0x06, 0x08, 0xd6,
	0x21, 0xd0, 0xab, 0x05, 0xc6, 0x01, 0xf7, 0x4a, 0xcc, 0x38, 0x58, 0x5a, 0xce, 0xf2, 0xf2, 0x72,
	0x2e, 0x06, 0x45, 0x65, 0x39, 0x28, 0x9e, 0x41, 0xdd, 0xf2, 0x35, 0xa2, 0xd6, 0xd7, 0x2e, 0x2d,
	0xd3, 0xc4, 0x4e, 0x03, 0xe8, 0x22, 0x57, 0x2d, 0x9f, 0x86, 0xe6, 0x09, 0x05, 0xd1, 0xd7, 0xd0,
	0x8c, 0x02, 0xc1, 0x75, 0x16, 0xe3, 0x72, 0x83, 0x2a, 0x6e, 0x24, 0x18, 0xa9, 0xe8, 0x6c, 0x7d,
	0x05, 0x1b, 0x67, 0x09, 0xbb, 0x36, 0xa1, 0x7c, 0x24, 0x2b, 0xf2, 0xf0, 0x44, 0xea, 0x0a, 0x77,
	0x50, 0x1d, 0x36, 0x64, 0x45, 0x1b, 0xa8, 0xfd, 0x63, 0x55, 0x1a, 0x0e, 0x85, 0x0c, 0xaa, 0x42,
	0x45, 0x56, 0xb4, 0xa3, 0xf1, 0x68, 0xac, 0x4a, 0x42, 0xb6, 0xf5, 0x67, 0x25, 0x96, 0x5b, 0xdd,
	0xfe, 0x48, 0xec, 0x0e, 0x3a, 0x47, 0x18, 0x9b, 0xe8, 0x87, 0x50, 0xc6, 0x36, 0x9e, 0x62, 0x27,
	0x08, 0x93, 0xeb, 0x49, 0x3a, 0xb9, 0x12, 0xe4, 0x7d, 0x89, 0x31, 0xd5, 0xa8, 0x4b, 0xf3, 0x6f,
	0x73, 0x50, 0xe2, 0x28, 0x52, 0x21, 0x1f, 0xbc, 0x9f, 0x61, 0x1a, 0x26, 0xb5, 0xf6, 0x8b, 0x1b,
	0xd4, 0x90, 0x7f, 0x79, 0xaf, 0xd1, 0xfb, 0x19, 0x3e, 0x44, 0x47, 0x92, 0xd4, 0xd5, 0x86, 0x92,
	0x2a, 0x4b, 0x43, 0x4d, 0x95, 0x86, 0xe3, 0xde, 0x48, 0xa5, 0xba, 0xd0, 0x03, 0xa8, 0x10, 0x0f,
	0xf9, 0x81, 0x3e, 0x9d, 0xf1, 0x18, 0x8b, 0x01, 0xf4, 0x11, 0x54, 0x7c, 0xec, 0x59, 0xd8, 0x27,
	0xd1, 0xc9, 0xa2, 0xac, 0xcc, 0x00, 0x96, 0x0a, 0x51, 0xe4, 0x92, 0x00, 0xcb, 0xc7, 0x91, 0x7b,
	0x1f, 0x4a, 0x64, 0x93, 0x23, 0x12, 0x16, 0x54, 0x45, 0xd2, 0x94, 0x4d, 0xf4, 0x10, 0x40, 0x37,
	0x58, 0xa4, 0x44, 0x89, 0x56, 0xe1, 0x88, 0x6c, 0x92, 0xf1, 0x6c, 0xac, 0x4f, 0xe6, 0x38, 0x4e,
	0xaf, 0x32, 0x03, 0x98, 0x52, 0xc7, 0x35, 0xa9, 0x88, 0x45, 0x50, 0x91, 0x34, 0x65, 0x93, 0x44,
	0x86, 0x8f, 0xbd, 0x6b, 0xec, 0x69, 0x7e, 0x38, 0x6a, 0x95, 0xda, 0x53, 0x65, 0xf0, 0x90, 0x0f,
	0x7e, 0x0f, 0x8a, 0x64, 0x23, 0xd4, 0x0e, 0x78, 0x78, 0x15, 0x48, 0xeb, 0x20, 0x82, 0xdb, 0x34,
	0x9e, 0x38, 0xdc, 0x8e, 0xe0, 0xd7, 0x3c, 0x66, 0x28, 0xfc, 0x3a, 0x82, 0x3f, 0x6f, 0x6c, 0xc6,
	0xf0, 0xe7, 0xad, 0x6f, 0x73, 0x20, 0x2c, 0xba, 0x1d, 0xed, 0xc0, 0x0a, 0xc7, 0x0b, 0x99, 0x08,
	0x3f, 0x15, 0x47, 0x9d, 0x13, 0x6d, 0xd0, 0x1f, 0x8c, 0x7b, 0xa2, 0x2a, 0x64, 0xd1, 0x03, 0x68,
	0x50, 0x7c, 0x24, 0x89, 0xa7, 0xda, 0x78, 0xd0, 0xe9, 0x9f, 0xca, 0xca, 0x31, 0x63, 0x09, 0x39,
	0xf4, 0x11, 0xdc, 0x8f, 0xa5, 0x3d, 0x49, 0x3c, 0x1e, 0x4b, 0xa1, 0xca, 0x3c, 0x6a, 0xc0, 0xdd,
	0x58, 0x28, 0x76, 0xbb, 0xda, 0xa0, 0x27, 0x7e, 0x23, 0xa9, 0x42, 0x21, 0xdd, 0x4d, 0x95, 0x4e,
	0xfb, 0x67, 0x52, 0x28, 0x2c, 0xa2, 0x7b, 0xb0, 0x15, 0x0b, 0xbb, 0xf2, 0xf0, 0x8d, 0xa8, 0x74,
	0x85, 0x52, 0xa4, 0x8d, 0x8f, 0x12, 0x9a, 0x22, 0x94, 0xd1, 0x2e, 0xdc, 0x4b, 0x4a, 0x3a, 0x7d,
	0xa5, 0xd3, 0x1b, 0x77, 0xa5, 0xae, 0x50, 0x89, 0x66, 0xd5, 0x1d, 0x74, 0xb4, 0xe1, 0x48, 0x54,
	0xba, 0xb2, 0x72, 0x3c, 0x14, 0x00, 0x35, 0x61, 0x87, 0xe2, 0x62, 0x4f, 0x52, 0x47, 0xda, 0x40,
	0x95, 0xba, 0x72, 0x67, 0x24, 0xf7, 0x95, 0xa1, 0xb0, 0x11, 0xf5, 0x61, 0xb2, 0x23, 0x51, 0x19,
	0x89, 0xc3, 0x6f, 0x84, 0xcd, 0xa8, 0x0f, 0x1f, 0xa6, 0x27, 0x9f, 0x49, 0xdc, 0x0f, 0x55, 0xf4,
	0x04, 0x1e, 0x26, 0x65, 0xb2, 0x12, 0x26, 0x24, 0xf7, 0xb3, 0x50, 0x6b, 0x75, 0x60, 0x3b, 0x91,
	0x13, 0x63, 0x1f, 0x7b, 0xb2, 0x73, 0xe1, 0xa2, 0xef, 0x02, 0xb2, 0x7c, 0x6d, 0x66, 0xcf, 0x7d,
	0xcd, 0x9f, 0x9f, 0xfb, 0x86, 0x67, 0x91, 0xbd, 0x26, 0x43, 0x77, 0x11, 0xc1, 0xf2, 0x07, 0xf6,
	0xdc, 0x1f, 0x46, 0x78, 0xeb, 0x1f, 0xc2, 0x6c, 0xf6, 0xf4, 0x8b, 0x60, 0xe4, 0x59, 0xd7, 0x96,
	0x4e, 0x42, 0xed, 0x52, 0xf7, 0xb5, 0x6b, 0xdd, 0xb6, 0x4c, 0x76, 0x60, 0xf0, 0xee, 0xd5, 0x4b,
	0xdd, 0x3f, 0x23, 0x28, 0xdb, 0xd5, 0xcf, 0xa0, 0xce, 0x72, 0x83, 0x6d, 0xd2, 0xce, 0x85, 0x4b,
	0x93, 0x6b, 0xa3, 0xbd, 0xbf, 0x90, 0xb5, 0xb1, 0xee, 0xfd, 0xc4, 0x6f, 0x76, 0xda, 0x38, 0x17,
	0xae, 0x5a, 0xa5, 0x6a, 0x4e, 0xc8, 0xce, 0x4e, 0x66, 0xf0, 0x2c, 0xd4, 0xeb, 0xe9, 0xce, 0x95,
	0x16, 0x58, 0xd1, 0xf9, 0xc9, 0x78, 0xaa, 0xee, 0x5c, 0x8d, 0x2c, 0xec, 0xd1, 0x63, 0x8a, 0x1f,
	0xca, 0x7c, 0xf3, 0x2f, 0x61, 0x76, 0x10, 0xa7, 0x4e, 0xb0, 0x42, 0xfa, 0x04, 0xfb, 0x21, 0x7c,
	0x14, 0x9e, 0xa8, 0x6c, 0x14, 0xb2, 0xdb, 0x9a, 0x9a, 0xa7, 0x9b, 0x96, 0xee, 0x04, 0x34, 0x5d,
	0xcb, 0x6a, 0x83, 0x53, 0xa8, 0x8d, 0x64, 0xe3, 0x35, 0x55, 0x26, 0x47, 0x3f, 0x85, 0xfa, 0xcc,
	0xc3, 0xd7, 0x96, 0x3b, 0xf7, 0x35, 0x0f, 0xfb, 0x73, 0x3b, 0xa0, 0x39, 0xbc, 0xd1, 0xde, 0x5b,
	0x3f, 0xe9, 0x01, 0xef, 0xa0, 0x52, 0xbe, 0x5a, 0x9b, 0xa5, 0xda, 0xe8, 0x13, 0xa8, 0x85, 0x16,
	0xf9, 0x81, 0x87, 0xf5, 0x2b, 0x9e, 0xfa, 0x55, 0x8e, 0x0e, 0x29, 0xd8, 0x7c, 0x03, 0xdb, 0x09,
	0xa5, 0x91, 0xb7, 0xee, 0x43, 0x89, 0x1f, 0x92, 0xfc, 0x68, 0x2d, 0xb2, 0x23, 0x12, 0x21, 0xc8,
	0x7b, 0xae, 0x8d, 0xf9, 0x86, 0x47, 0x7f, 0x37, 0xff, 0x3e, 0x03, 0x77, 0x57, 0x2d, 0x01, 0x1a,
	0x41, 0x8d, 0x7b, 0x80, 0xae, 0x66, 0x54, 0x24, 0x7d, 0x76, 0xab, 0xa5, 0x0c, 0x8d, 0x51, 0xab,
	0x5c, 0xc9, 0x09, 0xd5, 0x81, 0x14, 0xd8, 0x30, 0x2d, 0x0f, 0x87, 0x2a, 0xb3, 0xbf, 0x8b, 0x4a,
	0x20, 0x1a, 0x98, 0xbe, 0xe6, 0x5f, 0x64, 0xa1, 0x96, 0x76, 0x26, 0x7a, 0x0e, 0x75, 0xb6, 0x80,
	0x86, 0xeb, 0x79, 0xd8, 0x08, 0xec, 0xf7, 0x3c, 0x58, 0x6b, 0x14, 0xee, 0x84, 0x28, 0x7a, 0x0a,
	0xd5, 0xf4, 0x4a, 0x67, 0x29, 0x8d, 0x9e, 0xeb, 0xd1, 0xea, 0xae, 0x08, 0xe9, 0xdc, 0xff, 0x51,
	0x48, 0xe7, 0x3f, 0x14, 0xd2, 0x85, 0xa5, 0x90, 0x4e, 0x15, 0x6f, 0xf1, 0x49, 0xd4, 0xfa, 0xeb,
	0x2c, 0x3c, 0x24, 0x56, 0x8d, 0xb0, 0x3e, 0x3d, 0xd2, 0x9d, 0x8e, 0xeb, 0x04, 0xd8, 0x09, 0x44,
	0xdf, 0xc7, 0x01, 0x39, 0xe1, 0xe7, 0x3e, 0xd2, 0x01, 0x74, 0xd2, 0xd4, 0x12, 0x67, 0x6b, 0x2b,
	0x9e, 0x92, 0xb4, 0xa2, 0x27, 0x3d, 0x53, 0xbf, 0x73, 0xa5, 0xe1, 0x15, 0xb8, 0xd6, 0x73, 0x27,
	0xee, 0x40, 0x39, 0x56, 0x2b, 0x7a, 0x08, 0xa1, 0x47, 0xb0, 0xc1, 0x86, 0xb0, 0x1c, 0x13, 0xff,
	0x9c, 0x47, 0x1d, 0x1b, 0x55, 0x26, 0x08, 0xba, 0x80, 0x4d, 0x46, 0xf0, 0xa9, 0x4d, 0xd4, 0xb1,
	0xb5, 0xf6, 0xc7, 0x37, 0x5b, 0xc1, 0xec, 0x3f, 0x7c, 0xb8, 0x6c, 0x07, 0x93, 0x68, 0x8a, 0xeb,
	0x60, 0x95, 0x8d, 0xcc, 0xe7, 0x2a, 0x40, 0xce, 0xf0, 0x0c, 0xee, 0x5f, 0xf2, 0xb3, 0xf5, 0x77,
	0x19, 0xf8, 0xe4, 0x46, 0xff, 0xa8, 0xd8, 0x9f, 0xb9, 0x8e, 0x8f, 0xd1, 0xcf, 0xa0, 0xc8, 0x93,
	0x9a, 0xf9, 0xe8, 0x8b, 0xf4, 0xb2, 0x7f, 0x50, 0xc1, 0xbe, 0xc4, 0xc2, 0xf2, 0x10, 0xae, 0x34,
	0x3c, 0x9c, 0x1b, 0x06, 0xf6, 0x7d, 0x95, 0xab, 0x6c, 0xbd, 0x84, 0x12, 0x17, 0xa3, 0x1a, 0x24,
	0x08, 0xc2, 0x1d, 0x74, 0x17, 0x84, 0x2b, 0x0d, 0xcb, 0x4e, 0x80, 0x3d, 0x47, 0xb7, 0x25, 0xcf,
	0x73, 0x3d, 0x21, 0xd3, 0xfa, 0xc7, 0x22, 0x34, 0x96, 0x87, 0xe5, 0xd3, 0x7c, 0x0b, 0x02, 0x2d,
	0x04, 0x98, 0x37, 0x35, 0xdb, 0xf2, 0x83, 0xd5, 0x39, 0xbb, 0xaa, 0xf7, 0x3e, 0x01, 0xb9, 0xe9,
	0xb5, 0x20, 0xfa, 0xdd, 0xb3, 0xfc, 0xa0, 0xf9, 0xaf, 0x05, 0x80, 0x58, 0x4c, 0xb6, 0x11, 0x47,
	0x9f, 0xb2, 0xa0, 0xa9, 0xa8, 0xf4, 0x77, 0xb2, 0xf4, 0xc9, 0xa6, 0x4a, 0x9f, 0x5d, 0x28, 0xdb,
	0xee, 0xc4, 0xd5, 0xe6, 0x9e, 0x4d, 0xd7, 0xb7, 0xa2, 0x96, 0x48, 0x7b, 0xec, 0xd9, 0xe8, 0x0f,
	0xa1, 0xc8, 0x17, 0x3e, 0x4f, 0x5d, 0xfb, 0x68, 0xed, 0xc2, 0xf3, 0x35, 0x7f, 0x44, 0xcf, 0xeb,
	0x23, 0x51, 0x21, 0x07, 0xf0, 0x48, 0x52, 0x46, 0xe4, 0xc0, 0x1d, 0x8d, 0x87, 0x9a, 0xac, 0x9c,
	0x89, 0x3d, 0xb9, 0xab, 0x72, 0x7d, 0xe9, 0xf2, 0xae, 0xb0, 0x58, 0xde, 0xed, 0x42, 0x79, 0x3e,
	0x31, 0x34, 0x62, 0x06, 0xdd, 0xa9, 0xf3, 0x6a, 0x69, 0x3e, 0x31, 0x48, 0x00, 0xa3, 0x7d, 0xd8,
	0x7e, 0xe7, 0x7a, 0x57, 0xfe, 0xa5, 0x3b, 0xd3, 0x12, 0x15, 0x1b, 0xdb, 0x7d, 0xb7, 0x42, 0x91,
	0x18, 0x55, 0x6e, 0x2d, 0xd8, 0xd4, 0xcf, 0xcf, 0xc9, 0xfe, 0x43, 0x8b, 0x6a, 0x5a, 0x61, 0x55,
	0xd4, 0x14, 0xc6, 0xf6, 0x23, 0xcb, 0xc0, 0xb6, 0xe5, 0xf0, 0xeb, 0x02, 0xaf, 0xb8, 0x6a, 0x11,
	0x4c, 0x6f, 0x0c, 0x24, 0x5f, 0xfc, 0x99, 0xa7, 0xbf, 0xe7, 0x24, 0x56, 0x7f, 0x01, 0x85, 0x18,
	0xe1, 0x13, 0xa8, 0xe1, 0xa9, 0x1b, 0x58, 0x86, 0xeb, 0x70, 0x0e, 0x2b, 0xc6, 0xaa, 0x21, 0xca,
	0x68, 0xcf, 0xa1, 0xfe, 0x4e, 0xb7, 0xed, 0x99, 0x3e, 0xc3, 0x1e, 0xe7, 0x55, 0xd9, 0x80, 0x11,
	0xcc, 0x88, 0x0d, 0x28, 0x91, 0xfb, 0x33, 0x76, 0x82, 0x46, 0x8d, 0x2d, 0x0d, 0x6f, 0xa2, 0x4f,
	0x61, 0x8b, 0xff, 0xd4, 0x62, 0x47, 0xd6, 0xa9, 0x12, 0x81, 0x0b, 0x46, 0x91, 0x3f, 0x7f, 0xbc,
	0x90, 0xc6, 0x02, 0x8d, 0xb9, 0xe7, 0xb7, 0x4d, 0x94, 0x54, 0xaa, 0x3e, 0x87, 0x3a, 0xb9, 0x94,
	0xd8, 0x89, 0x61, 0xb7, 0x98, 0xed, 0x14, 0x8e, 0x07, 0x7d, 0x08, 0x10, 0x12, 0xb1, 0xd7, 0x40,
	0x6c, 0x8d, 0x39, 0x07, 0x7b, 0x24, 0x02, 0x6c, 0xdd, 0x99, 0xcc, 0xf5, 0x09, 0xf6, 0x1b, 0xdb,
	0x74, 0x72, 0x31, 0xd0, 0xfa, 0x97, 0x1c, 0x3c, 0x59, 0x61, 0xd4, 0x3c, 0x70, 0x27, 0x9e, 0x3e,
	0xbb, 0xe4, 0xb6, 0x68, 0x50, 0xa7, 0x31, 0xad, 0x87, 0x78, 0x78, 0x04, 0x7e, 0xff, 0xc6, 0xa9,
	0xa5, 0xb5, 0x2c, 0xe5, 0x55, 0x24, 0xf7, 0x9b, 0x7f, 0x02, 0xf5, 0xc5, 0x31, 0x77, 0xa1, 0x3c,
	0xf3, 0x5c, 0x2d, 0x91, 0x5f, 0xa5, 0x99, 0xe7, 0x2a, 0x24, 0xc5, 0xd2, 0x97, 0x88, 0xec, 0xe2,
	0x25, 0x22, 0x15, 0xf3, 0xb9, 0xc5, 0x98, 0x47, 0x90, 0xbf, 0xb0, 0x6c, 0x56, 0x15, 0x55, 0x54,
	0xfa, 0xbb, 0xf9, 0x4f, 0x99, 0xdf, 0x3d, 0xad, 0x7f, 0x06, 0x90, 0x70, 0x4b, 0x8e, 0xba, 0xe5,
	0xab, 0xdf, 0xc6, 0x2d, 0x0b, 0x6d, 0x35, 0xa1, 0x6e, 0x5d, 0x16, 0xe6, 0xd7, 0x64, 0x61, 0xeb,
	0xdb, 0x2d, 0xd8, 0xa4, 0x67, 0xf0, 0xa0, 0x23, 0x91, 0x9a, 0x0e, 0x9d, 0x40, 0x81, 0x16, 0x77,
	0x7c, 0xcf, 0x7e, 0xba, 0x70, 0x54, 0x73, 0xda, 0xbe, 0xd4, 0xa3, 0x97, 0x2c, 0xda, 0x38, 0xac,
	0x4a, 0x67, 0x64, 0x47, 0x09, 0xb7, 0x12, 0xa6, 0x00, 0xf5, 0x01, 0x58, 0xd9, 0x48, 0x8f, 0xc9,
	0x2c, 0x55, 0xf7, 0xfc, 0x16, 0xea, 0xe8, 0x59, 0x59, 0x1a, 0x2b, 0x3f, 0x51, 0xfa, 0x6f, 0x15,
	0xb5, 0x82, 0x43, 0x0c, 0x7d, 0x01, 0x25, 0x76, 0xb5, 0x0b, 0xbd, 0xf6, 0x70, 0x8d, 0x36, 0xa6,
	0x4c, 0x0d, 0xd9, 0xe8, 0x25, 0x6c, 0x7b, 0x78, 0x62, 0xf9, 0x01, 0xbf, 0xe1, 0xcf, 0xb0, 0x67,
	0xb9, 0xa1, 0x53, 0x50, 0x52, 0x34, 0xa0, 0x12, 0xf4, 0x02, 0xb6, 0x2c, 0x5f, 0x63, 0xd6, 0xcf,
	0x67, 0x86, 0x3b, 0x8d, 0x1f, 0x88, 0xea, 0x96, 0x4f, 0x07, 0x19, 0x73, 0x98, 0x5f, 0x11, 0x18,
	0xd7, 0x70, 0xa7, 0x33, 0x1b, 0x07, 0xd8, 0xe4, 0x95, 0xaf, 0xc0, 0xc9, 0x9d, 0x10, 0xa7, 0xb9,
	0x47, 0xa9, 0x34, 0x5e, 0x4a, 0x2c, 0xbb, 0x28, 0x42, 0x03, 0x75, 0x1f, 0xb6, 0xa7, 0x73, 0x3b,
	0xb0, 0x0c, 0xdd, 0x0f, 0xb4, 0xf8, 0x62, 0xcb, 0x37, 0xd1, 0x48, 0xd4, 0x0b, 0x6f, 0xb8, 0x9f,
	0x42, 0x0c, 0xb2, 0x7a, 0x77, 0xea, 0x37, 0x2a, 0x8f, 0x73, 0x64, 0xb3, 0x89, 0x04, 0x43, 0x86,
	0xa3, 0xaf, 0x20, 0x1f, 0xb8, 0x73, 0x8f, 0x6e, 0xa1, 0xb5, 0xf6, 0x83, 0x75, 0x4b, 0x31, 0x72,
	0xe7, 0xde, 0x61, 0x65, 0xd4, 0x1f, 0xab, 0x9a, 0xd2, 0x57, 0x24, 0x95, 0x76, 0x22, 0x96, 0x45,
	0x29, 0xa1, 0x99, 0x9e, 0x3b, 0xd3, 0x6c, 0xd7, 0xb8, 0xe2, 0xbb, 0xe8, 0x56, 0x24, 0xea, 0x7a,
	0xee, 0xac, 0xe7, 0x1a, 0x57, 0xc4, 0x2d, 0x31, 0x5f, 0x37, 0x4d, 0x46, 0x67, 0x9b, 0xa9, 0x10,
	0x49, 0x44, 0xd3, 0xa4, 0xec, 0xaf, 0xa1, 0x19, 0xb3, 0x0d, 0x16, 0xf6, 0x9a, 0x89, 0x75, 0x93,
	0x6c, 0xf1, 0x74, 0x87, 0xad, 0xaa, 0x8d, 0x88, 0xc1, 0xf3, 0xa2, 0xcb, 0xe5, 0x7c, 0x09, 0x2e,
	0x74, 0x27, 0xd0, 0xfd, 0xf7, 0x1a, 0x76, 0xf4, 0x73, 0x1b, 0x9b, 0x74, 0xcf, 0xa5, 0x4b, 0x70,
	0xc4, 0x04, 0x12, 0xc3, 0x91, 0x0c, 0x4f, 0x96, 0xc7, 0x22, 0x67, 0x0e, 0x7e, 0x17, 0x0f, 0x29,
	0xd0, 0x21, 0xbf, 0xb3, 0x38, 0xa4, 0x4a, 0x69, 0xe1, 0xc0, 0xcd, 0x3f, 0x85, 0xca, 0xe0, 0x52,
	0xf7, 0x31, 0x2d, 0x4b, 0x4f, 0xa1, 0x30, 0x23, 0x0d, 0x9e, 0x39, 0x7b, 0xb7, 0x08, 0x75, 0xda,
	0xf9, 0xb0, 0x3a, 0x38, 0x11, 0x87, 0x52, 0x9c, 0x3e, 0x54, 0x0b, 0x6a, 0x41, 0x95, 0x3e, 0x5e,
	0x4c, 0x3c, 0x77, 0x3e, 0x8b, 0x77, 0x91, 0x0d, 0x02, 0x1e, 0x13, 0x4c, 0x36, 0x9b, 0xff, 0x95,
	0x81, 0x22, 0x53, 0x87, 0xba, 0xa4, 0xd8, 0x9a, 0x90, 0x83, 0x94, 0x0d, 0x7f, 0x3f, 0x51, 0x11,
	0xf0, 0x7c, 0xa0, 0xe2, 0xc3, 0xed, 0xe8, 0x21, 0xe0, 0x58, 0xee, 0x2b, 0xda, 0x58, 0x19, 0x4a,
	0x23, 0x95, 0xf7, 0x45, 0x3d, 0x28, 0x9b, 0xd6, 0xb5, 0xe5, 0x13, 0x3d, 0x2c, 0x63, 0x77, 0x97,
	0xf4, 0x74, 0x39, 0xe1, 0xf0, 0x1e, 0xd7, 0xd4, 0x95, 0xcf, 0xe4, 0x61, 0xac, 0x2b, 0xd2, 0x90,
	0x7e, 0x9c, 0xc9, 0x2d, 0x3c, 0xce, 0xfc, 0x00, 0x8a, 0x74, 0xa2, 0xa4, 0x84, 0x21, 0xc9, 0xfc,
	0x78, 0x8d, 0xbf, 0x22, 0x07, 0xab, 0x9c, 0xdf, 0xfa, 0xf7, 0x3c, 0x6c, 0x26, 0xbd, 0x88, 0xb6,
	0x20, 0xbd, 0x03, 0x09, 0x77, 0xd0, 0x0e, 0xa0, 0xe1, 0x40, 0x95, 0x95, 0x63, 0xad, 0xfd, 0xaa,
	0x7d, 0xc0, 0x6f, 0xfe, 0x42, 0x06, 0xdd, 0x83, 0xad, 0x24, 0x7e, 0x2a, 0xfe, 0xb8, 0xaf, 0x0a,
	0x59, 0xf4, 0x04, 0x1e, 0xca, 0xca, 0x48, 0x52, 0x15, 0x71, 0x24, 0xf7, 0x15, 0xb1, 0xc7, 0xa4,
	0x3f, 0x1d, 0x8b, 0x3d, 0xf9, 0x48, 0x96, 0xd4, 0xa1, 0x90, 0x23, 0x1a, 0x97, 0x29, 0x42, 0x9e,
	0xe0, 0x6f, 0xa9, 0x20, 0x35, 0x52, 0x01, 0x3d, 0x84, 0xdd, 0x65, 0x5c, 0x3b, 0x92, 0x15, 0xb1,
	0x37, 0x14, 0x8a, 0x69, 0x03, 0xdb, 0x61, 0xb7, 0x52, 0xda, 0xc0, 0x36, 0x37, 0xb0, 0x4c, 0xe9,
	0xe3, 0xd3, 0x53, 0xa6, 0x2d, 0xa2, 0x57, 0x28, 0x3d, 0x81, 0x33, 0x3a, 0xac, 0x34, 0xb6, 0x2d,
	0x6c, 0xa0, 0x5d, 0xb8, 0xd7, 0x39, 0x91, 0x15, 0x91, 0xaf, 0xbe, 0xd8, 0x0b, 0x0d, 0xda, 0x44,
	0x2f, 0xe0, 0xd9, 0x72, 0x97, 0x98, 0x97, 0xf0, 0x45, 0x15, 0x7d, 0x06, 0xbf, 0xb7, 0x82, 0xdb,
	0x13, 0x87, 0x23, 0xad, 0x73, 0x22, 0x2a, 0x1d, 0x29, 0x49, 0xaf, 0xa5, 0x5d, 0xf4, 0x3a, 0x34,
	0xbe, 0x4e, 0x8c, 0x4f, 0xe2, 0xcc, 0x78, 0x21, 0xed, 0x9a, 0x88, 0xbe, 0x95, 0x76, 0x4d, 0x48,
	0x47, 0x69, 0xd7, 0x44, 0xf4, 0xed, 0xb4, 0x6b, 0x42, 0xfa, 0xdd, 0x95, 0xae, 0x79, 0x2d, 0xdc,
	0x6b, 0xfd, 0x73, 0x06, 0xb6, 0x96, 0x72, 0x93, 0x84, 0x56, 0x2a, 0x3b, 0x85, 0x3b, 0xa8, 0x0a,
	0x95, 0xb7, 0x72, 0xaf, 0xab, 0x75, 0x44, 0xb5, 0x2b, 0x64, 0x50, 0x1d, 0x36, 0x8e, 0xd5, 0xfe,
	0x78, 0x40, 0x0a, 0xea, 0x63, 0x49, 0xc8, 0xa2, 0x0d, 0x28, 0x31, 0x40, 0x14, 0x72, 0x71, 0xe3,
	0x8d, 0x90, 0x27, 0x8d, 0xfe, 0x99, 0xa4, 0x8a, 0xbd, 0x9e, 0x50, 0x20, 0x8d, 0x41, 0x4f, 0xfc,
	0xa6, 0x7f, 0x74, 0x24, 0x14, 0x49, 0x83, 0x3d, 0xcc, 0x0d, 0x85, 0x12, 0xba, 0x0f, 0xdb, 0xdd,
	0x41, 0x47, 0x1b, 0xf4, 0x65, 0x56, 0xa6, 0xf3, 0x77, 0xb1, 0x72, 0xac, 0xac, 0x23, 0x54, 0xe2,
	0x46, 0x57, 0x00, 0x62, 0xd3, 0xa0, 0x27, 0x76, 0xa4, 0x53, 0x49, 0x19, 0x09, 0x1b, 0xad, 0x5f,
	0x80, 0xb0, 0x78, 0xa2, 0x12, 0x3e, 0x3f, 0x53, 0x85, 0x3b, 0x08, 0xa0, 0x18, 0xa5, 0x44, 0x05,
	0x0a, 0x61, 0x1a, 0x3c, 0x80, 0x46, 0xda, 0x37, 0xa9, 0x0c, 0xd8, 0x82, 0x6a, 0x4a, 0x2a, 0xe4,
	0x09, 0x94, 0x0e, 0xec, 0x42, 0xeb, 0x10, 0x0a, 0xf4, 0x08, 0x21, 0x36, 0x45, 0x87, 0x08, 0x1b,
	0x92, 0x36, 0x0f, 0x84, 0x4c, 0xf4, 0xbb, 0x2d, 0x64, 0xa3, 0xdf, 0xaf, 0x85, 0x5c, 0xeb, 0x0d,
	0x08, 0xc9, 0xdc, 0x27, 0x37, 0x28, 0xb4, 0x0f, 0x45, 0x7a, 0x3e, 0x86, 0x15, 0xe4, 0xce, 0xea,
	0x7d, 0x42, 0xe5, 0xac, 0xd6, 0xaf, 0x8b, 0xb0, 0x1b, 0x3e, 0xe5, 0xf1, 0x9d, 0xbf, 0xa3, 0x7b,
	0x66, 0xcf, 0x72, 0xf0, 0x7c, 0x86, 0xba, 0x50, 0x62, 0xa7, 0x7f, 0xa8, 0x6e, 0xc5, 0xa3, 0xf8,
	0x52, 0xaf, 0x7d, 0x56, 0x16, 0xa8, 0x61, 0xd7, 0xe6, 0x4f, 0xa0, 0x42, 0xa4, 0x6f, 0x5c, 0x67,
	0xee, 0x93, 0x23, 0xfd, 0x9c, 0xfc, 0xa0, 0x35, 0x3c, 0x7f, 0x36, 0xaa, 0x50, 0x84, 0xd4, 0x67,
	0xe4, 0x6a, 0xc2, 0xc4, 0xd7, 0xba, 0x3d, 0x0f, 0x1f, 0x90, 0x58, 0x8f, 0x33, 0x82, 0x34, 0x7f,
	0x9d, 0x85, 0x3c, 0xd1, 0x46, 0xaa, 0x8e, 0x99, 0xad, 0xbf, 0xc7, 0x5e, 0xb2, 0x72, 0x63, 0xfa,
	0xea, 0x4c, 0x10, 0xdf, 0x9e, 0x1e, 0xc1, 0x06, 0xe7, 0xd2, 0x42, 0x22, 0x4b, 0x0b, 0x09, 0x60,
	0x90, 0xb2, 0x50, 0x7e, 0xe6, 0x52, 0xe5, 0xe7, 0x47, 0x50, 0xa1, 0x02, 0xda, 0x8f, 0xd5, 0xb4,
	0x65, 0x02, 0xd0, 0x5e, 0xe1, 0x33, 0x57, 0x21, 0x7e, 0xe6, 0x42, 0xc7, 0x50, 0xa2, 0xd6, 0x62,
	0xbf, 0x51, 0x5c, 0xf9, 0xe6, 0xb4, 0xd2, 0x65, 0x91, 0x7f, 0xd4, 0xb0, 0x37, 0xba, 0x0b, 0x05,
	0xdf, 0x70, 0x3d, 0x56, 0xf6, 0x64, 0x55, 0xd6, 0x20, 0xc5, 0xf7, 0x85, 0xe5, 0xe8, 0xb6, 0xf5,
	0x0b, 0xcc, 0x0a, 0x9d, 0xb2, 0x1a, 0x03, 0x64, 0x1a, 0x56, 0x80, 0xe9, 0x34, 0x2a, 0xf4, 0xbe,
	0x59, 0x24, 0x4d, 0xd9, 0x6c, 0xfe, 0x32, 0x3a, 0xf9, 0x52, 0xa7, 0x4c, 0x66, 0xe1, 0x94, 0xf9,
	0x11, 0x14, 0x0c, 0xdd, 0x33, 0xc3, 0xe7, 0xb2, 0xbd, 0xdb, 0x9a, 0xae, 0xb2, 0x6e, 0xb1, 0xcd,
	0xb9, 0x84, 0xcd, 0xcd, 0x7f, 0xcb, 0x40, 0x91, 0x97, 0x8a, 0x07, 0x50, 0x0b, 0x0b, 0x0f, 0x5e,
	0x56, 0x52, 0x13, 0x0e, 0xe1, 0xf3, 0xf6, 0x97, 0x9f, 0x7f, 0xf9, 0xfd, 0x2f, 0xda, 0x5f, 0x7e,
	0x4f, 0xad, 0x72, 0x06, 0xef, 0xf2, 0x1c, 0xea, 0x71, 0x01, 0x42, 0xbf, 0xfc, 0xf1, 0xa8, 0xa8,
	0x45, 0x30, 0xfd, 0xee, 0x87, 0x9e, 0x42, 0x35, 0x26, 0x62, 0x27, 0x5c, 0xc9, 0xcd, 0x08, 0x94,
	0x1c, 0x93, 0x44, 0x74, 0x58, 0x15, 0xe7, 0x6f, 0x1f, 0xd1, 0x0b, 0x25, 0x72, 0xeb, 0x6f, 0x72,
	0x70, 0x7f, 0x25, 0xdb, 0x0f, 0xd0, 0xd7, 0xa1, 0x0f, 0x59, 0xc6, 0x3c, 0xfb, 0x80, 0x7e, 0x3f,
	0x48, 0x7a, 0xf0, 0x7f, 0x37, 0x57, 0xfe, 0x3b, 0xf3, 0xff, 0x3b, 0x57, 0xa4, 0xc5, 0x5c, 0xf9,
	0xf4, 0x76, 0xce, 0x5a, 0xc8, 0x94, 0x44, 0xd4, 0x97, 0x93, 0x51, 0xdf, 0xfa, 0x36, 0x07, 0x7b,
	0x44, 0x4f, 0xe7, 0x52, 0x0f, 0x46, 0xee, 0xcf, 0x2d, 0xc3, 0x0a, 0xde, 0xd3, 0xff, 0x07, 0x74,
	0x36, 0xa7, 0xec, 0x1b, 0xbb, 0x8a, 0x67, 0xae, 0x17, 0xa0, 0x11, 0x31, 0xf0, 0x5d, 0xb8, 0x6c,
	0x7f, 0x90, 0xb6, 0xe4, 0x36, 0x1a, 0xf6, 0x65, 0x87, 0xd4, 0x72, 0xe6, 0x5c, 0xb7, 0x55, 0xf7,
	0x9d, 0x4a, 0xb5, 0x35, 0x7f, 0x95, 0x85, 0x6a, 0x0a, 0xff, 0xad, 0xd6, 0x62, 0x0f, 0x04, 0x67,
	0x3e, 0xd5, 0xf8, 0x1f, 0x03, 0x68, 0x3e, 0xc6, 0x4e, 0x18, 0xfc, 0xce, 0x7c, 0xca, 0x47, 0x1f,
	0x62, 0xec, 0xa0, 0x27, 0xb0, 0x49, 0x99, 0xfc, 0xcf, 0x15, 0xc2, 0xaf, 0xfe, 0x84, 0xc5, 0x21,
	0x52, 0xf7, 0x27, 0x29, 0x5a, 0x40, 0xe6, 0xc1, 0xaf, 0x75, 0x42, 0x82, 0x48, 0xe7, 0x47, 0x86,
	0xbe, 0xb0, 0x3c, 0x3f, 0xfc, 0x52, 0x41, 0x87, 0x2e, 0x50, 0xef, 0xd6, 0x28, 0x4e, 0x07, 0xa7,
	0x43, 0x3f, 0x83, 0xba, 0xad, 0xa7, 0x89, 0xec, 0x91, 0xb8, 0x4a, 0xe0, 0x88, 0xd7, 0xfa, 0xcf,
	0x0c, 0xec, 0x2c, 0xfa, 0x92, 0xfb, 0x7e, 0xd5, 0x3c, 0x33, 0xb7, 0x9a, 0x67, 0x76, 0x79, 0x9e,
	0x3f, 0x82, 0x07, 0xa9, 0x79, 0x4e, 0x6d, 0x2d, 0xb8, 0xb4, 0x9c, 0xab, 0xf4, 0x8c, 0x1b, 0x89,
	0x2e, 0xa7, 0xf6, 0x88, 0x12, 0xd8, 0xcc, 0x77, 0xa2, 0xd7, 0xc2, 0x02, 0x8d, 0xe1, 0xf0, 0xad,
	0x6f, 0x27, 0x7a, 0xa0, 0x65, 0xdf, 0x55, 0x79, 0x0b, 0x35, 0xa0, 0xc4, 0xc7, 0xe2, 0x37, 0xd4,
	0xb0, 0xd9, 0xfa, 0xab, 0x1c, 0x7c, 0x44, 0x66, 0x7c, 0x8c, 0x83, 0x11, 0x7d, 0x90, 0x31, 0xad,
	0x80, 0xd4, 0xe6, 0xde, 0x94, 0x3d, 0xd8, 0x25, 0x32, 0x29, 0xb3, 0x3e, 0x93, 0xb2, 0x0b, 0x99,
	0x74, 0x04, 0x25, 0xdd, 0x20, 0xfd, 0xc3, 0x8b, 0xfd, 0x77, 0xd3, 0xb1, 0xba, 0x66, 0xb4, 0x7d,
	0x91, 0x76, 0x52, 0xc3, 0xce, 0xc4, 0x95, 0x74, 0xdd, 0xe6, 0x33, 0x53, 0x27, 0x97, 0x70, 0xfe,
	0x57, 0x20, 0x04, 0x1b, 0x33, 0xa8, 0xf9, 0x9b, 0x0c, 0x14, 0x59, 0xb7, 0x75, 0xaf, 0x02, 0x99,
	0xb5, 0xaf, 0x02, 0x1f, 0x78, 0x45, 0xda, 0x81, 0x22, 0x33, 0x24, 0xdc, 0x44, 0x58, 0x2b, 0xfd,
	0xba, 0x94, 0x5f, 0x7c, 0x5d, 0x5a, 0xd8, 0x9c, 0x0a, 0x4b, 0x9b, 0xd3, 0x1e, 0x08, 0x9c, 0xe0,
	0x61, 0xdd, 0x66, 0xac, 0x22, 0x65, 0xd5, 0x18, 0xae, 0x62, 0xdd, 0x26, 0xcc, 0xd6, 0x2f, 0x79,
	0xf5, 0xc4, 0xbe, 0x61, 0xb2, 0xcf, 0x8a, 0x9f, 0x41, 0x21, 0xfe, 0xe8, 0xb8, 0x91, 0xbc, 0x15,
	0x86, 0x54, 0xf6, 0xe7, 0x39, 0x8c, 0x85, 0x7e, 0x00, 0xe5, 0xf0, 0xaf, 0x7f, 0xf8, 0xe7, 0xc7,
	0xe4, 0x33, 0x41, 0x44, 0x3f, 0xe5, 0x1c, 0x35, 0x62, 0xbf, 0xf8, 0x55, 0x06, 0xee, 0xad, 0x7c,
	0x7a, 0x46, 0x4f, 0xe1, 0x43, 0x8f, 0xcf, 0xc2, 0x9d, 0x9b, 0x48, 0x03, 0x89, 0x16, 0xc0, 0x42,
	0x06, 0x7d, 0x02, 0x4f, 0xd6, 0x91, 0xa4, 0x33, 0xb1, 0x37, 0x16, 0x47, 0x52, 0x57, 0xc8, 0xbe,
	0xf8, 0x8f, 0x2c, 0x34, 0xd6, 0x7d, 0x84, 0x41, 0x2d, 0xf8, 0xc0, 0x67, 0x18, 0x21, 0xf3, 0x01,
	0xce, 0xf0, 0xec, 0x98, 0xdd, 0x18, 0x6f, 0xe0, 0xbc, 0xee, 0x0a, 0xb9, 0x1b, 0xd4, 0xb0, 0xbd,
	0xd6, 0x17, 0xf2, 0x37, 0xa8, 0x19, 0xce, 0x3c, 0xfd, 0xbd, 0x2f, 0x14, 0xc8, 0xac, 0xd7, 0x50,
	0xde, 0x86, 0x6f, 0xd2, 0xbe, 0x50, 0x44, 0x1f, 0xc3, 0xe3, 0x35, 0x34, 0x89, 0x3f, 0x71, 0xfb,
	0x42, 0xe9, 0x06, 0x65, 0x67, 0xae, 0x65, 0x60, 0x52, 0x1d, 0xf8, 0x42, 0x19, 0x3d, 0x87, 0xa7,
	0x6b, 0x67, 0x67, 0x90, 0xd2, 0x8c, 0xe6, 0x85, 0x50, 0x79, 0xf1, 0xe7, 0x19, 0x68, 0xae, 0xff,
	0xd4, 0xb4, 0x7a, 0x7a, 0x89, 0x8f, 0x4d, 0xc2, 0x9d, 0xd5, 0x16, 0x71, 0x8a, 0x38, 0x9b, 0x79,
	0xee, 0x35, 0x36, 0xd9, 0xda, 0xaf, 0xa5, 0xa9, 0xf8, 0x8f, 0xb1, 0x11, 0x60, 0x53, 0xc8, 0xbe,
	0x79, 0xf6, 0x47, 0x1f, 0x4f, 0xac, 0xe0, 0x72, 0x7e, 0xbe, 0x6f, 0xb8, 0xd3, 0x97, 0x33, 0xdd,
	0xd3, 0x6d, 0xcb, 0x79, 0x39, 0x71, 0x3f, 0x33, 0xdd, 0x40, 0x6f, 0xbf, 0x0c, 0x63, 0xf9, 0x7f,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x52, 0xc0, 0x8b, 0x4d, 0x7c, 0x27, 0x00, 0x00,
}
